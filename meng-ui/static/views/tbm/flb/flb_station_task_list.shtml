<!--
  ~ Copyright 2019 SF Airlines Co., Ltd. All rights reserved.
  ~ 本文件仅限于顺丰航空有限公司内部传阅，禁止外泄以及用于其他的商业目的。
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title data-i18n="">航站任务列表</title>
    <style type="text/css">
        .search-wrap {
            border: none;
            /*margin-top: 16px;*/
            background-color: #fff;
            padding-bottom: 8px;
        }

        button {
            border: none;
        }

        .view-btn, .addTaskBtn {
            -moz-appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            text-decoration: underline;
            color: #1989FA;
            background: none;
        }

        .float-left {
            float: left;
        }

        .float-right {
            float: right;
        }

        .search-form {
            overflow: hidden;
        }

        .frame-title {
            font-family: HiraginoSansGB-W6;
            font-size: 14px;
            color: #4A4A4A;
            letter-spacing: 0;
            font-weight: bold;
        }

        .search-form dl, .search-form dl dt, .search-form dl dd {
            float: left;
        }

        .search-form dl dt {
            width: 100px;
        }

        .param-title {
            font-family: HiraginoSansGB-W3;
            font-size: 14px;
            color: #4A4A4A;
        }

        .search-form dl .param-title-short {
            width: 60px;
        }

        .search-form dl .param-title-middle {
            width: 90px;
        }

        .param-content {
            margin: 0 16px 0 0;
            position: relative;
        }

        .search-form dl .searchBtn-wrap {
            width: auto;
        }

        .searchBtn, .clearBtn {
            display: inline-block;
        }

        .clearBtn {
            margin-left: 16px;
        }

        #stationBtn, #acBtn {
            position: absolute;
            top: 5px;
            right: 3px;
            cursor: pointer;
            display: inline-block;
        }

        .add-task {
            margin-right: 20px;
        }

        /*修改datagrid表格樣式*/
        .datagrid-header-inner {
            background-image: none;
        }

        .datagrid-row-alt {
            background: #fafbfc;
        }

        .datagrid-header td, .datagrid-body td {
            border-color: transparent;
        }

        .datagrid-header-inner table .datagrid-header-rownumber, .datagrid-header-inner table .datagrid-cell, .datagrid-body-inner table .datagrid-td-rownumber, .datagrid-body-inner table .datagrid-cell-rownumber {
            background-color: #fff !important;
            background: #fff;
        }

        .datagrid-body-inner table .datagrid-row-alt .datagrid-td-rownumber, .datagrid-body-inner table .datagrid-row-alt .datagrid-td-rownumber .datagrid-cell-rownumber {
            background: #fafbfc !important;

        }

        .datagrid-toolbar {
            display: none;
        }

        .datagrid-header, datagrid-header-inner {
            background: #fff;
        }

        .datagrid-htable tr, .datagrid-btable tr {
            height: 34px;
        }

        .datagrid-header td.datagrid-header-over {
            background: none;
            background-image: none;
        }

        .datagrid-row-over {
            background: #ecf3ff;
        }

        .pagination-info {
            margin: 0 38px 0 0;
        }

        .datagrid-row-selected {
            color: inherit;
        }

        .type_box {
            width: 100%;
            height: 80px;
            margin-top: 15px;
        }

        .type_box input {
            margin-left: 60px;
            margin-right: 5px;
            margin-bottom: 12px;
        }

        .boumnn {
            text-align: right;
            margin-top: 13px;
        }

        .boumnn a {
            padding: 3px 18px;
            background: #2465a8;
            color: #fff;
            border-radius: 4px;
        }
    </style>
</head>
<body class="ibody">

<div id="tt" class="easyui-tabs" style="width:100%; height: 100%">
    <fieldset class="search-wrap">
        <p class="red" style="color: red;padding: 10px 10px 0">高：高高原运行  跨：延伸跨水  T：TCAS 7.1  R：基本RNP 1  星：卫星电话（SATCOM  4H/8H：提前4或8小时航前 </p>
        <form id="ffSearch" class="form-horizontal">
            <div class="search-form">
                <dl>
                    <dt class="param-title">时间范围:</dt>
                    <dd class="param-content">
                        <input class="easyui-combobox" id="dateRange" name="dateRange"
                               style="height: 25px;"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-short">日期:</dt>
                    <dd class="param-content">
                        <input class="easyui-datebox" data-options="required:true,showSeconds:false" id="date"
                               name="date" style="height: 25px;"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-middle">时间:</dt>
                    <dd class="param-content">
                        <input class="easyui-textbox" id="time" name="time" style="height: 25px;"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-middle">机型变动:</dt>
                    <dd class="param-content">
                        <input class="easyui-combobox" id="flightSituation" name="flightSituation" style="height: 25px;"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-middle">是否跟机:</dt>
                    <dd class="param-content">
                        <input class="easyui-combobox" id="isReleaseLimit" name="isReleaseLimit" style="height: 25px;"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="searchBtn-wrap">
                        <a class="searchBtn" data-i18n="common:COMMON_OPERATION.QUERY"
                           data-options="iconCls:'icon-search'" onClick="searchData()"
                           type="button">
                            查询</a>
                    </dt>
                    <dd>
                        <a class="clearBtn" data-i18n="common:COMMON_OPERATION.RESET"
                           data-options="iconCls:'icon-clear'" onClick="doClear_()">
                            重置</a>
                    </dd>
                </dl>
            </div>

            <div class="search-form">
                <dl>
                    <dt class="param-title">航站:</dt>
                    <dd class="param-content">
                        <input class="easyui-textbox" id="station" name="station"
                               style="height: 25px;"/>
                        <img alt="" id="stationBtn" onClick="stationQuery()" src="/img/search.png"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-short">飞机:</dt>
                    <dd class="param-content">
                        <input class="easyui-textbox" id="ac" name="ac" style="height: 25px;"/>
                        <img alt="" id="acBtn" onClick="acQuery()" src="/img/search.png"/>
                    </dd>
                </dl>
                <dl>
                    <dt class="param-title param-title-middle">运行限制:</dt>
                    <dd class="param-content">
                        <input class="easyui-textbox" id="limitNames" name="limitNames"
                               style="height: 25px;"/>
                    </dd>
                </dl>
            </div>
        </form>
        <div class="frame-header">
            <div class="float-right add-task">
                <a auth = "FLIGHT_LINE_COUNT" class="searchBtn" data-options="iconCls:'icon-search'" onClick="overTwiceCompute()">
                    <span>超两次日检卡计算</span>
                </a>
                <a auth = "FLIGHT_LINE_NEWTASK" class="searchBtn" data-options="iconCls:'icon-search'" onClick="doAddLineJob_()">
                    <span>新增任务</span>
                </a>
                <a auth = "FLIGHT_LINE_ASSIGN" class="searchBtn" data-options="iconCls:'icon-search'"  onClick="assignTask()">
                    <span>分配</span>
                </a>
                <a auth = "FLIGHT_LINE_EXPORT" class="searchBtn" data-options="iconCls:'icon-search'" onClick="exportexel(1)">
                    <span>导出</span>
                </a>
                <a auth = "FLIGHT_LINE_DOWNLOAD" class="searchBtn" data-options="iconCls:'icon-search'" onClick="exportexel(2)">
                    <span>下载</span>
                </a>
                <a auth = "FLIGHT_LINE_EXPORTTMC" class="searchBtn" data-options="iconCls:'icon-search'" onClick="export_excel_tmc()">
                    <span>导出TMC清单</span>
                </a>
            </div>
        </div>
    </fieldset>

    <table id="dg"></table>
</div>
<div class="easyui-dialog" id="dd" style="width:300px;height:200px;padding:10px;" title="Select Check Types">
    <div class="title" style="font-size: 14px">Check Type:</div>
    <div class="type_box" id="type_input">
        <input id="a1" type="checkbox" value="Pr/F"><label for="a1">Pr/F</label>
        <input id="a2" type="checkbox" value="T/R"><label for="a2">T/R </label></br>
        <input id="a3" type="checkbox" value="STA"><label for="a3">STA </label>
        <input id="a4" type="checkbox" value="TBF,TBFTR"><label for="a4">滑回</label></br>
        <input id="a5" type="checkbox" value="Po/F,O/G"><label for="a5">Po/F & O/G</label>
    </div>
    <div class="boumnn">
        <a onclick="Determine_export()">确定</a>
        <a onclick="close_dialog()" style="background-color: #ce3c3c">关闭</a>
    </div>
</div>

<div id="ACQueryWindow" class="easyui-window" title="A/C Query" data-options="modal:true,closed:true"
     style="width:46%;height:50%;padding:5px 5px 5px 5px;">
    <table id="ACDg" pagination="true"></table>
</div>

<!--<script type="text/javascript" src="/js/datagrid_utils.js"></script>-->
<script type="text/javascript" src="/views/pm/mc/js/datagrid_utils.js"></script>
<script type="text/javascript" src="/js/date_format.js"></script>
<script src="/views/defect/common/export_unsfa.js" type="text/javascript"></script>


<script type="text/javascript">
    var PAGE_DATA = {};
    var COMBOBOX_DATA = {};
    var downType = 0;

    function getUrlParam(name) {
        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象
        var r = window.location.search.substr(1).match(reg);  //匹配目标参数
        if (r != null) return decodeURI(r[2]);
        return null; //返回参数值
    }

    function i18nCallBack() {
        $('#dd').dialog('close');
        // 绑定回车查询事件
        bindFormonSearch_('#ffSearch', function () {
            searchData();
        });
        if (getUrlParam('searchList') != null) {
            var data = JSON.parse(getUrlParam('searchList'));
            var $date_ = $('#date');
            var $time_ = $('#time');
            $date_.datebox("setValue", data.date);
            $time_.textbox("setValue", data.time);
            $('#station').textbox("setValue", data.station);
            $('#ac').textbox("setValue", data.ac);
            $('#limitNames').textbox("setValue", data.limitNames);
            InitFuncCodeRequest_({
                data: {
                    domainCode: "TBM_DATE_RANGE",
                    FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        PAGE_DATA['dateRange'] = DomainCodeToMap_(jdata.data["TBM_DATE_RANGE"]);

                        $('#dateRange').combobox({
                            panelHeight: '50px',
                            data: jdata.data.TBM_DATE_RANGE,
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            editable: false, // 是否可编辑
                            multiple: false, //是否可多选
                            require: true, //是否必须
                            onLoadSuccess: function () {
                                $('#dateRange').combobox('setValue', data.dateRange);
                            }
                        });
                        InitDataGrid();
                    } else {
                        MsgAlert({content: jdata.msg, type: 'error'});
                    }
                }
            });

        } else {
            setInitialParamValue();
            InitFuncCodeRequest_({
                data: {
                    domainCode: "TBM_DATE_RANGE",
                    FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        PAGE_DATA['dateRange'] = DomainCodeToMap_(jdata.data["TBM_DATE_RANGE"]);

                        $('#dateRange').combobox({
                            panelHeight: '50px',
                            data: jdata.data.TBM_DATE_RANGE,
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            editable: false, // 是否可编辑
                            multiple: false, //是否可多选
                            require: true, //是否必须
                            onLoadSuccess: function () {
                                $('#dateRange').combobox('setValue', 1)
                            }
                        });

                        InitDataGrid();
                    } else {
                        MsgAlert({content: jdata.msg, type: 'error'});
                    }
                }
            });
        }
    }

    /**
     * 初始化查询条件
     * */
    function setInitialParamValue() {
        //设置时间
        var curr_time = new Date();
        var $date_ = $('#date');
        var $time_ = $('#time');

        $date_.datebox("setValue", myformatter(curr_time));
        $time_.textbox("setValue", "18:00");
        $('#dateRange').combobox('setValue', 1);
        // searchData()

    }

    function myformatter(date) {
        var y = date.getFullYear();
        var m = date.getMonth() + 1;
        var d = date.getDate();
        return y + '-' + (m < 10 ? ('0' + m) : m) + '-' + (d < 10 ? ('0' + d) : d);
    }

    function InitDataGrid() {
        $("#dg").MyDataGrid({
            identity: 'dg',
            sortable: true,
            singleSelect: true,
            queryParams: {
                dateRange: $('#dateRange').textbox('getValue'),
                date: $('#date').datebox('getValue'),
                time: $('#time').textbox('getValue'),
                station: $('#station').textbox('getValue'),
                ac: $('#ac').textbox('getValue'),
                limitNames: $('#limitNames').textbox('getValue'),
                excludeOG: 1
            },
            pageSize: 200,
            pagination: true,     //开启分页
            fitColumns: true,
            frozenColumns: [[
            ]],
            columns: {
                param: {FunctionCode: 'STATION_TASK_LIST'},
                alter: {
                    DATA_RANGE: {
                        formatter: function (value) {
                            return PAGE_DATA['dateRange'][value];
                        }
                    },
                    FLIGHT_NO: {
                        formatter: function (value, rowData) {
                            if (rowData.flgVr) {
                                if (rowData.flgVr == "V1") {
                                    return value + "(备降)"
                                } else if (rowData.flgVr == "V2") {
                                    return value + "(调机)"
                                } else if (rowData.flgVr == "R2") {
                                    return value + "(重飞)"
                                } else if (rowData.flgVr == "R1") {
                                    return value + "(返航)"
                                } else {
                                    return value + "(" + rowData.flgVr + ")"
                                }
                            } else {
                                return value
                            }
                        }
                    },
                    FLIGHT_DATE: {
                        formatter: formatFlightDate
                    },
                    PLAN_TO: {
                        formatter: format2Time
                    },
                    PLAN_LDG: {
                        formatter: format2Time
                    },
                    ETD: {
                        formatter: format2Time
                    },
                    ETA: {
                        formatter: format2Time
                    },
                    TO: {
                        formatter: format2Time
                    },
                    LDG: {
                        formatter: format2Time
                    },
                    LIMIT_NAMES_SHORT: {
                        formatter: formatLimt      //对"跨"和"高"进行绿色显示
                    },
                    minorModelShort: {
                        formatter: function (value, rowData) {
                            var addVal = "";
                            if(rowData.flightSituation != ""){
                                addVal += rowData.flightSituation;
                            }
                            if(rowData.isReleaseLimit == 'Y'){
                                if(rowData.flightArrange == "1"){
                                    addVal += ",<font color='green'>跟</font>";
                                } else {
                                    addVal += ",<font color='red'>跟</font>";
                                }
                            }
                            if(addVal != ""){
                                return "<span >"+value+"("+addVal+")</span>";
                            } else {
                                return "<span >"+value+"</span>";
                            }
                        }
                    },
                    AC_STATUS: {
                        formatter: function (value, rowData) {
                            return "<button class='view-btn' style='width: 50px; height: 20px;' type='button' onclick='viewStatus(&apos;" + JSONstringify(rowData) + "&apos;)'>查看</button>";
                        }
                    },
                    TR_TASK: {
                        formatter: function (value, rowData, rowIndex) {
                            var bgColor = bgColorFormat(rowData.status1);
                            var fontColor = overTwoCard(rowData,rowData.status1);
                            var fontColorBlue = fontColorFormat('TR_TASK',rowData);
                            if (value) {
                                var str = "<button class='zhong' style='width: 50px;padding-top: 4px;padding-bottom: 4px; background-color:" + bgColor + fontColorBlue + fontColor +";' type='button' " +
                                    "onclick='openDetail(&apos;" + value + "&apos;,&apos;" + rowData.WORK_ORDER_ID
                                    + "&apos;,&apos;" + rowData.AC + "&apos;,&apos;" + rowData.FLIGHT_NO
                                    + "&apos;,&apos;" + rowData.FLIGHT_DATE + "&apos;,&apos;" + rowData.flightId
                                    + "&apos;,&apos;" + rowData.DEPARTURE + "&apos;,&apos;" + rowData.ARRIVAL
                                    + "&apos;,&apos;" + rowData.status1 + "&apos;)'>" + value + "</button>";
                                // if (rowData && (rowData.TBF || rowData.TBFTR)) {
                                return btn_tbf(rowData, str);
                                // }
                            }
                        }
                    },
                    POF_TASK: {
                        formatter: function (value, rowData, rowIndex) {
                            var bgColor = bgColorFormat(rowData.status2);
                            var fontColorBlue = fontColorFormat('POF_TASK',rowData);
                            if (value) {
                                return "<button style='width: 50px;padding-top: 4px;padding-bottom: 4px;background-color:" + bgColor + fontColorBlue  +";' type='button' " +
                                    "onclick='openDetail(&apos;" + value + "&apos;,&apos;" + rowData.pofWorkOrderId
                                    + "&apos;,&apos;" + rowData.AC + "&apos;,&apos;" + rowData.FLIGHT_NO
                                    + "&apos;,&apos;" + rowData.FLIGHT_DATE + "&apos;,&apos;" + rowData.flightId
                                    + "&apos;,&apos;" + rowData.DEPARTURE + "&apos;,&apos;" + rowData.ARRIVAL
                                    + "&apos;,&apos;" + rowData.status2 + "&apos;)'>" + value + "</button>";
                            }
                        }
                    }
                }
            },
            onLoadSuccess: function (value, rowData, rowIndex) {

            },
            contextMenus: []
        });
    }

    /**组装滑回按钮**/
    function btn_tbf(row, str) {
        var btnStr = "";

        if (row.TBF) {
            var t = row.TBF.split(",");
            var bgColor = bgColorFormat(row.status1);
            var fontColor = overTwoCard(row,row.status1);
            var fontColorBlue = fontColorFormat('TBF',row);
            // 滑回（TBF）任务的放行状态是根据依附的工单放行状态决定的
            for (let index in t) {
                btnStr += "<button style='margin-bottom:5px;width: 50px;padding-top: 4px;padding-bottom: 4px; background-color:" + bgColor + fontColorBlue+ fontColor +";'" +
                    " type='button' onclick='openDetail(&apos;TBF&apos;,&apos;" + t[index]
                    + "&apos;,&apos;" + row.AC + "&apos;,&apos;" + row.FLIGHT_NO
                    + "&apos;,&apos;" + row.FLIGHT_DATE + "&apos;,&apos;" + row.flightId
                    + "&apos;,&apos;" + row.DEPARTURE + "&apos;,&apos;" + row.ARRIVAL

                    + "&apos;,&apos;" + row.status1 + "&apos;)'>TBF</button><br>";
            }
        }
        if (row.TBFTR) {
            var t1 = row.TBFTR.split(",");
            var status = row.tbftrStatus.split(",");
            // 滑回T/R（TBFTR）任务的放行状态是根据自己本身的工单状态来决定的
            for (let index in t1) {
                var bgColor = bgColorFormat(status[index]);
                var fontColor = overTwoCard(row,status[index]);
                var fontColorBlue = fontColorFormat('TBFTR',row);
                btnStr += "<button style='margin-bottom:5px;width: 50px;padding-top: 4px;padding-bottom: 4px; background-color:" + bgColor + fontColorBlue +fontColor +";'" +
                    " type='button' onclick='openDetail(&apos;TBFTR&apos;,&apos;" + t1[index]
                    + "&apos;,&apos;" + row.AC + "&apos;,&apos;" + row.FLIGHT_NO
                    + "&apos;,&apos;" + row.FLIGHT_DATE + "&apos;,&apos;" + row.flightId
                    + "&apos;,&apos;" + row.DEPARTURE + "&apos;,&apos;" + row.ARRIVAL
                    + "&apos;,&apos;" + status[index] + "&apos;)'>TBFTR</button><br>";
            }

        }
        btnStr += str;
        return btnStr;
    }

    /** 任务的背景色*/
    function bgColorFormat(status) {
        var bgColor;
        if (status && status === 'RELEASED') {
            bgColor = '#00FF00';
        } else {
            bgColor = '#FFA500';
        }
        return bgColor;
    }

    //字体的颜色
    function fontColorFormat(direction,status){
        var fontColorBlue;
        //如果左边有日检卡
        if(direction == 'TR_TASK' && !!status.hasDailyCard1){
            fontColorBlue = ';color:#005fff;font-weight:800';
        } else if(direction == 'POF_TASK' && !!status.hasDailyCard2){
            fontColorBlue = ';color:#005fff;font-weight:800';
        }  else if(direction == 'TBF' && !!status.hasTbfDailyCard){
            fontColorBlue = ';color:#005fff;font-weight:800';
        }  else if(direction == 'TBFTR' && !!status.hasTbftrDailyCard){
            fontColorBlue = ';color:#005fff;font-weight:800';
        } else {
            fontColorBlue = '';
        };
        return fontColorBlue;
    }

    //如果超过两个日检卡且未放行，则字体为红色,否则为原来的颜色
    function overTwoCard(card,status) {
        var fontColorRed ;
        if(!!card.dailyInspectionCardOver && (status && status != 'RELEASED')){
            fontColorRed = ';color:#fd0505;font-weight:800';
        } else {
            fontColorRed = '';
        }
        return fontColorRed;
    }

    function formatLimt(cellvalue, row) {
        if (cellvalue) {
            var show = "";
            var arr = cellvalue.split(',');
            for (var i = 0; i < arr.length; i++) {
                var detail = arr[i];
                if (detail == "跨") {
                    if (row.LIMIT_YSK === '1') {
                        if (show) {
                            show += "," + "<font color='green'>跨</font>";
                        } else {
                            show += "<font color='green'>跨</font>";
                        }
                    } else {
                        if (show) {
                            show += "," + "<font color='red'>跨</font>";
                        } else {
                            show += "<font color='red'>跨</font>";
                        }
                    }
                } else if (detail == "高") {
                    if (row.LIMIT_GGY === '1') {
                        if (show) {
                            show += "," + "<font color='green'>高</font>";
                        } else {
                            show += "<font color='green'>高</font>";
                        }
                    } else {
                        if (show) {
                            show += "," + "<font color='red'>高</font>";
                        } else {
                            show += "<font color='red'>高</font>";
                        }
                    }
                } else {
                    if (show) {
                        show += ",<font color='red'>" + detail + "</font>";
                    } else {
                        show += "<font color='red'>" + detail + "</font>";
                    }
                }
            }
        }
        if (show) {
            if(row.prfWarnTime){
                show += ",<font color='red'>" + row.prfWarnTime + "</font>";
            }
            return show;
        } else {
            if(row.prfWarnTime) {
                show = "<font color='red'>" + row.prfWarnTime + "</font>";
            }
            return  show || ''
        }
    }

    function formatFlightDate(cellvalue,rowObject) {

        var return_value = "";

        if (cellvalue != null) {
            return_value =  cellvalue.split(" ")[0];
        }

        var hours_ = 0;

        if(cellvalue && rowObject.FLIGHT_END_DATE){
            hours_ = GetNumberOfHours(cellvalue,rowObject.FLIGHT_END_DATE);
        }

        if(rowObject.FLIGHT_END_DATE != null && rowObject.isOg==1 && rowObject.POF_TASK=='O/G' && hours_ >=24){
            return_value =  return_value+"</br>"+rowObject.FLIGHT_END_DATE.split(" ")[0];
        }

        return return_value;
    }

    function GetNumberOfHours(date1,date2){//获得天数
        //date1：开始日期，date2结束日期
        var a1 = Date.parse(new Date(date1));
        var a2 = Date.parse(new Date(date2));
        var hours = parseInt((a2-a1)/ (1000 * 60 * 60));//核心：时间戳相减，然后除以天数
        return hours
    }

    function format2Date(cellvalue) {
        if (cellvalue != null) {
            return cellvalue.split(" ")[0];
        }
        return "";
    }

    /**
     * 截取时间段
     * */
    function format2Time(cellvalue) {
        if (cellvalue != null) {
            var t = cellvalue.split(" ")[1];
            var h = t.split(":")[0];
            var m = t.split(":")[1];
            return h + ":" + m;
        }
        return "";
    }

    //刷新
    function reload_() {
        window.location.href = "/views/tbm/flb/flb_station_task_list.shtml";
        $("#dg").datagrid("reload");
    }

    //打开航站任务详细页面
    function openDetail(operation, orderId, acReg, flightNo, flightDate, flightId, departure, arrival, isReleased) {
        //传递参数到跳转的页面
        var data = $("#ffSearch").serializeObject();
        var dataStr = JSON.stringify(data);
        console.log(dataStr);
        var url = "/views/tbm/flb/flb_station_task_detail.shtml?operation=" + operation + "&orderId=" + orderId +
            "&acReg=" + acReg + "&flightNo=" + flightNo + "&jobDate=" + flightDate + "&flightId=" + flightId + "&departure=" + departure
            + "&arrival=" + arrival + "&isReleased=" + isReleased + "&searchList=" + dataStr;
        window.location.href = url;
    }

    /*打开航线任务添加窗口*/
    function doAddLineJob_(row) {
        // var row = JSON.parse(row);
        var title_ = $.i18n.t('添加航段滑回任务');
        var currentWidth = ($(window).width() * 0.4).toString();
        var currentHeight = ($(window).height() * 0.4).toString();
        ShowWindowIframe({
            width: currentWidth,
            height: currentHeight,
            title: title_,
            param: row,
            url: "/views/tbm/flb/add_line_job.shtml"
        });
    }

    //查询
    function searchData() {
        var chaxun = true;
        var aaa = $('#date').datebox('getValue');
        var time_a = $('#time').textbox('getValue');
        if (!blurdate(aaa)) {
            chaxun = false;
        }
        if (!blurtime(time_a)) {
            chaxun = false;
        }
        if (chaxun) {
            onSearch_('dg', '#ffSearch');
        }
    }

    //验证日期年月日
    function blurdate(val) {
        var regex_data = /^(?:19|20)[0-9][0-9]-(?:(?:0[1-9])|(?:1[0-2]))-(?:(?:[0-2][1-9])|(?:[1-3][0-1]))$/;
        // /^(?:19|20)[0-9][0-9]-(?:(?:0[1-9])|(?:1[0-2]))-(?:(?:[0-2][1-9])|(?:[1-3][0-1])) (?:(?:[0-2][0-3])|(?:[0-1][0-9])):[0-5][0-9]:[0-5][0-9]$/;
        if (!regex_data.test(val)) {
            alert("请输入正确的时间格式，如：2019-03-07");
            return false;
        } else {
            return true;
        }
    }

    //验证时间时分
    function blurtime(val) {
        var regex_time = /^(?:(?:[0-2][0-3])|(?:[0-1][0-9])):[0-5][0-9]$/;
        if (!regex_time.test(val)) {
            alert("请输入正确的时间格式，如：10:00");
            return false;
        } else {
            return true;
        }
    }

    //重置time
    function doClear_() {
        $("#ffSearch").form('clear');
        setInitialParamValue();
        searchData();
    }

    //todo 如何传参？？？？
    function viewStatus(row) {
        var rowData = JSON.parse(row);
        var curWidth = $(window).width().toString();
        var curheight = $(window).height().toString();
        // var url;
        // url = "/views/defect/trouble_follow_up.shtml?acReg="+rowData.AC;
        // window.location.href = url;
        // window.resizeTo("830", "720");
        ShowWindowIframe({
            width: curWidth * 0.8,
            height: curheight * 0.8,
            title: '',
            param: {acReg: rowData.AC},
            url: " /views/defect/trouble_follow_up.shtml"
        });
    }

    // 查询station的点击事件
    function stationQuery() {
        var title_ = $.i18n.t('航站查询');
        var curWidth = ($(window).width() * 0.5).toString();
        var curheight = ($(window).height() * 0.5).toString();
        ShowWindowIframe({
            width: curWidth,
            height: curheight,
            title: title_,
            param: {},
            url: "/views/tbm/flb/station_query.shtml"
        });
    }

    //查询A/C的点击事件
    function acQuery() {
        $('#ACQueryWindow').window('open');
        InitACDataGrid();
    }

    function InitACDataGrid() {
        $("#ACDg").MyDataGrid({
            identity: 'ACDg',
            sortable: true,
            singleSelect: true,
            pagination: true,     //开启分页
            fitColumns: true,
            striped: false,
            showHeader: false,
            columns: {
                param: {FunctionCode: 'FLB_AC_LIST'},
                alter: {}
            },
            onLoadSuccess: function () {
            },
            // 固定表格所占整个表格高度
            resize: function () {
                return tabs_standard_resize($('#tt'), 0.45, 0.54, 140, -6);
            },
            contextMenus: [],
            toolbar: [],
            onClickRow: function (rowIndex, rowData) {
            },
            onDblClickRow: function () {
                var row = $('#ACDg').datagrid('getSelected'); //获取所选行的数据
                $("#ac").textbox("setValue", row.tail); //给station控件赋值
                $('#ACQueryWindow').window('close'); //关闭弹窗
            }
        });
    }

    //当输入框改变了之后做出的动作
    //校验输入的日期及日期格式
    $(function () {
        $("#flight_time_td .validatebox-text").on('blur', function () {
            alert("===================");
            var flightDate = $("#flight_time_td .validatebox-text").validatebox('getValue');
            console.log("flihtDate = " + flightDate);

            //如果输入有误，1）提出警示；2） 确认警示后，要重置输入框；
            if (isDate(flightDate)) {
                alert("(" + flightDate + ") Datetime format is wrong. eg：2013-1-1 or 2013-01-01");
                $("#flight_time_td .validatebox-text").validatebox('setValue', '');
            }
        });
        $("#flightSituation").combobox({
            valueField: 'id',
            textField: 'text',
            data: [{id: "", text: ""}, {id: "变", text: "变"}, {id: "新", text: "新"}, {
                id: "无",
                text: "无"
            }],

        });
        $("#isReleaseLimit").combobox({
            valueField: 'id',
            textField: 'text',
            data: [{id: "", text: ""}, {id: "Y", text: "Y"}, {id: "N", text: "N"}],
        });


    });

    function isDate(str) {
        var arr = str.split("-");
        if (arr.length === 3) {
            var intYear = parseInt(arr[0], 10);
            var intMonth = parseInt(arr[1], 10);
            var intDay = parseInt(arr[2], 10);
            if (isNaN(intYear) || isNaN(intMonth) || isNaN(intDay)) {
                return false;
            }
            if (intYear > 4200 || intYear < 1900 || intMonth > 12 || intMonth < 0 || intDay > 31 || intDay < 0) {
                return false;
            }
            if ((intMonth === 4 || intMonth === 6 || intMonth === 9 || intMonth === 11) && intDay > 30) {
                return false;
            }

            if (intYear % 100 === 0 && intYear % 400 || intYear % 100 && intYear % 4 === 0) {
                if (intDay > 29) return false;
            } else {
                if (intDay > 28) return false;
            }
            return true;
        }
        return false;
    }

    function assignTask() {
        var title_ = $.i18n.t('任务分配');
        var currentWidth = ($(window).width() * 0.5).toString();
        var currentHeight = ($(window).height() * 0.5).toString();
        ShowWindowIframe({
            width: 800,
            height: currentHeight,
            title: title_,
            param: {},
            url: "/views/tbm/flb/assign_flight_station_task.shtml"
            // url: "/views/tbm/flb/xinyemian.shtml"
        });
    }


    //导出TMC清单列表
    function export_excel_tmc(){
        //$("#export_excel_defect_log").click(function(){
        let mydate = new Date();
        mydate.setMinutes(mydate.getMinutes() - mydate.getTimezoneOffset());

        $.exportExcel({
            url: "/api/v1/defect/defect_base_info/exportTmcLog",
            filename: "TMC任务清单" + mydate.toJSON().substr(0, 13).replace(/[-T]/g, '')+mydate.getMinutes(),
            success: function (data) {
                console.log(data)
            }
        })
        //});
    }


    //导出弹窗
    function exportexel(val) {
        downType = val;
        $("#dd").dialog({
            resizable: false,
            modal: true,
            top: '110px'
        });
    }

    function close_dialog() {
        $('#dd').dialog('close');
    }

    //确定导出
    function Determine_export() {

        if (1 != downType && 2 != downType) {
            return;
        }

        var actionExport = '/api/v1/plugins/EXPORT_STATION_TASK';
        var actionDownLoad = '/api/v1/plugins/DOWNLOAD_STATION_TASK';

        let name_bal = "";
        $.each($('#type_input input:checkbox:checked'), function () {

            if (name_bal.length > 0) {
                name_bal += ",";
            }

            name_bal += $(this).val();
        });

        if (name_bal.length <= 0) {
            alert("请至少选择一个Check Type!");
            return;
        }

        var con = "<form id='_f0_rm' method='post' ></form>";
        $("#_f0_rm").remove();
        $("body").append(con);

        var dateRange = $("<input type='hidden' name='ser_dateRange'/>");
        dateRange.val($('#dateRange').textbox('getValue'));
        $("#_f0_rm").append(dateRange);

        var date = $("<input type='hidden' name='ser_date' />");
        date.val($("#date").datebox("getValue"));
        $("#_f0_rm").append(date);

        var time = $("<input type='hidden' name='ser_time' />");
        time.val($("#time").textbox('getValue'));
        $("#_f0_rm").append(time);

        var station = $("<input type='hidden' name='ser_station' />");
        station.val($("#station").textbox('getValue'));
        $("#_f0_rm").append(station);

        var ac = $("<input type='hidden' name='ser_ac' />");
        ac.val($("#ac").textbox('getValue'));
        $("#_f0_rm").append(ac);

        var limitNames = $("<input type='hidden' name='ser_limitNames' />");
        limitNames.val($("#limitNames").textbox('getValue'));
        $("#_f0_rm").append(limitNames);

        var ct = $("<input type='hidden' name='ser_ct' />");
        ct.val(name_bal);
        $("#_f0_rm").append(ct);

        $("#_f0_rm").attr('action', 1 == downType ? actionExport : actionDownLoad);

        if (1 == downType) {

            $("#_f0_rm").submit();
            $('#dd').dialog('close');
        } else {
            var $form = $("#_f0_rm");
            var datas = $form.serializeObject();

            datas = $.extend({}, datas, {FunctionCode: 'DOWNLOAD_STATION_TASK'});
            InitFuncCodeRequest_({
                data: datas, successCallBack: function (jdata) {
                    console.log("成功返回，data:" + JSON.stringify(jdata, null, '  '));
                    if (jdata.code !== 200) {
                        window.alert("下载失败." + jdata.msg);
                    } else {
                        var filesForm = "<form id='_f1m' method='post' action='/api/v1/plugins/DOWNLOAD_FILES'></form>";
                        $("#_f1m").remove();
                        $("body").append(filesForm);

                        console.log(jdata.data);
                        var filePath = $("<input type='hidden' name='filePath'/>");
                        filePath.val(jdata.data);
                        $("#_f1m").append(filePath);

                        $("#_f1m").submit();
                        $('#dd').dialog('close');
                    }
                }
            });
        }
    }

    //生成文件名
    function genFileName(name_bal) {

        var acReg = $("#ac").textbox('getValue');
        var date = $("#date").datebox("getValue");
        var station = $("#station").textbox('getValue');
        var range = $('#dateRange').textbox('getValue');

        var filename = "";
        if (station != "") {
            filename += station + "_";
        }
        if (acReg != "") {
            filename += acReg + "_";
        }
        filename += date + "_";
        filename += range + "day"
            + "_";
        filename += name_bal
            .replace(/[/]/ig, "").replace(/,|&/ig,
                "_");
        return filename;
    }

    //    超两次日检卡计算
    function overTwiceCompute() {
        $.messager.confirm('提示！','刷新数据约需30秒，请30秒后再重新查询。', function (r) {
            if(r){
                InitFuncCodeRequest_({
                    data: {
                        FunctionCode: "CAL_TWO_DAILY_INSPECTION_CARDS"
                    },
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            searchData();
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
            }
        });
    }

</script>
</body>
</html>