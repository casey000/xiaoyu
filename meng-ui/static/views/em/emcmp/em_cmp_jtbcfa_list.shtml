<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="em_cmp">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title data-i18n="">维修方案</title>
</head>
<body class="ibody">
机队：<span id="fleet"></span>&nbsp;&nbsp;
维修方案版次：<span id="majorVer"></span>/<span id="minorVer"></span>&nbsp;&nbsp;
编写日期：<span id="createDate"></span>&nbsp;&nbsp;
生效日期：<span id="validDate"></span>&nbsp;&nbsp;
状态：<span id="status"></span>

<div id="tt" class="easyui-tabs" style="">

    <div title="方案版本控制" style="">
        <form id="mform" method="post">
            <div id="searchBar">
                <!--    Temporary Revisions<br/>
                    方案项目清单、有效页清单打印<br/>
                    1.依据不同的编号规则，打印样式生成MP项目清单PDF：<a href="javascript:void(0)" class="easyui-linkbutton" data-options="" onclick="wholePdf()"><span
                        data-i18n="">生成项目清单</span></a>&nbsp;&nbsp;<br/>
                    2.生成有效页清单(PDF),注意：必须先执行【生成项目清单】才能执行此操作  <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                                                               onclick="effectivePdf()"><span data-i18n="">生成有效页清单</span></a>&nbsp;&nbsp;<br/>
                    方案报批、生效、改版<br/>
                    1.将报批状态的推荐方案重置为草稿状态。   <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                                              onclick="cancelApproval()"><span data-i18n="">取消报批</span></a>&nbsp;&nbsp;<br/>
                    2.报批维修方案、方案状态置为报批。 <a href="javascript:void(0)" class="easyui-linkbutton" data-options="" onclick="approval()"><span
                        data-i18n="">报批</span></a>&nbsp;&nbsp;<br/>
                    3.将维修方案发布生效 <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                                   onclick="release()"><span data-i18n="">生效</span></a>&nbsp;&nbsp;<br/>
                    4.临时改版  <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                               onclick="TemporaryRevisions()"><span data-i18n="">临时改版</span></a>&nbsp;&nbsp;<br/>
                    5.正式改版  <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                               onclick="officialRevision()"><span data-i18n="">正式改版</span></a>&nbsp;&nbsp;<br/>
    -->
                <table cellspacing="0" style=" width: 100%; ">
                    <tr>
                        <th colspan="2" style="font-size: 15px;font-weight: bold;text-align: center;">方案项目清单、有效页清单打印
                        </th>
                    </tr>
                    <tr>
                        <th style="width: 200px">1.依据不同的编号规则，打印样式生成MP项目清单PDF：</th>
                        <td>
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_ZBPDF"
                               onclick="print()"><span data-i18n="">生成整版维修方案清单</span></a>&nbsp;&nbsp;
                            <span>打印日期：</span>
                            <input class="easyui-datebox" name="printDate" id="printDate"
                                   data-options="required:false"
                                   style="height:25px; width:150px;"/>
                           <!-- <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_ZBPDF"
                               onclick="uploadFile_()"><span data-i18n="">上传附件</span></a>
                            <span id="mpdFile"></span>-->
                        </td>
                    </tr>
                    <!--<tr>
                        <th></th>
                        <td>
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_ZBPDF"
                               onclick="uploadOtherFile_()"><span data-i18n="">上传其他附件</span></a>
                        </td>
                    </tr>-->
                    <tr>
                        <th></th>
                        <td><span id="mpdOtherFile"></span></td>
                    </tr>
                    <tr>
                        <th>2.生成修订清单(EXCEL)</th>
                        <td>
                            <a class="easyui-linkbutton" data-options=""
                               onclick="effectivePdf()"><span data-i18n="">生成修订清单</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>
                    <tr>
                        <th>3.生成有效条目清单(EXCEL)</th>
                        <td>
                            <a class="easyui-linkbutton" data-options=""
                               onclick="effectiveItemPdf()"><span data-i18n="">生成有效条目清单</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>
                    <tr>
                        <th>4.方案提交工作流审查(PDF)</th>
                        <td>
                            <a class="easyui-linkbutton" data-options="" auth=""
                               onclick="upload()"><span data-i18n="">上传附件</span></a>&nbsp;&nbsp;
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_SCPDF"
                               onclick="approvePdf()"><span data-i18n="">提交审查</span></a>&nbsp;&nbsp;
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_SCPDF"
                               onclick="showHistory()"><span data-i18n="">办理轨迹</span></a>
                        </td>
                    </tr>

                    <tr>
                        <th colspan="2" style="font-size: 15px;font-weight: bold;text-align: center;"> 方案报批、生效、改版</th>
                    </tr>
                    <tr>
                        <th> 1.将维修方案发布生效</th>
                        <td style="width:100px;padding-right: 6px">
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="" onclick="approval()"><span
                                    data-i18n="">报批</span></a>&nbsp;&nbsp;<br/>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options=""
                               onclick="cancelApproval()"><span data-i18n="">取消报批</span></a>&nbsp;&nbsp;<br/>
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_SX" onclick="release()"><span
                                    data-i18n="">生效</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>

                    <tr>
                        <th> 2.临时改版</th>
                        <td>
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_LSGB"
                               onclick="TemporaryRevisions()"><span data-i18n="">临时改版</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>

                    <tr>
                        <th> 3.正式改版</th>
                        <td>
                            <a class="easyui-linkbutton" data-options="" auth="EM_CMP_JTBC_ZSGB"
                               onclick="officialRevision()"><span data-i18n="">正式改版</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>

    <div title="方案目录维护" data-options="" style="">
        <form id="mform2" method="post">
            <div id="searchBar2">
                <input type="hidden" name="cmpPkid" id="cmpPkid" style="width:100px;"/>
                <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
                    <tr>
                        <th data-i18n="" class="td5" style="width: 80px" align="right">目录名称：</th>
                        <td>
                            <input class="easyui-textbox" name="catalogNo" id="catalogNo" style="width:130px;"/>
                        </td>
                        <th data-i18n="" class="td5" style="width: 80px" align="right">上级目录：</th>
                        <td>
                            <input class="easyui-combobox" name="parentPkid" id="parentPkid" style="width:130px;"/>
                        </td>
                        <!--<th data-i18n="" class="td5" style="width: 90px" align="right">加入有效页：</th>-->
                        <!--<td>-->
                        <!--<input class="easyui-combobox" name="ifLep" id="ifLep" style="width:130px;"/>-->
                        <!--</td>-->
                        <td colspan="2">&nbsp;&nbsp;
                            <a class="searchBtn" data-options="iconCls:'icon-search'"
                               onclick="famuSearch_()"><span data-i18n="common:COMMON_OPERATION.QUERY">查询</span></a>&nbsp;&nbsp;
                            <a class="addBtn" data-options="iconCls:'icon-add'" onclick="add_mulu()"
                               auth="EM_CMP_ML_UPDATE"><span data-i18n="">增加</span></a>&nbsp;&nbsp;
                        </td>
                    </tr>
                </table>
            </div>
        </form>
        <div style="width: 100%;height: 422px">
            <table id="dg"></table>
        </div>

    </div>

</div>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript" src="/js/FileSaver.js"></script>
<script type="text/javascript">

    var param = getParentParam_();
    var thisURL = document.URL;
    var geturlvalue = thisURL.split('?')[1];
    var oid = param.oid;
    var fleet = param.fleet;
    var name = param.name;
    var configMsg = param.configMsg;
    var op = param.op;
    var cmpStatus_sx = 'VALID';
    //草稿
    var cmpStatus_cg = 'DRAFT';
    //报批
    var cmpStatus_bp = 'REPORT';
    var cmpStatus;
    var status_ = {};
    var gbType_ls = 'T';
    var gbType_zs = 'F';
    //上级目录
    var sjml = {};
    var iflep = [{TEXT: '是', VALUE: 'Y'}, {TEXT: '否', VALUE: 'N'}];
    var iflepAlert = {};
    var dataFormat = {};
    var numStyle = {};
    var printStyle = {};
    var issueDate = '';
    var PAGE_DATA = {};
    var printData = "";
    var verType; //版本类型
    function i18nCallBack() {
        InitFuncCodeRequest_({
            data: {
                domainCode: "EM_CMP_STATE,EM_CMP_CAT_DATAFORMAT,EM_CMP_PAGE_NUMSTYLE,EM_CMP_ITEM_PRINTSTYLE,EM_CMP_OBJ_LINK",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            /*EM_CMP_CAT_SJMU*/
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    status_ = DomainCodeToMap_(jdata.data["EM_CMP_STATE"]);
                    dataFormat = DomainCodeToMap_(jdata.data["EM_CMP_CAT_DATAFORMAT"]);
                    iflepAlert = DomainCodeToMap_(iflep);
                    numStyle = DomainCodeToMap_(jdata.data["EM_CMP_PAGE_NUMSTYLE"]);
                    printStyle = DomainCodeToMap_(jdata.data["EM_CMP_ITEM_PRINTSTYLE"]);
                    PAGE_DATA['OBJ_LINK'] = DomainCodeToMap_(jdata.data["EM_CMP_OBJ_LINK"]);
                    //加入有效页
                    $('#ifLep').combobox({
                        panelHeight: '150px',
                        data: iflep,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });

                    //获取上级目录的数据
                    InitFuncCodeRequest_({
                        data: {
                            cmpPkid: oid,
                            FunctionCode: "EM_CMP_CAT_SJML"
                        },
                        /*EM_CMP_CAT_SJMU*/
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {

                                sjml = DomainCodeToMap_(jdata.data);

                                //上级目录
                                $('#parentPkid').combobox({
                                    panelHeight: '150px',
                                    data: jdata.data,
                                    valueField: 'VALUE',
                                    textField: 'TEXT'
                                });

                                getCmpOne();
                                InitDataGrid();
                                //getFile();
                                // getOtherFile();
                            }
                            else {
                                MsgAlert({content: jdata.msg, type: 'error'});
                            }
                        }
                    });
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });

        $('#printDate').datebox({value: formatDates(new Date())});

    }
    function formatDates(date) {
        var day = date.getDate() > 9 ? date.getDate() : "0" + date.getDate();
        var month = (date.getMonth() + 1) > 9 ? (date.getMonth() + 1) : "0"
            + (date.getMonth() + 1);
        var hor = date.getHours();
        var min = date.getMinutes();
        var sec = date.getSeconds();
        return date.getFullYear() + '-' + month + '-' + day + " " + hor + ":" + min + ":" + sec;
    }
    function DomainCodeToMap_(list) {
        var d = {};
        $.each(list, function (k, it) {
            d[it.VALUE] = it.TEXT;
        });
        return d;
    }

    function effectiveItemPdf() {
        ajaxLoading();
        var url = "/api/v1/plugins/EM_CMP_EFFECTIVE_ITEM_PDF";
        var xhr = new XMLHttpRequest();//创建新的XHR对象
        xhr.open('post', url);//指定获取数据的方式和url地址
        //  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
        xhr.responseType = 'blob';//以blob的形式接收数据，一般文件内容比较大
        xhr.onload = function (e) {
            var blob = this.response;//Blob数据
            if (this.status == 200) {
                ajaxLoadEnd();
                if (blob.size < 200) {
                    MsgAlert({content: "下载失败"});
                } else {
                    if (blob && blob.size > 0) {
                        saveAs(blob, "有效页清单.xlsx");//处理二进制数据，让浏览器认识它
                    }
                }

            }
        };
        xhr.send("pkid=" + oid); //post请求传的参数
    }
    function effectivePdf() {
        ajaxLoading();
        var url = "/api/v1/plugins/EM_CMP_EFFECTIVE_PDF";
        var xhr = new XMLHttpRequest();//创建新的XHR对象
        xhr.open('post', url);//指定获取数据的方式和url地址

        //  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
        xhr.responseType = 'blob';//以blob的形式接收数据，一般文件内容比较大
        xhr.onload = function (e) {
            var blob = this.response;//Blob数据
            if (this.status == 200) {
                ajaxLoadEnd();
                if (blob.size < 200) {
                    MsgAlert({content: "下载失败"});
                } else {
                    if (blob && blob.size > 0) {
                        saveAs(blob, "修订清单" + oid + ".xlsx");//处理二进制数据，让浏览器认识它
                    }
                }

            }
        };
        xhr.send("pkid=" + oid); //post请求传的参数


        /*ajaxLoading();
        InitFuncCodeRequest_({
            data: {pkid: oid, FunctionCode: "EM_CMP_EFFECTIVE_PDF"},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    ajaxLoadEnd();
                   // window.location.href = jdata.data;
                }
            }
        });*/
    }
    function wholePdf() {
        ajaxLoading();
        InitFuncCodeRequest_({
            data: {
                cmpPkid: oid, configMsg: configMsg, issueDate: issueDate, name: name,
                FunctionCode: "CMP_PDF_WHOLE"
            },
            successCallBack: function (jdata) {
                ajaxLoadEnd();
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    doPost(Constant.API_URL + "CMP_PDF_DOWN", {fileUrl: jdata.data});
                }
            }
        });
    }
    function getCmpOne() {
        InitFuncCodeRequest_({
            data: {
                pkid: oid,
                FunctionCode: "EM_CMP_GETONE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    cmpStatus = jdata.data.STATUS;

                    $("#cmpPkid").val(jdata.data.PKID);

                    document.getElementById("fleet").innerHTML = jdata.data.FLEET;
                    document.getElementById("majorVer").innerHTML = jdata.data.MAJOR_VER;
                    document.getElementById("minorVer").innerHTML = jdata.data.MINOR_VER;

                    document.getElementById("createDate").innerHTML = jdata.data.CREATE_DATE.substring(0, 10);
                    if (jdata.data.VALID_DATE) {
                        issueDate = jdata.data.VALID_DATE.substring(0, 10);
                        document.getElementById("validDate").innerHTML = jdata.data.VALID_DATE.substring(0, 10);
                    } else {
                        document.getElementById("validDate").innerHTML = ' ';
                    }
                    document.getElementById("status").innerHTML = status_[jdata.data.STATUS];
                    verType = jdata.data.VER_TYPE;
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    /*    function famuSearch_()
     {
     var $form = $("#mform2");
     var data = $form.serializeObject();
     var dgopt = getDgOpts('dg');
     var url = dgopt.url;
     var $dg = $(dgopt.owner);
     $dg.datagrid({
     url: url,
     queryParams: data
     });
     }*/


    function hasCmpSata(status) {

        var isAdd = 0;
        InitFuncCodeRequest_({
            data: {
                fleet: fleet,
                operator: op,
                status: status,
                FunctionCode: "EM_CMP_CHECK_HAS_DRAFT"
            },
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    isAdd = jdata.data.NUM;

                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        if (isAdd > 0)
            return true;
        else
            return false;
    }

    function TemporaryRevisions() {

        if (cmpStatus != cmpStatus_sx) {
            MsgAlert({content: '必须为生效状态', type: 'error'});
            return false;
        }

        if (hasCmpSata("DRAFT")) {
            alert("当前机队分组下已有草稿版本的方案,不能再执行改版操作。");
            return false;
        }

        common_add_edit_({
            width: 800,
            height: 400,
            title: '临时改版',
            url: "/views/em/emcmp/em_cmp_wxfa_add.shtml",
            param: {pkid: oid, type: gbType_ls}
        });
    }
    function officialRevision() {
        if (cmpStatus != cmpStatus_sx) {
            MsgAlert({content: '必须为生效状态', type: 'error'});
            return false;
        }
        if (hasCmpSata("DRAFT")) {
            alert("当前机队分组下已有草稿版本的方案,不能再执行改版操作。");
            return false;
        }
        common_add_edit_({
            width: 800,
            height: 400,
            title: '正式改版',
            param: {pkid: oid, type: gbType_zs},
            url: "/views/em/emcmp/em_cmp_wxfa_add.shtml"
        });
    }


    function cancelApproval() {
        if (cmpStatus != cmpStatus_bp) {
            MsgAlert({content: '必须为报批状态', type: 'error'});
            return false;
        }

        InitFuncCodeRequest_({
            data: {
                pkid: oid,
                status: cmpStatus_cg,
                FunctionCode: "EM_CMP_UPDATE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    getCmpOne();
                    reloadFym_();
                    MsgAlert({content: "操作成功"});
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    /**
     * ；
     * 查看改版队列里的数据是否全部完成加入。
     * */
    function checkCmpQueue() {

        var isAdd = 0;
        InitFuncCodeRequest_({
            data: {
                fleet: fleet,
                operator: op,
                FunctionCode: "EM_CMP_CHECK_CMP_QUEUE"
            },
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    isAdd = jdata.data.NUM;

                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        if (isAdd > 0)
            return true;
        else
            return false;
    }

    /**
     * 根据MPD依据文件查看当前版本MPD是否已全部完成评估；
     *
     * */
    function checkMpdData() {
        var isEval = 0;
        InitFuncCodeRequest_({
            data: {
                fleet: fleet,
                FunctionCode: "EM_CMP_CHECK_MPD_DATA"
            },
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    isEval = jdata.data.NUM;

                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        if (isEval > 0)
            return true;
        else
            return false;
    }
    /**
     * 根据MPD查找发动机项目替代项目是否相对应
     * f_get_mpd_substitute_msg
     * */
    function checkMpdEngLocation() {

        var isEval = executeOperation(namespace, "checkReplace", new Array({value: cmp_pkid, type: TYPE.STRING})).text;
        if (isEval == "E")
            return true;
        else
            return false;
    }

    function approval() {
        if (cmpStatus != cmpStatus_cg) {
            MsgAlert({content: '必须为草稿', type: 'error'});
            return false;
        }
        //改版申请数据是否已完成处理
        /* if (checkCmpQueue()) {
             alert("当前版本维修方案对应的改版申请数据涉及MPD文件类型还未完成处理，请先执行加入操作！");
             return;
         }
         if (checkMpdData()) {
             alert("当前版本维修方案对应的MPD项目还未全部完成评估，请先执行评估操作！");
             return;
         }*/

        /*if(checkMpdEngLocation()){
            alert("当前版本维修方案对应的MPD 发动机项目的替代项目未全部替代或替代项目不正确！");
            return;
        }*/
        InitFuncCodeRequest_({
            data: {
                pkid: oid,
                status: cmpStatus_bp,
                FunctionCode: "EM_CMP_UPDATE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    getCmpOne();
                    reloadFym_();
                    MsgAlert({content: "操作成功"});
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function reloadFym_() {
        parent.shaxintree();
    }

    function add_mulu() {
        if (cmpStatus != cmpStatus_cg) {
            MsgAlert({content: '必须为草稿', type: 'error'});
            return false;
        }
        common_add_edit_({
            width: 800,
            height: 400,
            title: '维修方案目录维护',
            param: {cmpPkid: oid},
            url: "/views/em/emcmp/em_cmp_wxfa_mulu_add.shtml"
        });
    }

    function InitDataGrid() {
        var identity = 'dg';
        InitFuncCodeRequest_({
            data: {FunctionCode: 'EM_CMP_CAT_LIST', cmpPkid: oid},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    var treeData = HandleTreeData_(jdata.data, 'PID');
                    var tdata_ = WarpTreeGridData_(treeData, "0000", ['ID', 'PID']);
                    $("#dg").MyDataGrid({
                        identity: identity,
                        fit: true,
                        idField: "ID",
                        treeField: "NAME",
                        data: tdata_,
                        pagination: false,
                        title: "MP目录维护",
                        columns: {
                            param: {FunctionCode: 'EM_CMP_CAT_LIST'},
                            alter: {
                                PARENT_PKID: {
                                    formatter: function (value, row, index) {
                                        return sjml[value];
                                    }
                                },
                                IF_LEP: {
                                    formatter: function (value, row, index) {
                                        return iflepAlert[value];
                                    }
                                },
                                PRINT_STYLE: {
                                    formatter: function (value, row, index) {
                                        return printStyle[value];
                                    }
                                },
                                DATA_FORMAT: {
                                    formatter: function (value, row, index) {
                                        return dataFormat[value];
                                    }
                                },
                                NUM_STYLE: {
                                    formatter: function (value, row, index) {
                                        return numStyle[value];
                                    }
                                },
                                IF_NONUM: {
                                    formatter: function (value, row, index) {

                                        var text;
                                        if (value == 'Y') {
                                            text = '是'
                                        }
                                        if (value == 'N') {
                                            text = '否'
                                        }
                                        return text;
                                    }
                                },
                                IF_NEWNUM: {
                                    formatter: function (value, row, index) {

                                        var text;
                                        if (value == 'Y') {
                                            text = '是'
                                        }
                                        if (value == 'N') {
                                            text = '否'
                                        }
                                        return text;
                                    }
                                },
                                IF_ATANUM: {
                                    formatter: function (value, row, index) {

                                        var text;
                                        if (value == 'Y') {
                                            text = '是'
                                        }
                                        if (value == 'N') {
                                            text = '否'
                                        }
                                        return text;
                                    }
                                },
                                OBJ_LINK: {
                                    formatter: function (value) {
                                        if (PAGE_DATA['OBJ_LINK'][value]) {
                                            return PAGE_DATA['OBJ_LINK'][value];
                                        } else {
                                            return value;
                                        }
                                    }
                                }
                            }
                        },
                        contextMenus: [
                            {
                                id: "m-edit", i18nText: "common:COMMON_OPERATION.EDIT", auth: "EM_CMP_ML_EDIT",
                                onclick: function () {
                                    var rowdata = getDG("dg").datagrid('getSelected');

                                    if (cmpStatus != cmpStatus_cg) {
                                        MsgAlert({content: '必须为草稿', type: 'error'});
                                        return false;
                                    }
                                    //编辑
                                    common_add_edit_({
                                        width: 800,
                                        height: 400,
                                        title: '方案目录维护',
                                        param: {pkid: rowdata.ID, cmpPkid: oid},
                                        url: "/views/em/emcmp/em_cmp_wxfa_mulu_add.shtml"
                                    });

                                }
                            },
                            {
                                id: "m-del", i18nText: "common:COMMON_OPERATION.DEL", auth: "EM_CMP_ML_DEL",
                                onclick: function () {
                                    var rowdata = getDG("dg").datagrid('getSelected');

                                    if (cmpStatus != cmpStatus_cg) {
                                        MsgAlert({content: '必须为草稿', type: 'error'});
                                        return false;
                                    }

                                    var num = 0;
                                    var ifHavezi = 0;
                                    InitFuncCodeRequest_({
                                        data: {
                                            pkid: rowdata.ID,
                                            FunctionCode: "EM_CMP_CAT_IF_HAVEZI"
                                        },
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                ifHavezi = jdata.data;
                                            }
                                            else {
                                                MsgAlert({content: jdata.msg, type: 'error'});
                                            }
                                        }
                                    });
                                    //判断该目录下是否有子目录，没有则进行判断是否有数据
                                    if (ifHavezi == 0) {
                                        //判断是否有数据
                                        InitFuncCodeRequest_({
                                            data: {
                                                pkid: rowdata.ID,
                                                objLink: rowdata.OBJ_LINK,
                                                FunctionCode: "EM_CMP_CAT_IF_HAVE_SJ"
                                            },
                                            async: false,
                                            successCallBack: function (jdata1) {
                                                if (jdata1.code == RESULT_CODE.SUCCESS_CODE) {
                                                    num = jdata1.data == null ? num : jdata1.data;
                                                }
                                                else {
                                                    MsgAlert({content: jdata1.msg, type: 'error'});
                                                }
                                            }
                                        });
                                        if (num == 0) {
                                            InitFuncCodeRequest_({
                                                data: {
                                                    pkid: rowdata.ID,
                                                    FunctionCode: "EM_CMP_CAT_DEL"
                                                },
                                                async: false,
                                                successCallBack: function (jdata2) {
                                                    if (jdata2.code == RESULT_CODE.SUCCESS_CODE) {
                                                        MsgAlert({content: jdata2.msg ? jdata2.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                                        reload_();
                                                        reloadFym_();
                                                    }
                                                    else {
                                                        MsgAlert({content: jdata2.msg, type: 'error'});
                                                    }
                                                }
                                            });
                                        } else {
                                            MsgAlert({content: "该目录下存在数据不能删除", type: 'error'});
                                            return false;
                                        }
                                    }
                                    else {
                                        MsgAlert({content: "该目录下存在子目录，请先删除子目录", type: 'error'});
                                        return false;
                                    }
                                }
                            }
                        ],
                        toolbar: []


                    })

                }
            }
        })
    }

    // 附件上传
    function uploadFile_() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "EMCMP",
                sourceId: oid,
                successCellBack: deleteMpd,
                fialCellBack: ""
            },
        });
    }

    // 上传其他附件
    function uploadOtherFile_() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "OTHEREMCMP",
                sourceId: oid,
                successCellBack: reload_,
                fialCellBack: ""
            },
        });
    }

    // 删除调原有附件
    function deleteMpd() {
        InitFuncCodeRequest_({
            data: {sourceId: oid, FunctionCode: 'ATTACHMENT_MPD_DEL'},
            successCallBack: function (jdata) {
                if (jdata.code == 200) {
                    reload_()
                }
            }
        });
    }

    // 获取附件
    function getFile() {
        InitFuncCodeRequest_({
            data: {SOURCE_ID: oid, CATEGORY: "EMCMP", FunctionCode: 'ATTACHMENT_RSPL_GET'},
            successCallBack: function (jdata) {
                var html = "";
                for (var i = 0; i < jdata.data.length; i++) {
                    html += '<a target="_blank" href="javascript:void(0);" onclick="downFileLocal(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a>';
                }
                document.getElementById("mpdFile").innerHTML = html;
            }
        });
    }

    // 获取其他附件
    function getOtherFile() {
        InitFuncCodeRequest_({
            data: {SOURCE_ID: oid, CATEGORY: "OTHEREMCMP", FunctionCode: 'ATTACHMENT_RSPL_GET'},
            successCallBack: function (jdata) {
                var html = "";
                for (var i = 0; i < jdata.data.length; i++) {
                    html += '<a target="_blank" href="javascript:void(0);" onclick="downFileLocal(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a>&nbsp;&nbsp;&nbsp;&nbsp;<a onclick="deleteFile(\'' + jdata.data[i].PKID + '\');return false;">删除</a><br>';
                }
                document.getElementById("mpdOtherFile").innerHTML = html;
            }
        });
    }

    //发布生效
    function release() {
        //生效临时版不受维修方案状态影响
        if (verType == 'F') {//正式版
            if (cmpStatus != cmpStatus_bp) {
                MsgAlert({content: '必须为报批状态', type: 'error'});
                return false;
            }
        }
        if (verType == 'T') {//临时版
            if (!confirm("确认生效？")) {
                return;
            }
        }

        if (checkCmpQueue()) {
            MsgAlert({content: '当前版本维修方案对应的改版申请数据涉及MPD文件类型还未完成处理，请先执行加入操作！', type: 'error'});
            return;
        }
        common_add_edit_({
            width: 800,
            height: 500,
            title: '发布',
            param: {pkid: oid, verType: verType},
            url: "/views/em/emcmp/em_cmp_wxfa_release.shtml"
        });
    }
    function famuSearch_() {

        var $form = $("#mform2");
        var queryParams = $form.serializeObject();
        queryParams = $.extend({}, queryParams, {FunctionCode: "EM_CMP_CAT_LIST"});
        InitFuncCodeRequest_({
            data: queryParams,
            successCallBack: function (jdata) {
                if (jdata.code != '200') {
                    layer.msg(jdata.msg, {icon: 5});
                    return;
                }
                var treeData = HandleTreeData_(jdata.data, 'PID');
                var tdata_ = WarpTreeGridData_(treeData, "0000", ['ID', 'PID']);
                $("#dg").treegrid('loadData', tdata_);

            }
        });

    }

    /**  方案提交工作流审查 **/
    function approvePdf() {
        if (cmpStatus != 'DRAFT') {
            MsgAlert({content: "必须在草稿状态下才能发起审查！", type: 'error'});
        } else {
            InitFuncCodeRequest_({
                data: {cmpPkid: oid, FunctionCode: "EM_CHECK_IS_PDF"},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data.NUM > 0) {
                            ifOnSubmit();
                        } else {
                            MsgAlert({content: "请生成整版维修方案后在提交审查！", type: 'error'});
                        }
                    } else {
                        MsgAlert({content: jdata.msgData ? jdata.msgData[0] : jdata.msg, type: 'error'});
                    }
                }
            });
        }
    }

    /**
     * 办理轨迹
     **/
    function showHistory() {
        if (oid) {
            ShowWindowIframe({
                width: 1100,
                height: 400,
                title: $.i18n.t('审批轨迹'),
                param: {objNo: oid, objKey: "EM_CMP_APPROVE"},
                url: '/views/em/workflow/work_flow_history_task_list.shtml'
            });
        }
    }

    function ifOnSubmit() {
        var name_ = name.substr(1, 5);
        name_ += "," + fleet;
        InitFuncCodeRequest_({
            data: {objNo: oid, objKey: 'EM_CMP_APPROVE', FunctionCode: "EM_CHECK_IS_SUBMIT"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data.NUM > 0) {
                        MsgAlert({content: "流程正在审批中，请勿重复提交！", type: 'error'});

                    } else {
                        common_add_edit_({
                            identity: '', isEdit: '', width: 520, height: 300, title: $.i18n.t('选择审批人'),
                            param: {
                                roleId: '',
                                PKID: name_,
                                otherParam: oid,
                                FunctionCode_: 'EM_CMP_SUBMIT_APPROVE',
                                successCallback: reload_,
                                flowKey:'emCmpService'
                            },
                            url: "/views/em/workflow/work_flow_account_select.shtml"
                        });
                    }
                } else {
                    MsgAlert({content: jdata.msgData ? jdata.msgData[0] : jdata.msg, type: 'error'});
                }
            }
        });
    }


    function print() {

        ajaxLoading();
        var url = "/api/v1/plugins/EM_CMP_PRINT";
        var xhr = new XMLHttpRequest();//创建新的XHR对象
        xhr.open('post', url);//指定获取数据的方式和url地址

        //  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
        xhr.responseType = 'blob';//以blob的形式接收数据，一般文件内容比较大
        xhr.onload = function (e) {
            var blob = this.response;//Blob数据
            if (this.status == 200) {
                ajaxLoadEnd();
                if (blob.size < 200) {
                    MsgAlert({content: "下载失败"});
                } else {
                    if (blob && blob.size > 0) {
                        saveAs(blob, "整本维修方案" + oid + ".pdf");//处理二进制数据，让浏览器认识它
                    }
                }

            }
        };
        var printDate = $("#printDate").datebox('getValue');

        xhr.send("cmpPkid=" + oid+"&printDate="+printDate); //post请求传的参数
    }

    /** 刷新列表数据 */
    function reload_() {
        famuSearch_();
        //getFile();
        //getOtherFile();
    }

    function upload() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "emCmpJtbcfa",
                sourceId: oid,
                successCellBack: "",
                fialCellBack: ""
            }
        });
    }
</script>
</body>
</html>
