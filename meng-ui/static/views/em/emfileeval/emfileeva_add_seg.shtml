<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<style>
    span.measureSpan{
        margin-right: 10px;
        margin-bottom: 10px;
    }
    .attribute-judge th{
        width:120px;
        height:30px;
    }
    .view-menu{
         border: none;
         width: 100px;
         margin-left:30px;
         color:#999999 !important;
         background-color: #ffffff !important;
     }
</style>
<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title>增加分段</title>
</head>

<body>
<div style="">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <form class="form-horizontal m-t" id="mform">
                <input class="easyui-textbox" type="hidden" id="pkid" name="pkid"/>
                <table class="table table-bordered table-info">
                    <tr>
                        <th nowrap class="th" align="right">序号：</th>
                        <td class="tdr">
                            <input class="easyui-textbox" id="segSn" name="segSn"
                                   data-options="required:true,events:{blur:checkNum}"/>
                        </td>
                        <td class="tdr" colspan="4">
                            <input id="btcopy" class="btn btn-primary" type="button" onclick="copySeg()" value="复制评估信息"
                                   style="width: 90px;margin:5px;"/>
                            <input id="bt1" class="btn btn-primary" type="button" onclick="save()" value="保存"
                                   style="width: 50px;margin:5px;"/>
                            <input class="btn btn-primary" type="button" onclick="CloseWindowIframe()" value="关闭"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                    <tr>
                        <td class="tdr" colspan="6">
                            <p style="font-weight: bold">
                                对应源文件及分段：
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th class="th" align="right">源文件：</th>
                        <td class="tdr">
                            <input class="easyui-combobox" id="sourceFileNo" name="sourceFileNo"
                            />
                        </td>
                        <td class="tdr" style="display:none">
                            <input class="easyui-textbox" id="sourceFileVer" name="sourceFileVer"/>
                        </td>
                        <td class="tdr" style="display:none">
                            <input class="easyui-textbox" id="sourceFileType" name="sourceFileType"/>
                        </td>
                        <th class="th" align="right">分段：</th>
                        <td class="tdr">
                            <input class="easyui-textbox" id="sourceFileSeg" name="sourceFileSeg"/>
                            <input id="bt2" class="btn btn-primary" type="button" onclick="addSourSeg()" value="增加"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                </table>
                <div style="height: 150px">
                    <table id='dg'>
                    </table>
                </div>
                <table class="table table-bordered table-info">
                    <tr>
                        <th class="th" nowrap>段落标题：</th>
                        <td colspan="5">
                                <textarea class="easyui-textbox " id="paragraphTitle" name="paragraphTitle"
                                          multiline="true"
                                          style="height:50px;width: 98%;border: 1px solid #ddd;border-radius: 5px;"
                                ></textarea>
                        </td>
                    </tr>
                    <tr>
                        <th class="th">分段描述：</th>
                        <td colspan="5">
                                <textarea class="easyui-textbox " id="segDesc" name="segDesc" multiline="true"
                                          style="height:150px;width: 98%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <th class="th">评估意见：</th>
                        <td colspan="5">
                                <textarea class="easyui-textbox " id="evaOpinion" name="evaOpinion" multiline="true"
                                          style="height:150px;width: 98%;border: 1px solid #ddd;border-radius: 5px;"
                                          data-options="required:true"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <th id="stcEva" align="right">评估结论：</th>
                        <td id="stcEva1">
                            <input class="easyui-combobox" data-options="required:true,editable:false" id="evaResult"
                                   name="evaResult"/>
                        </td>
                        <th id="notapp" style="width:90px" class="th" align="right">不适用原因：</th>
                        <td id="notapp1" class="td5">
                            <input class="easyui-textbox" id="notAppReason" name="notAppReason"
                                   data-options="editable:true"/>
                        </td>
                        <th id="notapp2" style="width:90px" class="th" align="right">被取代文件：</th>
                        <td id="notapp3" class="td5">
                            <input class="easyui-textbox" id="substituteByFile" name="substituteByFile"
                                   data-options="editable:true"/>
                        </td>
                    </tr>
                </table>
                <p>
                    ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
                </p>
                <table class="table table-bordered table-info">
                    <tr>
                        <th class="th" align="right">任务解析：</th>
                        <td class="tdr">
                            <input id="addTaskBtn" class="btn btn-primary" type="button" onclick="addTask()" value="增加"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                </table>
                <div style="height: 150px">
                    <table id='dg1'>
                    </table>
                </div>
                <table class="table table-bordered table-info">
                    <tr>
                        <th style="width: 90px" class="th">顺丰执行文件：</th>
                        <th class="th" align="right">处理意见：</th>
                        <td>
                            <input class="easyui-combobox" id="dealOpinion"
                                   name="dealOpinion" data-options="editable:false"
                                   style="width:120px;"/>
                        </td>
                        <td class="tdr">
                            <input id="bt3" class="btn btn-primary" type="button" onclick="addTaskSf()" value="新增执行文件"
                                   style="width: 90px;margin:5px;"/>
                            <input id="bt4" class="btn btn-primary" type="button" onclick="refTaskSf()" value="关联执行文件"
                                   style="width: 90px;margin:5px;"/>
                        </td>
                    </tr>
                </table>

                <div style="height: 150px">
                    <table id='dg2'>
                    </table>
                </div>
                <table id="opapl" class="table table-bordered table-info">
                    <tr>
                        <th style="width: 150px" class="th">上营运人机身执行文件：</th>
                        <td class="tdr">
                            <input id="bt5" class="btn btn-primary" type="button" onclick="addTaskOpApl()" value="增加"
                                   style="width: 50px;margin:5px;"/>
                            <input id="copyFileApl" class="btn btn-primary" type="button" onclick="copySyyrFile()" value="复制上运营人执行文件"
                                   style="width: 140px;margin:5px;"/>
                        </td>
                    </tr>
                </table>
                <div id="opapl2" style="height: 450px">
                    <table id='dg3'>
                    </table>
                </div>
                <table id="openg" class="table table-bordered table-info">
                    <tr>
                        <th style="width: 150px" class="th">上营运人发动机执行文件：</th>
                        <td class="tdr">
                            <input id="bt6" class="btn btn-primary" type="button" onclick="addTaskOpEng()" value="增加"
                                   style="width: 50px;margin:5px;"/>
                            <input id="downLoad" class="btn btn-primary" type="button" onclick="downTemplate()" value="下载模板"
                                   style="width: 70px;margin:5px;"/>
                            <input id="import" class="btn btn-primary" type="button" onclick="uploadDetailList()" value="导入数据"
                                                                           style="width: 70px;margin:5px;"/>
                            <input id="del" class="btn btn-primary" type="button" onclick="delEng()" value="删除"
                                   style="width: 70px;margin:5px;"/>
                            <input id="copyFileEng" class="btn btn-primary" type="button" onclick="copySyyrFile()" value="复制上运营人执行文件"
                                   style="width: 140px;margin:5px;"/>
                        </td>
                    </tr>
                </table>
                <div id="openg2" style="height: 450px">
                    <table id='dg4'>
                    </table>
                </div>
                <!--Add by Doreen,SF-->
                <table class="table table-bordered table-info showAndHide" id="professionalEva_show">
                    <tr >
                        <th  class="th">结构专业评估：</th>
                        <td class="tdr" colspan="6">
                            <input class="easyui-combobox subType-info" id="professionalEva" name="professionalEva" data-options="editable:false"/>
                        </td>
                    </tr>
                </table>
                <div id="asmsInfo">
                    <table id="measureTypeId" class="table table-bordered table-info">
        <!--                <tr>
                            <th class="th">措施类别：</th>
                            <td class="tdr" colspan="5">
                                <span class="measureSpan"><input type="radio" name="measureType" value="0" onChange="measureTypeChange()"/>检查</span>
                                <span class="measureSpan"><input type="radio" name="measureType" value="1" onChange="measureTypeChange()"/>修理</span>
                                <span class="measureSpan"><input type="radio" name="measureType" value="2" onChange="measureTypeChange()"/>改装</span>
                                <span class="measureSpan"><input type="radio" name="measureType" value="3" onChange="measureTypeChange()"/>更换</span>
                                <span class="measureSpan"><input type="radio" name="measureType" value="4" id="isInfoMeasure" onChange="measureTypeChange()"/>信息类</span>
                                <span class="measureSpan"><input type="radio" name="measureType" value="5" id="isOtherMeasure" onChange="measureTypeChange()"/>其它：
                                <span id="otherMeasureShow">
                                    <input class="easyui-textbox"
                                           name="otherMeasure"
                                           id="otherMeasure"
                                           type="text"
                                           data-options ="validType:['maxLength[100]']"/>
                                </span>
                            </span>
                                <input id="bt10" class="btn btn-primary" type="button" onclick="saveMeasureType()" value="保存"   style="width: 50px;margin:5px;"/>
                            </td>
                        </tr>-->
                    </table>

                    <div id="structuralType" >
                        <table id="structuralInfo" class="table table-bordered table-info">
                            <tr >
                                <th  class="th">子机型信息：</th>
                                <td class="tdr">
                                    <input class="easyui-combobox subType-info" id="subTypeId" name="subTypeInfo" data-options="editable:false"/>
                                </td>
                                <td class="tdr" colspan="4">
                                    <input id="assistViewId" class="btn btn-primary" type="button" onclick="assistView()" value="三维辅助"
                                           style="width: 80px;margin:5px;"/>
                                    <input id="allPlaneViewId" class="btn btn-primary" type="button" onclick="allPlaneView()" value="查看全部"
                                           style="width: 80px;margin:5px;"/>
                                </td>
                            </tr>
                            <tr class="showByprofessionalEva" id="showByprofessionalEva_id">
                                <th class="th" nowrap>区域选择：</th>
                                <td class="tdr">
                                    <input id="zoneBind" class="easyui-combotree" data-options="multiple:true">

                                </td>
                                <td class="tdr" colspan="4">
                                    <input id="zoneSaveId" class="btn btn-primary" type="button" onclick="bindZoneSave()" value="挂接"
                                           style="width: 80px;margin:5px;"/>
                                </td>
                            </tr>
                            <tr class="showByprofessionalEva">
                                <th  class="th">关联文件：</th>
                                <td class="tdr">
                                    <input class="easyui-combobox" id="relativeFileId" name="relativeFile" data-options="editable:false"/>
                                </td>
                                <th class="th">段落：</th>
                                <td class="tdr">
                                    <input class="easyui-combobox" id="sectionInfoId" name="sectionInfo" data-options="editable:false"/>
                                    <input id="copyStrcInfo" class="btn btn-primary" type="button" onclick="copyStrInfo()" value="复制结构件"
                                           style="width: 80px;margin:5px;"/>
                                </td>
                            </tr>
                            <tr>
                                <th class="th" nowrap>部件信息：</th>
                                <td class="tdr" colspan="5">
                                    <p style="font-weight: bold" id="locationParam">
                                        标注定位参数：
                                    </p>
                                </td>
                            </tr>
                        </table>
                        <div id="strcInfo">
                            <table id='partList'  style="width:100%;height:200px">
                            </table>
                        </div>
                        <div id="zoneInfo">
                            <table id='zoneList'  style="width:100%;height:200px">
                            </table>
                        </div>
                        <div id="structuralEeZoneListMenu" class="easyui-menu" style="width: 100px;">
                            <div  id="structuralEeZoneListDel" onclick="deleteStruEEZone()" >删除</div>
                            <input id="structuralEeZoneListDelView" class="btn btn-primary view-menu" value="删除" disabled/>
                        </div>
                        <div id="partOperateMenu" class="easyui-menu" style="width: 100px;">
                            <div  onclick="viewPart()" >构建视图</div>
                            <div  id="partOperate" onclick="deletePart()" >删除</div>
                            <input id="partOperateView" class="btn btn-primary view-menu" value="删除" disabled/>


                        </div>
                        <table id="attriJudge" class="table table-bordered table-info attribute-judge">
                            <tr>
                                <td class="tdr" colspan="8">
                                    <span style="font-weight: bold">结构属性：</span>
                                    <input id="judgeAttr" class="btn btn-primary" type="button" onclick="judgeBtn()" value="判断"
                                           style="width: 60px;margin:5px;"/>
                                </td>
                            </tr>
                            <tr>
                                <th  class="th">APB影响：</th>
                                <td class="tdr" id="apb">
                                </td>
                                <th  class="th">PTF影响：</th>
                                <td class="tdr"  id="ptf">
                                </td>
                                <th class="th">PTF区域：</th>
                                <td class="tdr" id="ptfArea">
                                </td>
                            </tr>
                            <tr>
                                <th class="th">PSE：</th>
                                <td class="tdr"  id="pse">
                                </td>
                                <th  class="th">FCBS：</th>
                                <td class="tdr"  id="fcbs">
                                </td>
                                <th  class="th">增压边界：</th>
                                <td class="tdr" id="pressurizedRegion">
                                </td>
                            </tr>
                            <tr>
                                <th class="th longdesc ">气动敏感区域：</th>
                                <td class="tdr" id="pneumaticArea">
                                </td>
                                <th class="th">潮湿区域：</th>
                                <td class="tdr" id="wetArea">

                                </td>
                                <th class="th">结构可更换件：</th>
                                <td class="tdr"  id="rsc">
                                </td>
                            </tr>
                            <tr>
                                <th class="th">SSI：</th>
                                <td class="tdr" id="ssi"></td>
                                <th class="th">SSI NO：</th>
                                <td class="tdr" id="ssiNo"></td>
                            </tr>
                        </table>
                        <table id="relation-info" class="table table-bordered table-info">
                            <tr>
                                <td class="tdr" colspan="8">
                                    <span style="font-weight: bold">关联信息：</span>
                                </td>
                            </tr>
                        </table>
                        <div class="easyui-tabs" style="width:100%;height:250px">
                            <div title="工程评估" style="padding:10px">
                                <table id='dg6' style="width:100%;">
                                </table>
                            </div>
                            <div title="维修方案" style="padding:10px">
                                <table id='dg7' style="width:100%;">
                                </table>
                            </div>
                            <div title="损伤修理" style="padding:10px">
                                <table id='dg8' style="width:100%">
                                </table>
                            </div>
                            <div title="改装历史" style="padding:10px">
                                <table id='dg9' style="width:100%;">
                                </table>
                            </div>
                        </div>
                    <!-- 持续适航评估 start -->
                        <div id="airWorthinessJudgeInfo">
                        <table id="airWorthinessJudge"  class="table table-bordered table-info attribute-judge">
                            <tr class="viewMode">
                                <td class="tdr" colspan="21">
                                    持续适航： <input id="continue" class="btn btn-primary" type="button" onclick="airWorthinessSave();return false"  value="保存"
                                           style="width: 60px;margin:5px;"/>
                                </td>
                            </tr>
                            <tr>
                                <th  class="th">受AD/SSI影响：</th>
                                <td class="tdr"  colspan="6">
                                    <input class="easyui-combobox subType-info" id="byAdSsi" name="adSsiEffect" data-options="editable:false"/>
                                </td>
                                <th  class="th">气动性影响：</th>
                                <td class="tdr"  colspan="6">
                                    <input class="easyui-combobox subType-info" id="byAir" name="aerodynamicEffect" data-options="editable:false"/>
                                </td>
                                <th  class="th">RVSM区域：</th>
                                <td class="tdr"  colspan="6">
                                    <input class="easyui-combobox subType-info" id="byRvsm" name="pvsmZone" data-options="editable:false"/>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="24">
                                    <input id="addAirWorthiness" class="btn btn-primary viewMode" type="button" onclick="addWorthinessDataList();return false" value="增加"
                                           style="width: 60px;margin:5px;"/>
                                </td>
                            </tr>
                        </table>
                        <table id='airWorthinessJudgeDg'  style="width:100%;height:200px"></table>
                        <div id="airWorthinessEeMenu" class="easyui-menu" style="width: 100px;">
                            <div  id="airWorthinessDell" onclick="deleteWorthinessJudgeDg()" >删除</div>
                            <input id="airWorthinessDellView" class="btn btn-primary view-menu" value="删除" disabled/>
                            <div  id="airWorthinessEdit" onclick="editWorthinessJudgeDg()" >编辑</div>
                            <input id="airWorthinessEditView" class="btn btn-primary view-menu" value="编辑" disabled/>
                        </div>
                    <!-- 持续适航评估 end -->
                    </div>

                    <!--结构类服务申请  start -->
                    <table id='structuralEeSrBtn'  class="table table-bordered table-info " >
                        <tr>
                            <th style="width: 70px" class="th">服务申请:</th>
                            <td class="tdr">
                                <input id="structuralEe_Relation_Sr" class="btn btn-primary" type="button"
                                       onclick="structuralEeRelationSr()" value="关联" style="width: 50px;margin:5px;"/>
                                <input id="structuralEe_Add_Sr" class="btn btn-primary" type="button"
                                       onclick="structuralEeAddSr()" value="新增" style="width: 50px;margin:5px;"/>
                            </td>
                        </tr>
                    </table>
                    <table id='structuralEeSrDg'  style="width:100%;height:200px">
                    </table>
                    <div id="structuralEeSrMenu" class="easyui-menu" style="width: 100px;">
                        <div  id="structuralEeSrDel" onclick="deleteStruEESr()" >删除</div>
                        <input id="structuralEeSrDelView" class="btn btn-primary view-menu" value="删除" disabled/>
                    </div>
                    <!--结构类服务申请  end -->
                </div>
                </div>
            </form>
        </div>
    </div>
</div>
</body>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript" src="/js/modelIndex.js"></script>
<script type="text/javascript" src="/js/qwebchannel.js"></script>
<script type="text/javascript" src="/js/qt.chrome.js"></script>
<script type="text/javascript" src="/js/bridgeBusiness.js"></script>
<script type="text/javascript" src="/js/ASMS3DObject.js"></script>
<script type="text/javascript" src="/js/sta-parser.js"></script>
<script type="text/javascript">

    var PAGE_DATA = {};
    var param;
    var evapkid;
    var evaNo;
    var operation;
    var dmpkid;
    var segpkid;
    var strucSegpkid;
    var applyType;
    var applyModel;
    var ata;
    var dataType;
    var exeFlag;
    var gzFlag = "";
    var dealMeasure;//处理措施

    var modelType;//子机型
    var segNo;
    var businessData;
    var ifAsms;
    var PreData;//结构属性预判结果
    var messageId;
    var asmsPro;
    // $("#zoneInfo").hide();
    var srIds ;
    var asmsModuleType = "";
    const yesAndNoSelect = [
        {
            label: "是",
            value: "Y",
        },
        {
            label: "否",
            value: "N",
        }
    ];
    const byAdSsiSelect = [
        {
            label: "是",
            value: "Y"
        },
        {
            label: "否",
            value: "N"
        }
    ];
    const byAirSelect = [
        {
            label: "是",
            value: "Y"
        },
        {
            label: "否",
            value: "N"
        }
    ];
    const byRvsmSelect = [
        {
            label: "是",
            value: "Y"
        },
        {
            label: "否",
            value: "N"
        }
    ];

    function i18nCallBack() {
        param = getParentParam_();
        evapkid = param.evapkid;
        evaNo = param.evaNo;
        segpkid = param.segpkid;
        applyType = param.applyType;
        applyModel = param.applyModel;
        ata = param.ata;
        dataType = param.dataType;
        asmsModuleType = this.getAsmsModuleType(dataType);
        exeFlag = param.exeFlag;
        operation = param.operation;
        if (!segpkid) {
            segpkid = "";
        }
        if(segpkid){
            initStructureEESeg("");
        }
        param.OWindow.reload_("#dg6");
        if (dataType.indexOf('SB') == -1 && dataType.indexOf('MOD') == -1) {
            gzFlag = "N";
        }
        var stcFlag = "N";
        if (dataType.indexOf("MOD") != -1 || dataType.indexOf("VSTC") != -1 || dataType.indexOf("MDL") != -1) {
            stcFlag = "Y";
            $('#evaResult').combobox({required: false});
            $("#stcEva").hide();
            $("#stcEva1").hide();
        } else {
            $('#evaResult').combobox({required: true});
            $("#stcEva").show();
            $("#stcEva1").show();
        }
        if (applyType == "APL") {
            $("#opapl").show();
            $("#opapl2").show();
            $("#openg").hide();
            $("#openg2").hide();
        } else if (applyType == "ENG") {
            $("#opapl").hide();
            $("#opapl2").hide();
            $("#openg").show();
            $("#openg2").show();
        } else if (applyType == "PART") {
            $("#opapl").hide();
            $("#opapl2").hide();
            $("#openg").hide();
            $("#openg2").hide();
        }
        InitFuncCodeRequest_({
            data: {
                domainCode: "EVA_RESULT_SEG,EVA_RESULT_SEG_SB,YESORNO,EM_FILE_DEAL_TASK_TYPE,EM_EVAL_WORK_TYPE_E,EM_FILE_EVAL_DEALMEASURE,EM_EVAL_WORK_TYPE,EM_SEG_TASK_NATURE,EM_APPLY_TYPE",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    PAGE_DATA['dealOpinion'] = DomainCodeToMap_(jdata.data["EM_FILE_DEAL_TASK_TYPE"]);
                    PAGE_DATA['dealMeasure'] = DomainCodeToMap_(jdata.data["EM_FILE_EVAL_DEALMEASURE"]);
                    PAGE_DATA['taskNature'] = DomainCodeToMap_(jdata.data["EM_SEG_TASK_NATURE"]);
                    PAGE_DATA['ifMaster'] = DomainCodeToMap_(jdata.data["YESORNO"]);
                    PAGE_DATA['shopVist'] = DomainCodeToMap_(jdata.data["YESORNO"]);
                    PAGE_DATA['applyType'] = DomainCodeToMap_(jdata.data["EM_APPLY_TYPE"]);
                    if (applyType == 'APL' || applyType == 'ENG') {
                        PAGE_DATA['workType'] = DomainCodeToMap_(jdata.data["EM_EVAL_WORK_TYPE_E"]);
                    } else {
                        PAGE_DATA['workType'] = DomainCodeToMap_(jdata.data["EM_EVAL_WORK_TYPE"]);
                    }
                    $("#sourceFileNo").MyComboGrid({
                        panelHeight: '300px',
                        idField: 'DATA_NO',  //实际选择值
                        textField: 'DATA_NO', //文本显示值
                        editable: false,
                        pagination: true,
                        tipPosition: 'top',
                        mode: 'remote',
                        params: {evaPkid: evapkid, FunctionCode: 'EM_FILEEVA_REFFILENO_LIST'},
                        columns: [[
                            {field: 'DATA_TYPE', title: '文件类型', width: 50, sortable: true},
                            {field: 'DATA_NO', title: '文件编号', width: 50, sortable: true},
                            {field: 'ATA', title: '章节', width: 50, sortable: true},
                            {field: 'DATA_VER', title: '版次', width: 50, sortable: true},
                            {field: 'ISSUE_DATE', title: '颁发日期', width: 50, sortable: true},
                        ]],

                        onSelect: function (index, row) {
                            selectRow = row;
                            $("#sourceFileVer").textbox('setValue', row.DATA_VER);
                            $("#sourceFileType").textbox('setValue', row.DATA_TYPE);
                            dmpkid = row.PKID;
                        }
                    });

                    if (dataType.indexOf("CAD") != -1 || dataType.indexOf("AD") != -1 || dataType.indexOf("AOMC") != -1 ||
                        dataType.indexOf("SB") != -1 || dataType.indexOf("IN") != -1
                        || dataType.indexOf("NSC") != -1) {

                        $('#evaResult').combobox({
                            panelHeight: '150px',
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            data: jdata.data.EVA_RESULT_SEG_SB,
                            onSelect: function (data) {
                                evaChange(data.VALUE);
                            }
                        });
                    } else {
                        $('#evaResult').combobox({
                            panelHeight: '150px',
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            data: jdata.data.EVA_RESULT_SEG,
                            onSelect: function (data) {
                                evaChange(data.VALUE);
                            }
                        });
                    }

                    $('#dealOpinion').combobox({
                        panelHeight: '150px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.EM_FILE_DEAL_TASK_TYPE
                    });

                }

                if (!segpkid) {
                    $("#evaOpinion").textbox("setValue", "N/A");
                    $("#evaResult").combobox("setValue", "SY");
                    $("#notapp").hide();
                    $("#notapp1").hide();
                    $("#notapp2").hide();
                    $("#notapp3").hide();
                }

                if (segpkid) {
                    InitDataForm(segpkid);
                    $("#segSn").textbox({onlyview: true, editable: false});
                    InitDataGrid(segpkid);
                    InitDataGrid1(segpkid);
                } else {
                    InitDataGrid("");
                    InitDataGrid1("");
                }
                InitDataGrid2("");
                InitDataGrid3("");
                InitDataGrid4("");

                if (operation == 'view') {
                    $("#addTaskBtn").prop("disabled", true);
                    $("#btcopy").prop("disabled", true);
                    $("#bt1").prop("disabled", true);
                    $("#bt10").prop("disabled", true);
                    $("#bt2").prop("disabled", true);
                    $("#bt3").prop("disabled", true);
                    $("#bt4").prop("disabled", true);
                    $("#bt5").prop("disabled", true);
                    $("#bt6").prop("disabled", true);
                    $("#downLoad").prop("disabled", true);
                    $("#import").prop("disabled", true);
                    $("#del").prop("disabled", true);
                    $('#copyFileApl').prop("disabled", true);
                    $('#copyFileEng').prop("disabled", true)
                    $("#assistViewId").hide();
                    $("#zoneSaveId").hide();
                    $("#copyStrcInfo").hide();
                    $("#judgeAttr").hide();
                    $("#structuralEe_Relation_Sr").hide();
                    $("#structuralEe_Add_Sr").hide();
                    $('#zoneBind').combotree({ disabled: true });
                    $("input[name='measureType']").prop("disabled", true);
                    $("#professionalEva").combobox('disable');

                    $(".viewMode").hide();
                    $('#byAdSsi').combobox('disable');
                    $('#byAir').combobox('disable');
                    $('#byRvsm').combobox('disable');
                    // $("#airWorthinessJudgeDg").prop("disabled", true);
                }
            }
        })
    }

    /**
     *  功能描述:初始化结构工程文件分段信息
     */
    function initStructureEESeg(segId){

        //如果是改装类源文件隐藏区域挂接,如果不是隐藏持续试航
        if(param.dataType.indexOf("MOD") != -1 || param.dataType.indexOf("VSTC") != -1){
            $("#showByprofessionalEva_id").hide();
        }else {
            $("#professionalEva_show").hide();
            $("#airWorthinessJudgeInfo").hide();
            $("#airWorthinessEeMenu").hide()
        }
        //查询是否结构类
        queryIfAsms(evapkid);
        var evaResult = $("#evaResult").combobox('getValue');
        if(param.dataType.indexOf("MOD") != -1 || param.dataType.indexOf("VSTC") != -1  || (ifAsms && ifAsms === "Y" && evaResult === "SY")){//是结构类调用ASMS系统接口方法
            strucSegpkid = segpkid ? segpkid: segId;
             $("#asmsInfo").show();
            //获取子机型
            debugger;
            if (param.applyModel == "CM") {
                getAllModel();
            } else {
                getModel(evapkid);
            }
            //查询ASMS配置地址,同步请求
            queryAsmsConfigUrl();
            //区域信息
            initZoneList();
            //持续适航
            getSelectZoneList(strucSegpkid,"PARA");
            //包围盒信息
            getLocationInfo(strucSegpkid);
            //部件信息列表
            getPartInfoList(strucSegpkid);
            //关联文件
            getAssociatedFile();
            //结构属性判断
            getModelStructureInfo("PARA",strucSegpkid);
            getStructureInfo(strucSegpkid);
            //初始化下拉选择
            selectNub();
            // 初始化持续适航
            intiWorthiness();
            //关联影响性列表
            getRelationList(strucSegpkid);

            initDataStrucEESr(strucSegpkid);
        }else{
            $("#asmsInfo").hide();
        };
    }

    //查询是否结构类  01374973 程建波
    function queryIfAsms(evapkid) {
        $.ajax({
            url: '/api/v1/ee/emFileStructureBase/queryEmFileStructureBase/'+evapkid,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                //判断操作是否成功
                if (result.msg == "success") {
                    var data = result.data;
                    if(JSON.stringify(data) != "{}" && data != undefined){
                        ifAsms=data.ifAsms;
                    }
                } else {
                    console.log("error--->"+result.msg);
                }
            },
            error:function(result){
                MsgAlert({content: result.msg , type: 'error'});
            }
        });
    }

    function getModel(evapkid) {
        $.ajax({
            type: "get",
            url: "/ee/emFileModelAction/selectModelByEvaPkId?evaPkid=" + evapkid,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (result) {
                $('#subTypeId').combobox({
                    panelHeight: '150px',
                    valueField: 'modelSeries',
                    textField: 'modelSeries',
                    data: result.data,
                    onSelect: function (data) {
                        modelType = data.modelSeries;
                        modelChange(data.modelSeries);

                    }
                });
            },
            error: function (data) {
                MsgAlert({content: "机型信息查询失败！", type: 'error'});
            }
        })
    }

    function getAllModel() {
        $.ajax({
            type: "get",
            url: "/ee/emFileModelAction/selectAllModel",
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (result) {
                $('#subTypeId').combobox({
                    panelHeight: '150px',
                    valueField: 'modelSeries',
                    textField: 'modelSeries',
                    data: result.data,
                    onSelect: function (data) {
                        modelType = data.modelSeries;
                        modelChange(data.modelSeries);

                    }
                });
            },
            error: function (data) {
                MsgAlert({content: "机型信息查询失败！", type: 'error'});
            }
        })
    }

    function modelChange(model){
        $("#zoneBind").combotree('clear');
        getZoneTreeInfo(model);

    }
    function getZoneTreeInfo(model){
        $.ajax({
            type: "get",
            url:asmsPro+ "/zone/queryZoneTree/"+model,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (data) {
                var data = data.result;

                data.forEach(function(item){
                    item.id = item.UUID;
                    item.text=item.Name;
                    item.children = item.ChildZone;
                    item.children.forEach(function(val){
                        val.id = val.UUID;
                        val.text=val.Name;
                        val.children = val.ChildZone;
                        val.children.forEach(function(child){
                            child.id = child.UUID;
                            child.text=child.Name;
                        })
                    })
                })
                $("#zoneBind").combotree('loadData',data)
            },
            error: function (data) {

            }
        })
    }


/*//措施类别变化
    function measureTypeChange(){
        var measureTypes = $("input[name='measureType']:checked").val();
        if(measureTypes=="5"){
            $('#otherMeasureShow').show();
            $('#structuralType').show();
        }else if(measureTypes=="4"){
            $('#structuralType').hide();
            $('#otherMeasureShow').hide();
        }else{
            $('#structuralType').show();
            $('#otherMeasureShow').hide();
        }

    }*/
    //挂接区域
    function bindZoneSave(){
        var zone = $('#zoneBind').combotree('getValues');
        if(!zone ||zone==''){
            MsgAlert({content: "请先选择区域", type: 'error'});
            return;
        }
        segNo = $("#segSn").textbox('getValue');
        var zoneVo = {
            "businessNo":evaNo,
            "businessId":evapkid ,
            "businessType": asmsModuleType,
            "subBusinessNo": segNo,
            "subBusinessId":strucSegpkid,
            "subBusinessType": "PARA",
            "subType": modelType,
            "zoneThirdList":zone,
        }
        $.ajax({
            type: "post",
            url: asmsPro + "/relation/business/insertZoneCoverBySubtype",
            contentType: "application/json;charset=utf-8",
            async: false,
            data:JSON.stringify(zoneVo),
            dataType: "json",
            success: function (data) {
                getSelectZoneList(strucSegpkid,"PARA");
                getRelationList(strucSegpkid);

            },
            error: function (data) {

            }
        })
        }
    //查询已选择区域
    function getSelectZoneList(id,type){
       //var asmsPro="http://10.88.5.39:8080"
        $.ajax({
            type: "get",
            url: asmsPro + "/relation/zone/selectZoneInfoBySubBusinessId/" + id + '/' + type,
            contentType: "application/json;charset=utf-8",
            async: false,
            dataType: "json",
            success: function (data) {
                if(data.result.length){
                    $("#zoneInfo").show();
                    $("#zoneList").datagrid("loadData",{ rows:data.result });
                }else{
                    $("#zoneInfo").hide();
                }
            },
            error: function (data) {

            }
        })

    }
    function initZoneList() {
        $("#zoneList").datagrid({
            columns: [[
                {field:'model', title: '机型', width: "100"},
                {field:'subType', title: '子机型', width: "130"},
                {field:'zoneFirst', title: '一级区域', width:"100"},
                {field:'zoneSecond', title: '二级区域', width: "100"},
                {field:'zoneThird', title: '三级区域', width: "100"},
                {field:'remark', title: '备注', width: "150"},
            ]],
            rownumbers:true,
            singleSelect:true,
            // fitColumns:true,
            onLoadSuccess:function(data){
            },
            onRowContextMenu: onRowContextZoneMenu

        })
    }

    //添加右击菜单内容
    function onRowContextZoneMenu(e, rowIndex, rowData) {
        e.preventDefault();
        $(this).datagrid('selectRow', rowIndex); //选中当前行
        if(operation == 'view'){
            $("#structuralEeZoneListDel").hide();
            $("#structuralEeZoneListDelView").show();
        }else{
            $("#structuralEeZoneListDel").show();
            $("#structuralEeZoneListDelView").hide();
        }
        $('#structuralEeZoneListMenu').menu('show', {
            left: e.pageX,
            top: e.pageY
        });
    }

    // 删除区域
    function deleteStruEEZone(){
        if (!confirm("是否确认删除？")) {
            return;
        }
        var row = $("#zoneList").datagrid('getSelected');
        var params = { "subBusinessId":strucSegpkid,"subtype":row.subType,"zone":row.zoneThird };
        $.ajax({
            url: "/api/v1/ee/emFileStructurePara/deleteBySubBusIdSubtypeOrZone",
            type: 'post',
            contentType: "application/json;charset=utf-8",
            data:JSON.stringify(params),
            dataType: "json",
            success: function (data) {
                if (data.code === RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '删除成功'});
                    getSelectZoneList(strucSegpkid,"PARA");
                    getRelationList(strucSegpkid);
                } else {
                    MsgAlert({content: data.msg , type: 'error'});
                }
            }
        });

    }



    function getLocationInfo (damageId){

        $.ajax({
            type: "get",
            url: asmsPro+"/relation/locationMsg/queryByBusinessId/" + damageId,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (response) {
                var boxData = {
                        staMin:'',
                        staMax:'',
                        strMin:'',
                        strMax:'',
                        blMin:'',
                        blMax:'',
                        wlMin:'',
                        Wlmax:''
                }
                if(response.result==null ||!response.result){
                    return;
                }
                $("#locationParam").text("");

                boxData.staMin = response.result.staMin + "" + ((response.result.staMinOffset < 0 || response.result.staMinOffset == "") ? response.result.staMinOffset : ("+" + response.result.staMinOffset));
                boxData.staMax = response.result.staMax + "" + ((response.result.staMaxOffset < 0 || response.result.staMaxOffset == "") ? response.result.staMaxOffset : ("+" + response.result.staMaxOffset));
                $("#locationParam").append(" STA: "+  boxData.staMin+" TO: "+ boxData.staMax);
                if (response.result.strMin) {
                    boxData.strMin = Math.abs(response.result.strMin) + (response.result.strMin < 0 ? "R" : "L");
                    if (response.result.strMinOffset) {
                        boxData.strMin += ((response.result.strMinOffset < 0 || response.result.strMinOffset == "") ? response.result.strMinOffset : ("+" + response.result.strMinOffset))
                    }

                }
                if (response.result.strMax) {
                    boxData.strMax = Math.abs(response.result.strMax) + (response.result.strMax < 0 ? "R" : "L");
                    if (response.result.strMaxOffset) {
                        boxData.strMax += ((response.result.strMaxOffset < 0 || response.result.strMaxOffset == "")? response.result.strMaxOffset : ("+" + response.result.strMaxOffset))
                    }
                }
                if(response.result.strMin && response.result.strMax){
                    $("#locationParam").append(" STR: "+  boxData.strMin+" TO: "+ boxData.strMax);
                }

                if (response.result.blMin) {
                    boxData.blMin = Math.abs(response.result.blMin) + (response.result.blMin < 0 ? "R" : "L");
                }

                if (response.result.blMax) {
                    boxData.blMax = Math.abs(response.result.blMax) + (response.result.blMax < 0 ? "R" : "L");
                }
                $("#locationParam").append(" BL: "+  boxData.blMin+" TO: "+ boxData.blMax);
                boxData.wlMin = response.result.wlMin;
                boxData.wlMax = response.result.wlMax;
                $("#locationParam").append(" WL: "+  boxData.wlMin+" TO: "+ boxData.wlMax);
            },
            error: function (data) {

            }
        })

    }
    function getAssociatedFile() {
        $.ajax({
            type: "get",
            url: "/ee/emFileModelAction/selectAssociatedFileByEvaId?evaId=" + evapkid,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (result) {
                $('#relativeFileId').combobox({
                    panelHeight: '150px',
                    valueField: 'associatedFileId',
                    textField: 'associatedFileNo',
                    data: result.data,
                    onSelect: function (data) {
                        associatedFileChange(data.associatedFileId);
                    }
                });
            },
            error: function (data) {
                //alert("关联文件查询失败！");
            }
        })
    }
    function associatedFileChange(id){
        $.ajax({
            type: "get",
            url: "/ee/emFileModelAction/selectParagraphByEvaluateFileId?evaluateFileId=" + id,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (result) {
                $('#sectionInfoId').combobox({
                    panelHeight: '150px',
                    valueField: 'paragraphId',
                    textField: 'paragraphNo',
                    data: result.data,
                    onSelect: function (data) {
                        getPartInfoList(data.paragraphId);
                    }
                });
            },
            error: function (data) {
                MsgAlert({content: "关联文件查询失败", type: 'error'});
            }
        })
    }
    function copyStrInfo(){
        var strctureArray = [];
        segNo = $("#segSn").textbox('getValue');
        var rows = $('#partList').datagrid('getRows');
        var paragraph =$('#relativeFileId').combobox("getValue");

        if(paragraph==""||!paragraph||!rows.length){
            return ;
        }

        for (var i = 0; i < rows.length; i++) {
            var obj = {
                "businessNo": evaNo,
                "businessId": evapkid,
                "businessType": asmsModuleType,
                "subBusinessNo": segNo,
                "subBusinessId":strucSegpkid,
                "subBusinessType": "PARA",
                "categoryCode": rows[i].categoryCode,
                "categoryName": rows[i].categoryType,
                "modelId": rows[i].id,
                "relationType": rows[i].type,
                "subType": "",
                "zone":"",
            }
            strctureArray.push(obj);
            var parent = {
                "businessNo":evaNo,
                "businessId": evapkid,
                "businessType": asmsModuleType,
                "categoryCode": rows[i].categoryCode,
                "categoryName": rows[i].categoryType,
                "modelId": rows[i].id,
                "relationType": rows[i].type,
                "subType": "",
                "zone":"",
            }
            strctureArray.push(parent)
        }
        $.ajax({
            type: "post",
            url:asmsPro+ "/relation/business/insert",
            contentType: "application/json;charset=utf-8",
            async:false,
            data:JSON.stringify(strctureArray),
            dataType: "json",
            success: function (result) {
                MsgAlert({content: "保存成功"});
                getPartInfoList(strucSegpkid);
                getRelationList(strucSegpkid);
                getModelStructureInfo("PARA",strucSegpkid);
                getStructureInfo(strucSegpkid);

            },
            error: function (err) {
                MsgAlert({content: "保存失败!", type: 'error'});

            }
        });
    }

    function getModelStructureInfo(type,id){
        $.ajax({
            type: "get",
            url: "/ee/emFileEmFileStructuralAttribute/queryModelEmFileStructuralAttribute?type="+type+"&&segId="+id,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (result) {
                var data = result.data;
                if(JSON.stringify(data) !== "{}" && data!==undefined){
                    PreData = data;
                }else{
                    PreData ={};
                }
            },
            error: function (data) {
                // alert("结构属性信息查询失败！");
            }
        });
    }
    function getStructureInfo(id) {
        // id="16899"
        $.ajax({
            type: "get",
            url: "/ee/emFileEmFileStructuralAttribute/queryEmFileStructuralAttribute?id="+id,
            contentType: "application/json;charset=utf-8",
            async:true,
            success: function (result) {
                var data = {};
                if(JSON.stringify(result.data) !== "{}" && result.data!==undefined){
                    data =result.data;
                }else if(JSON.stringify(PreData) !== "{}" && PreData!==undefined){
                    data = PreData;
                }else{
                    data ={};
                }
                    if(JSON.stringify(data) !== "{}" && data!==undefined){
                        $("#apb").text( yesOrNo(data.apb));
                        $("#ptf").text(yesOrNo(data.ptf));
                        $("#ptfArea").text(yesOrNo(data.ptfArea));
                        $("#pse").text(yesOrNo(data.pse));
                        $("#fcbs").text(fcbsFormatter(data.fcbs));
                        $("#pressurizedRegion").text(yesOrNo(data.pressurizedRegion));
                        $("#pneumaticArea").text(yesOrNo(data.pneumaticArea));
                        $("#wetArea").text(yesOrNo(data.wetArea));
                        $("#rsc").text(yesOrNo(data.rsc));
                        $("#ssi").text(yesOrNo(data.ssi));
                        $("#ssiNo").text(data.ssiNo?data.ssiNo:"");
                    }else{
                        $("#apb").text("");
                        $("#ptf").text("");
                        $("#ptfArea").text("");
                        $("#pse").text("");
                        $("#fcbs").text("");
                        $("#pressurizedRegion").text("");
                        $("#pneumaticArea").text("");
                        $("#wetArea").text("");
                        $("#rsc").text("");
                        $("#ssi").text("");
                        $("#ssiNo").text("");
                    }
            },
            error: function (data) {
                // alert("结构属性信息查询失败！");
            }
        });
    }
    function yesOrNo(value) {
        if(value=='0'){
            return "否"
        }else if(value=="1"){
            return "是"
        }
    }
    function fcbsFormatter(value) {
        switch(value){
            case "0":
                return "否";
            case "1":
                return "FCBS(1)";
            case "2":
                return "FCBS(2)";
            case "3":
                return "FCBS(3)";
            case "4":
                return "FCAS";
        }
    }


    function getAsmsModuleType(dataType){
        if(!dataType){
            return "";
        }
        if(dataType.indexOf("VSTC") !== -1 || dataType.indexOf("MOD") !== -1 ){
            return  "MOD"
        }
        return "EE"
    }


    function getRelationList(id) {

        if(!id || !asmsModuleType){
            return;
        }
        $.ajax({
            type: "get",
            url: "/api/v1/ee/effect/queryRelationALLList/"+id+"/"+asmsModuleType,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (result) {
                eeListData =JSON.stringify(result.data) !== "{}"? result.data.eeList:[];
                drListData = JSON.stringify(result.data) !== "{}"?result.data.drList:[];
                mpListData = JSON.stringify(result.data) !== "{}"?result.data.mpList:[];
                modListData = JSON.stringify(result.data) !== "{}"?result.data.modList:[];
            },
            error: function (data) {
                MsgAlert({content: "关联信息查询失败!", type: 'error'});
            }
        });
        initDataGrid6(eeListData);
        initDataGrid7(mpListData);
        initDataGrid8(drListData);
        initDataGrid9(modListData);
    }

    //Add by Doreen,SF
    function getPartInfoList(damageId){
       //var asmsPro="http://10.88.5.39:8080"
        $.ajax({
            type: "get",
            url: asmsPro + "/relation/structure/queryProBySubBusinessId/" +damageId,
            contentType: "application/json;charset=utf-8",
            async: false,
            dataType: "json",
            success: function (data) {
                initPartList(data.result);
            },
            error: function (data) {

            }
        })

    }
    function initPartList(data) {

        $("#partList").datagrid({
            columns: [[
                {field: 'id', title: 'id', hidden: true},
                {field: 'actualname', title: '名称', width: "110",hidden:true},
                {field: 'subtype', title: '子机型', width: "80"},
                {field: 'categoryType', title: '主结构件', width:"80"},
                {field: 'categorySubType', title: '次级结构件', width: "80"},
                {field: 'prodetail', title: '部件属性', width: "200",
                    formatter: function(value,row,index){
                        return formatterPro(row)
                    } },
                {field: 'manufacturers', title: '厂家', width: "100"},
                {field: 'sta', title: 'STA', width: "150",
                    formatter: function(value,row,index){
                        return formatterPosition(row.stamax,"sta",row.subtype)+" TO "+formatterPosition(row.stamin,"sta",row.subtype);
                    } },

                {field: 'bl', title: 'BL', width: "150",
                    formatter: function(value,row,index){
                        return formatterPosition(row.blmin,"bl")+" TO "+formatterPosition(row.blmax,"bl");
                    }},
                {field: 'wl', title: 'WL', width: "150",
                    formatter: function(value,row,index){
                        return formatterPosition(row.wlmin,"wl")+" TO "+formatterPosition(row.wlmax,"wl");
                    }},
                {field: 'str', title: 'STR', width: "80"},
                {field: 'memo', title: '备注', width: "100"},
                {field: 'uuid', title: 'uuid', hidden: true},
            ]],
            data:data,
            fitColumns:true,
            rownumbers:true,
            singleSelect:true,
            onLoadSuccess:function(data){
            },
            onRowContextMenu: onRowContextMenu2
        });
    }

    //添加右击菜单内容
    function onRowContextMenu2(e, rowIndex, rowData) {
        e.preventDefault();
        $(this).datagrid('selectRow', rowIndex); //选中当前行
        if(operation == 'view'){
            $("#partOperate").hide();
            $("#partOperateView").show();
        }else{
            $("#partOperate").show();
            $("#partOperateView").hide();
        }
        $('#partOperateMenu').menu('show', {
            left: e.pageX,
            top: e.pageY
        });

    }


    // 删除结构件列表信息
    function deletePart(){
        if (!confirm("是否确认删除？")) {
            return;
        }
        var row = $("#partList").datagrid('getSelected');
        $.ajax({
            url: asmsPro+"/relation/business/deleteSubByBusIdModelIdSubBusId?businessId=" + evapkid
            + "&modelId=" + row.id+"&subBusinessId="+strucSegpkid+"&businessType="+asmsModuleType,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if(data.succ=="ok"){
                    getPartInfoList(strucSegpkid);
                    getRelationList(strucSegpkid);
                    getModelStructureInfo("PARA",strucSegpkid);
                    getStructureInfo(strucSegpkid);

                }else{
                    MsgAlert({content: "删除失败："+data.msg , type: 'error'});
                }

            }
        });
    }
    function viewPart(){
        //modelType="B737-300"
        // if(!modelType){
        //     MsgAlert({content: "请先选择子机型!", type: 'error'});
        //     return ;
        // }
        var row = $("#partList").datagrid('getSelected');
        var subType = row.subtype;
        var aircraftInfo = {
            Type: subType.split("-")[0],
            SubType: subType.split("-")[1],
            Name:  "common",
            Appliance:   "common"
        };
        var params = {
            aircraftInfo: aircraftInfo,
            hiddenItems :  ["CreateMarker","CreatePatch","DelSelection"]
        };
        // var row = $("#partList").datagrid('getSelected');
        //console.log(params)
        SelectionStrucutreMarkerPatchRelation(row.id,params,asmsPro);

    }

    function roundValue(val, precision){

        if(val == null){
            return "";
        }

        if(!val.toString().match(/^[-+.0-9]+$/)){
            return val;
        }

        if(isNaN(val)){
            return "";
        }

        if(precision == null){
            precision = 2;
        }

        if(typeof (val) == "string"){
            val = parseFloat(val);
        }
        return val.toFixed(precision);
    }

    function formatterPosition(val, type,model){
        if(val == null){
            return "";
        }

        val = roundValue(val, 1);

        if (type == 'bl') {
            return Math.abs(val)+(val < 0 ? "R" : "L") ;
        }

        if(type == 'sta'){
            val = Math.abs(val);
           // modelType="B737-300"
            STAParser.init(model);
            var obj = STAParser.getSrcLength(val);
            if (obj.nOffset == 0) {
                return obj.nPos;
            }
            return obj.nPos + "+" + obj.nOffset;
        }

        return val;
    }
    /**
     * 格式化部件属性
     * @param obj
     */
    function formatterPro(obj){
        var list = [];

        if(obj.pse == 1){
            list.push("PSE");
        }
        if(obj.fcbs == 1){
            list.push("FCBS");
        }
        if(obj.ssi == 1){
            list.push("SSI");
        }
        if(obj.pneumaticArea == 1){
            list.push("pneumaticArea");
        }
        if(obj.wetArea == 1){
            list.push("wetArea");
        }
        if(obj.rsc == 1){
            list.push("RSC");
        }
        if(obj.apb == 1){
            list.push("APB");
        }
        if(obj.pressurizedRegion == 1){
            list.push("PressurizedRegion");
        }

        return list.join(",");
    }

    function initDataGrid6(data){

        //过滤本身评估单
        var eeList = [];
        if(data && data.length  > 0){
            for(var i in data){
                if(evaNo === data[i].eeNo){
                    continue;
                }
                eeList.push(data[i]) ;
            }
        }
        $("#dg6").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'文件编号',field:'fileNo',width:"100",},
                {title:'评估单Id',field:'eeId',hidden:true},
                {title:'评估单编号',field:'eeNo',width:"100",
                    formatter: function(value,row,index){
                        return '<a style="color:blue" onclick="openDetaiEE(\''+ row.eeId + '\')">'+row.eeNo+'</a>';
                } },
                {title:'版本',field:'rev',width:"100",},
                {title:'标题',field:'subject',width:"100",},
                {title:'适用性',field:'applicableAircraft',width:"100",},
                {title:'执行文件',field:'exeFileNo',width:"100",},
                {title:'备注',field:'remark',width:"100",width:"200",
                    editor : {
                        type : 'text',
                    },
                }
            ]],
            data:eeList,
            rownumbers:true,
            //singleSelect:true,
            onClickCell:onClickCell6,
            onAfterEdit:function (index, row, changes) {
                editRelation(row,"EE",changes);
            }


        });
    }
    $.extend($.fn.datagrid.methods, {

        editCell: function(jq,param){
            return jq.each(function(){
                var opts = $(this).datagrid('options');
                var fields = $(this).datagrid('getColumnFields',true).concat($(this).datagrid('getColumnFields'));
                for(var i=0; i<fields.length; i++){
                    var col = $(this).datagrid('getColumnOption', fields[i]);
                    col.editor1 = col.editor;
                    if (fields[i] != param.field){
                        col.editor = null;
                    }
                }
                $(this).datagrid('beginEdit', param.index);
                for(var i=0; i<fields.length; i++){
                    var col = $(this).datagrid('getColumnOption', fields[i]);
                    col.editor = col.editor1;
                }
            });
        }
    });

    var editIndex = undefined;
    function endEditing(dg){
        if (editIndex == undefined){return true}
        if ($(dg).datagrid('validateRow', editIndex)){
            $(dg).datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }
    function onClickCell6(index, field){
        if (endEditing("#dg6") && operation !== 'view'){
            $("#dg6").datagrid('selectRow', index)
                .datagrid('editCell', {index:index,field:field});
            editIndex = index;
        }
    }
    function onClickCell7(index, field){
        if (endEditing("#dg7")&& operation !== 'view'){
            $("#dg7").datagrid('selectRow', index)
                .datagrid('editCell', {index:index,field:field});
            editIndex = index;
        }
    }
    function onClickCell8(index, field,value){

        if (endEditing("#dg8")&& operation !== 'view'){
            if(field=="effect"){
                var row = $("#dg8").datagrid('getData').rows;
                var radioname="effectFlag"+index;
                row[index].effect = $("input[name='"+ radioname +"']:checked").val();
                editRelation(row[index],"DR");
                return;
            }
            $("#dg8").datagrid('selectRow', index)
                .datagrid('editCell', {index:index,field:field});
            editIndex = index;
        }
    }
    //END

    function editRelation(row,busType,changes) {

        var requireParams;
        if(busType === 'EE'){
            requireParams ={
                "busType": busType,
                "eeId": evapkid,
                "segId": strucSegpkid,
                "id": row.emFileEffectId ?  row.emFileEffectId : '' ,
                "relationBusId": row.eeId,
                "relationBusNo": row.eeNo,
                "remark": changes.remark
            };
        }else if(busType === 'MP'){
            requireParams ={
                "busType": busType,
                "eeId": evapkid,
                "segId": strucSegpkid,
                "id": row.emFileEffectId ?  row.emFileEffectId : '' ,
                "relationBusId": row.evalNo,
                "relationBusNo": row.cmpNo,
                "remark": changes.remark
            };
        }else if(busType==="DR"){
            requireParams ={
                "busType": busType,
                "eeId": evapkid,
                "segId": strucSegpkid,
                "id": row.emFileEffectId ?  row.emFileEffectId : '' ,
                "relationBusId": row.assessBaseId,
                "relationBusNo": row.assessBaseNo,
                "remark": changes ? changes.remark : row.remark,
                "effect": row.effect ? row.effect : "0",
            };
        }else if(busType==="MOD") {
            requireParams = {
                "busType": busType,
                "eeId": evapkid,
                "segId": strucSegpkid,
                "id": row.emFileEffectId ? row.emFileEffectId : '',
                "relationBusId": row.evaId,
                "relationBusNo": row.evaNo,
                "remark": changes ? changes.remark : row.remark,
            };
        }
        // console.log(requireParams)
        $.ajax({
            url : '/api/v1/ee/effect/editEmFileEffect',
            type:'post',
            data:JSON.stringify(requireParams),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success:function (data) {
                if(data.msg=='success'){
                    getRelationList(strucSegpkid);
                }
            }
        });
    }
    function openDetaiEE(eeId) {

        var operation = 'view';
        var title_ = $.i18n.t('工程文件评估页面');
        ShowWindowIframe({
            width: "1000",
            height: "650",
            param: {
                operation: operation,
                isFlow: true,
                userId: '',
                pkid: eeId,
                dataType: dataType
            },
            url: "/views/em/emfileeval/emfileeva_add_edit.shtml"
        });
    }
    function initDataGrid7(data){
        $("#dg7").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'条目编号',field:'cmpNo',width:"130",
                    formatter: function(value,row,index){
                        return '<a style="color:blue" onclick="openDetaiMp(\''+ row.evalNo + '\')">'+row.cmpNo+'</a>';
                    }},
                {title:'源文件',field:'source',width:"100",},
                {title:'适用性',field:'applicability',width:"100",},
                {title:'区域',field:'zone',width:"100",},
                {title:'备注',field:'remark',width:"200",
                    editor : {
                    type : 'text'
                    },
                }
            ]],
            data:data,
            rownumbers:true,
            //singleSelect:true,
            onClickCell:onClickCell7,
            onAfterEdit:function (index, row, changes) {
                editRelation(row,"MP",changes);
            }
        });
    }
    function openDetaiMp(evalNo){
        ShowWindowIframe({
            width: 1350,
            height: 850,
            param: {evalNo: evalNo},
            title: "查看",
            url: "/views/em/emmpdeval/workflow/evalNoteView.shtml"
        });
    }
    function initDataGrid9(data){
        $("#dg9").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'改装编号',field:'evaNo',width:"100",
                    formatter: function(value,row,index) {
                        return '<a style="color:blue" onclick="openDetaiEE(\'' + row.evaId + '\')">' + row.evaNo + '</a>';
                    }
                },
                {title:'标题',field:'title',width:"100",},
                {title:'适用性',field:'applicability',width:"100",},
                {title:'执行文件',field:'exeFileNo',width:"100",},
                {title:'备注',field:'remark',width:"300",editor : {
                        type : 'text'
                    },
                },
            ]],
            data:data,
            rownumbers:true,
            onClickCell:onClickCell9,
            onAfterEdit:function (index, row, changes) {
                if(changes!=={} && changes.remark){
                    editRelation(row,"MOD",changes);
                }
            },
            //singleSelect:true,
            onLoadSuccess:function(data){

            }
        });
    }

    function onClickCell9(index, field){
        if (endEditing("#dg9")&& operation !== 'view'){
            $("#dg9").datagrid('selectRow', index)
                .datagrid('editCell', {index:index,field:field});
            editIndex = index;
        }
    }


    function initDataGrid8(data){
        $("#dg8").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'损伤评估单号',field:'assessBaseNo',width:"100",},
                {title:'适用飞机',field:'aircraft',width:"80",},
                {title:'章节',field:'ata',width:"60",},
                {title:'区域',field:'zone',width:"60",},
                {title:'缺陷形式',field:'defectType',width:"100",},
                {title:'损伤描述',field:'cnDescribe',width:"100",},
                {title:'影响性',field:'effect',width:"150",
                    formatter: function(value, rowData, rowIndex){
                        var radioname="effectFlag"+rowIndex;
                        var ifexecute1 = value==1?'checked="true"':'';
                        var ifexecute2 = value==0?'checked="true"':'';
                        var ifDisabled = operation=='view'?'disabled="true"':'';
                        return '<input type="radio"  name="'+radioname+'" value="1" '+ ifexecute1 +' '+ ifDisabled +'/>是'+
                            '&nbsp;&nbsp;<input type="radio"  name="'+radioname+'" value="0" '+ ifexecute2 +''+ ifDisabled +'/>否';
                    },
                },
                {title:'备注',field:'remark',width:"150",
                    editor : {
                        type : 'text'
                    },
                }
            ]],
            data:data,
            rownumbers:true,
            // singleSelect:true,
            onClickCell:onClickCell8,
            onAfterEdit:function (index, row, changes) {
                if(changes!=={} && changes.remark){
                    editRelation(row,"DR",changes);
                }
            },
            onClickRow: function(rowIndex, rowData){

            },
            onLoadSuccess:function(data){
            }

        });
    }


    function initDataStrucEESr(segId){

        $("#structuralEeSrDg").datagrid({
            identity: 'structuralEeSrDg',
            url:basePath + "/api/v1/ee/sr/querySrListBySegId/"+segId+"/"+asmsModuleType,
            singleSelect:true,
            rownumbers:true,
            method:"get",
            //定义标题行所有的列
            columns:[[
                {title:'关联id',field:'id',hidden:true},
                {title:'服务申请id',field:'srId',hidden:true},
                {title:'SR编号',field:'srSeq'},
                {title:'SR标题',field:'srSubject',width:100},
                {title:'联系厂家',field:'oem'},
                {title:'厂家SR编号',field:'venderSrNum'},
                {title:'发起人',field:'sponsor'},
                {title:'状态',field:'status'},
                {title:'适用机型',field:'subType'},
                {title: '起始日期', field: 'createTime',
                    formatter: function (value, row, rowData) {
                        return formatterSrDate(value);
                    }
                 },
                {title:'完成日期',field:'closeTime',
                    formatter: function (value, row, rowData) {
                        return formatterSrDate(value);
                    }
                },
                {title:'备注',field:'remark',width:200}
            ]],
            onLoadSuccess:function(data){
                if(!data || !data.rows){
                    return;
                }
                srIds = [];
                var rows = data.rows;
                 for(var i in rows){
                     srIds.push(rows[i].srId);
                }
            },
            onRowContextMenu: onRowContextSrMenu
        });
    }

    //添加右击菜单内容
    function onRowContextSrMenu(e, rowIndex, rowData) {
        e.preventDefault();
        $(this).datagrid('selectRow', rowIndex); //选中当前行
        if(operation == 'view'){
            $("#structuralEeSrDel").hide();
            $("#structuralEeSrDelView").show();
        }else{
            $("#structuralEeSrDel").show();
            $("#structuralEeSrDelView").hide();
        }
        $('#structuralEeSrMenu').menu('show', {
            left: e.pageX,
            top: e.pageY
        });


    }


    // 删除sr
    function deleteStruEESr(){
        if (!confirm("是否确认删除？")) {
            return;
        }
        var row = $("#structuralEeSrDg").datagrid('getSelected');
        $.ajax({
            url: '/api/v1/ee/sr/deleteSrByRelationId/'+row.id,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.code === RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '删除成功'});
                    $("#structuralEeSrDg").datagrid("reload");
                } else {
                    MsgAlert({content: data.msg , type: 'error'});
                }
            }
        });

    }

    // 关联sr
    function structuralEeRelationSr(){
        var businessType =  asmsModuleType ==='MOD' ? 'MODSegSr':'EESegSr';
        ShowWindowIframe({
            width: "950",
            height: "600",
            title: "服务申请关联",
            param: {evapkid: evapkid, evaNo: evaNo,segId:strucSegpkid,
                segSn: $("#segSn").textbox('getValue'),srIds:srIds,businessType:businessType},
            url: "/views/em/emfileeval/ee/emfileeva_relation_sr_list.shtml"
        });
    }

    // 新增sr
    function structuralEeAddSr() {
        if (!confirm("是否确认新增？")) {
            return;
        }
        var businessType =  asmsModuleType ==='MOD' ? 'MODSegSr':'EESegSr';
        var params = {
            "busType": businessType,
            "eeId": evapkid,
            "eeNo": evaNo,
            "remark": "TDMS工程评估:" + evaNo + "分段:" + $("#segSn").textbox('getValue') + "新增",
            "segId": strucSegpkid,
            "title": param.evaTitle
        };
        $.ajax({
            url: '/api/v1/ee/sr/addSrAndBuildTask',
            type: 'post',
            data: JSON.stringify(params),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.code === RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    $("#structuralEeSrDg").datagrid("reload");
                } else {
                    MsgAlert({content: data.msg, type: 'error'});
                }
            }
        });
    }

    // 格式化日期
    function formatterSrDate(date) {
        if(!date){
            return "";
        }
        date = new Date(date);
        var y = date.getFullYear();
        var m = parseInt(date.getMonth()) + 1;
        var d = date.getDate();
        m = (m < 10) ? ('0' + m) : m;
        d = (d < 10) ? ('0' + d) : d;
        return y + "-" + m + "-" + d;
    }


    //Add by Doreen
    function allPlaneView(){

        var rows=$("#partList").datagrid('getRows');
        if(!rows ||!rows.length){
            MsgAlert({content: "暂无已挂接的结构件!", type: 'error'});
            return;
        }
        if(!modelType){
            MsgAlert({content: "请先选择子机型!", type: 'error'});
            return ;
        }

        var ids=[];
        for(var i =0;i < rows.length; i++){
            if(rows[i].subtype==modelType){
                ids.push(rows[i].id);
            }
        }
        if(!ids.length){
            MsgAlert({content: "该机型未挂接结构件!", type: 'error'});
            return;
        }

        var idParam=ids.join(",");

        //modelType="B737-300"
        var aircraftInfo = {
            Type: modelType.split("-")[0],
            SubType: modelType.split("-")[1],
            Name:  "common",
            Appliance:  "common"
        };
        var params = {
            aircraftInfo: aircraftInfo,
            hiddenItems :  ["CreateMarker","CreatePatch","DelSelection"]
        };
        SelectionStrucutreMarkerPatchRelation(idParam,params,asmsPro);
    }
    function assistView (){
        var title_ = $.i18n.t("三维辅助");
        //modelType="B737-300"
        console.log(modelType)
        if(!modelType){
            MsgAlert({content: "请先选择子机型!", type: 'error'});
            return ;
        }
        segNo = $("#segSn").textbox('getValue');
        businessData = {
            aircraft:"common",
            model:modelType,
            businessId: evapkid,
            businessNo: evaNo,
            subBusinessId:strucSegpkid,
            subBusinessNo:segNo,
        }
        ShowWindowIframe({
            width: "1100",
            height: "680",
            title:title_,
            param: {pkid: evapkid,businessData:businessData,asmsPro:asmsPro,asmsModuleType:asmsModuleType},
            url: "/views/em/emfileeval/ee/emfileeva_threedimensional.shtml"
        });
    }


    // 查询ASMS配置地址
    function queryAsmsConfigUrl(){
        $.ajax({
            type: "get",
            url: "/modelProperty/queryAsmsConfigUrl",
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (rst) {
                if (rst.code === 200) {
                    asmsPro = rst.data;
                }else {
                    MsgAlert({content: result.msg , type: 'error'});
                }
            },
            error: function (result) {
                alert("获取ASMS根路径失败！");
            }
        });
    }


   /* // 查询措施类别
    function queryMeasureType(segId){
        $('#structuralType').show();
        $('#otherMeasureShow').hide();
        $.ajax({
            url: '/api/v1/ee/emFileStructurePara/queryEmFileStructureParaBySegId/'+segId,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                //判断操作是否成功
                if (result.code == "200") {
                    var data = result.data;
                    if(JSON.stringify(data) != "{}" && data != undefined){
                        messageId=data.pkid;
                        $("#otherMeasure").textbox("setValue",data.measureTypeDesc);
                        for (var i = 0; i < data.measureType.length; i++) {
                            $("input[name='measureType'][value='" + data.measureType[i] + "']").prop("checked", true);
                        }
                        measureTypeChange();
                    }
                } else {
                    MsgAlert({content: result.msg , type: 'error'});
                }
            }
        });
    }

    // 保存措施类别
    function saveMeasureType(){
        var measureTypeDesc = $("#otherMeasure").textbox('getValue');
        var measureTypes = $("input[name='measureType']:checked").val();
        if(measureTypes == ''||!measureTypes){
            MsgAlert({content: "措施类别必填", type: 'error'});
            return;
        };
        var params = {
            "pkid":messageId,
            "evaId": evapkid,
            "segId": strucSegpkid,
            "measureType": measureTypes,
            "measureTypeDesc": measureTypeDesc
        };
        $.ajax({
            url: '/api/v1/ee/emFileStructurePara/editEmFileStructurePara',
            type: 'post',
            data: JSON.stringify(params),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                //判断操作是否成功
                if (data.code ==200) {
                    // 操作成功后提示
                    MsgAlert({content: "操作成功"  , type: 'info'});
                } else {
                    MsgAlert({content: data.msg , type: 'error'});
                }
            }
        });
    }
*/
    // 保存
    function save() {
        var segSn = $("#segSn").textbox('getValue');
        var isValidate = $("#mform").form('validate');
        if (!isValidate)
            return;
        var curCou = 0;
        if (segpkid == "" || segpkid == null) {
            InitFuncCodeRequest_({
                data: {evaPkid: evapkid, segSn: segSn, FunctionCode: 'EM_FILE_CHECK_SEGSN'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            curCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        } else {
            InitFuncCodeRequest_({
                data: {evaPkid: evapkid, segSn: segSn, segId: segpkid, FunctionCode: 'EM_FILE_CHECK_SEGSN_E'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            curCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });

        }

        if (curCou != 0) {
            MsgAlert({content: "分段号重复，请重新输入！", type: 'error'});
            $("#segSn").textbox('clear');
            return;
        }

        var $form = $("#mform");
        var datas = $form.serializeObject();
        datas = $.extend({evgpkid: evapkid}, datas, {FunctionCode: 'EM_FILE_SEG_ADD'});
        InitFuncCodeRequest_({
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    segpkid = jdata.data.pkid;
                    $("#pkid").textbox('setValue', jdata.data.pkid);
                    //初始化结构工程文件分段信息
                    initStructureEESeg(jdata.data.pkid);
//                    $("#segSn").textbox({onlyview: true, editable: false});
                    param.OWindow.reload_("#dg6");
                    // 结构专业评估显示
                    if(param.dataType.indexOf("MOD") != -1 || param.dataType.indexOf("VSTC") != -1) {
                        showAndHide(jdata.data.professionalEva);
                    };
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function add() {
        ShowWindowIframe({
            width: "1366",
            height: "768",
            param: {pkid: evapkid},
            url: "/views/em/emfileeval/emfileeva_add_group.shtml"
        });
    }
//Add by Doreen,SF
    function judgeBtn() {

        var title_ = $.i18n.t("结构属性判断");
        ShowWindowIframe({
            width: "600",
            height: "680",
            title:title_,
            param: {segpkid: strucSegpkid,evaId:evapkid},
            url: "/views/em/emfileeval/ee/emfileeva_add_strc_attr.shtml"
        });
    }

    function addSourSeg() {
        if (!segpkid) {
            MsgAlert({content: "请先保存分段主表数据！", type: "error"});
            return false;
        }
        var refFileNo = $('#sourceFileNo').combobox('getValue');
        var sourSeg = $('#sourceFileSeg').textbox('getValue');
        if (!refFileNo) {
            MsgAlert({content: "此处必须选择文件号", type: "error"});
            return false;
        }
        if (sourSeg == null || sourSeg == "") {
            MsgAlert({content: "分段不能为空", type: "error"});
            return false;
        }
        var $form = $("#mform");
        var datas = $form.serializeObject();
        datas = $.extend({segpkid: segpkid, dmpkid: dmpkid}, datas, {FunctionCode: 'EM_FILE_SEG_SOUR_ADD'});
        InitFuncCodeRequest_({
            data: datas,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: "操作成功"});
                    InitDataGrid(segpkid);
                    $("#sourceFileNo").combobox('clear');
                    $('#sourceFileSeg').textbox('setValue', '');
                    param.OWindow.reload_("#dg6");
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function InitDataGrid(segpkid) {
        var identity = 'dg';
        $("#dg").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {segpkid: segpkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_SOUR_LIST'
                    },
                    alter: {}
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg').datagrid('getSelected');
                            var refPkid = rowData.PKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, segpkid: segpkid, FunctionCode: "EM_FILE_SEG_SOUR_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (operation == 'view') {
                        items['删除'].enable = false;
                    }

                    return items;
                }
            }
        )
    }

    function InitDataGrid1(segpkid) {
        var identity = 'dg1';
        $("#dg1").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: true,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {segpkid: segpkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_TASK_LIST'
                    },
                    alter: {
                        WORK_TYPE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['workType'] [value];
                            }
                        },
                        TASK_NATURE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['taskNature'] [value];
                            }
                        }

                    }
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    /*{
                        id: "m-edit", i18nText: "设置时限", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg1').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            openSetTl('edit', rowData);
                        }
                    },*/
                    {
                        id: "m-edit", i18nText: "编辑任务", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg1').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            editTask('edit', rowData);
                        }
                    },
                    {
                        id: "", text: "删除任务", auth: "",
                        onclick: function () {
                            var rowData = $('#dg1').datagrid('getSelected');
                            var refPkid = rowData.PKID;

                            var curCou = 0;
                            InitFuncCodeRequest_({
                                data: {taskId: refPkid, FunctionCode: 'EM_FILE_CHECK_SF'},
                                async: false,
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        if (jdata.data != null) {
                                            curCou = jdata.data.COU;
                                        }
                                    } else {
                                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                    }
                                }
                            });
                            if (curCou > 0) {
                                MsgAlert({
                                    content: "请先删除顺丰执行文件！",
                                    type: 'error'
                                });
                                return;
                            }
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {taskpkid: refPkid, FunctionCode: "EM_FILE_SEG_TASK_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg1");
                                        reload_("#dg2");
                                        reload_("#dg3");
                                        reload_("#dg4");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                onSelect: function (index, row) {
                    InitDataGrid2(row.PKID);
                    InitDataGrid3(row.PKID);
                    InitDataGrid4(row.PKID);
                },
            onDblClickRow: function (index, field, rowData) {
                editTask('view', rowData);
            },
            validAuth: function (row, items) {
                if (operation == 'view') {
                    items['编辑任务'].enable = false;
                    items['删除任务'].enable = false;
                }
                return items;
            }
            }
        )
    }

    function InitDataGrid2(taskid) {
        var func = 'EM_FILE_TASK_SF_LIST';
        if (applyType == "ENG" || applyType == "PART") {
            func = "EM_FILE_TASK_SF_ENG";
        }
        var identity = 'dg2';
        $("#dg2").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                queryParams: {
                    segpkid: segpkid,
                    taskid: taskid
                },
                columns: {
                    param: {
                        FunctionCode: func
                    },
                    alter: {
                        IF_MASTER: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['ifMaster'] [value];
                            }
                        },
                        TEST_UPLOAD: {
                            formatter: function (value, row, index) {
                                if (row.TEST_UPLOAD) {
                                    return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach">' +
                                        '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                                }
                            }
                        },
                        DEAL_OPINION: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dealOpinion'] [value];
                            }
                        },
                        DEAL_MEASURE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dealMeasure'] [value];
                            }
                        },
                        APPLY_TYPE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['applyType'] [value];
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                    InitSuspend('a.attach', {
                        'onmouseover': function (thiz, event, callback) {
                            var index = $(thiz).attr("rowindex");
                            var row = $("#dg2").datagrid('getRows')[index];
                            InitFuncCodeRequest_({
                                data: {
                                    SOURCE_ID: row.PKID,
                                    CATEGORY: "emFileEvalSf",
                                    FunctionCode: 'ATTACHMENT_RSPL_GET'
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code === RESULT_CODE.SUCCESS_CODE) {

                                    }
                                    var html = "";
                                    for (var i = 0; i < jdata.data.length; i++) {
                                        html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a><span onclick="deleteFile(\'' + jdata.data[i].PKID + '\');return false;" class="icon-cross"></span></li>';
                                    }
                                    callback(html);
                                }
                            });
                        }
                    });

                    if (gzFlag == 'N') {
                        $('#dg2').datagrid('hideColumn', 'IF_MASTER');
                    }
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg2').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            var status = rowData.STATUS;
                            if (status == '编写中' || status == 'N/A' || status == '已创建' || status == '编写' || status == '退回' || status == '任务退回' || status == '驳回' || status == '生效') {
                                editTaskSf(rowData, "edit");
                            } else {
                                MsgAlert({content: "不是编写中不允许编辑！", type: 'error'});

                            }
                        }
                    },
                    {
                        id: "m-edit", i18nText: "取消关联", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg2').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var exePkid = rowData.EXE_PKID;
                            var deal = rowData.DEAL_OPINION;
                            var curCou = 0;
                            InitFuncCodeRequest_({
                                data: {exePkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ'},
                                async: false,
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        if (jdata.data != null) {
                                            curCou = jdata.data.COU;
                                        }
                                    } else {
                                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                    }
                                }
                            });
                            if (curCou == 1 && deal != 'MP') {
                                MsgAlert({content: "已关联的评估单只有一个，不允许取消！", type: 'error'});

                            } else {
                                cancelRef(rowData, identity);
                            }
                        }
                    },
                    {
                        id: "m-stop", i18nText: "终结",
                        onclick: function () {
                            var rowData = $("#dg2").datagrid('getSelected');
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var pkid = rowData.PKID;
                            var deal = rowData.DEAL_OPINION;
                            var status = rowData.STATUS;
                            if (!pkid) {
                                MsgAlert({content: '请选择记录', type: 'error'});
                                return;
                            }
                            if (deal == "EO" || deal == "EA") {
                                if (status == '生效') {
                                    stopEo(rowData, identity);
                                } else {
                                    MsgAlert({content: "只有生效状态只能进行此操作！", type: 'error'});
                                }
                            }else if(deal == "TB"){
                                if (status == '生效') {
                                    stopTb(rowData, identity);
                                } else {
                                    MsgAlert({content: "只有生效状态只能进行此操作！", type: 'error'});
                                }
                            } else {
                                MsgAlert({content: "只有EO和EA只能进行此操作！", type: 'error'});

                            }
                        }
                    },
                    {
                        id: "m-stop", i18nText: "改版工卡",
                        onclick: function () {
                            var rowData = $("#dg2").datagrid('getSelected');
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var pkid = rowData.PKID;
                            var deal = rowData.DEAL_OPINION;
                            var status = rowData.STATUS;
                            var jcStatus = rowData.JC_STATUS;
                            if (!pkid) {
                                MsgAlert({content: '请选择记录', type: 'error'});
                                return;
                            }
                            if (deal == "EO" || deal == "EA") {
                                if (jcStatus == 'ISSUED') {
                                    revJc(rowData, identity);
                                } else {
                                    MsgAlert({content: "只有已发布的工卡才能改版！", type: 'error'});

                                }
                            } else {
                                MsgAlert({content: "只有EO和EA只能进行此操作！", type: 'error'});

                            }
                        }
                    },
                    {
                        id: "m-edit", i18nText: "改版", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg2').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            revTaskSf();
                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg2').datagrid('getSelected');
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var refPkid = rowData.PKID;
                            var exePkid = rowData.EXE_PKID;
                            var exeNo = rowData.EXE_NO;
                            var dealOpinion = rowData.DEAL_OPINION;
                            var dealMeasure = rowData.DEAL_MEASURE;
                            var curCou = 0;
                            var flag = "ONE";
                            var status = "";
                            var procInstId = "";
                            if (dealOpinion == "TB" || dealOpinion == "MP") {
                                if (dealMeasure == "REF") {
                                    MsgAlert({content: "关联的不能删除，只能取消关联！", type: 'error'});
                                    return;
                                }
                                if(rowData.STATUS!=="编写中"){
                                    MsgAlert({content: "不是编写中状态，不能删除", type: 'error'});
                                    return;
                                }
                            }
                            if (dealOpinion == "JYD") {
                                var stajyd = '';
                                InitFuncCodeRequest_({
                                    data: {pkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ_JYD'},
                                    async: false,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            if (jdata.data != null) {
                                                stajyd = jdata.data.STATUS;

                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });
                                if (stajyd != "EDIT") {
                                    MsgAlert({
                                        content: "当前执行文件关联的建议单不是编写中，不允许删除！",
                                        type: 'error'
                                    });
                                    return;
                                }
                            }
                            if (dealOpinion == "EO" || dealOpinion == "EA") {

                                InitFuncCodeRequest_({
                                    data: {exePkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ'},
                                    async: false,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            if (jdata.data != null) {
                                                curCou = jdata.data.COU;
                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });

                                if (curCou > 1) {
                                    flag = "MANY";
                                }
                                if (flag == "ONE") {
                                    InitFuncCodeRequest_({
                                        data: {pkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ_EO'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    status = jdata.data.STATUS;
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                } else if (flag == "MANY") {
                                    var result = "";
                                    InitFuncCodeRequest_({
                                        data: {eoId: exePkid, pkid: refPkid, FunctionCode: 'EM_FILE_CHECK_REF_EO'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var objArray = jdata.data;
                                                    if (Array.isArray(objArray)) {
                                                        if (objArray.length > 0 && objArray[0] != null) {
                                                            for (var k = 0; k < objArray.length; k++) {
                                                                result = result + '[' + objArray[k].EVA_NO + 'R' + objArray[k].EVA_VER + '的分段 ' + objArray[k].SEG_SN + '的任务 ' + objArray[k].TASK_NO + '];';
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                    MsgAlert({
                                        content: "与该EO关联的不止一条，不允许删除！评估单为：" + result,
                                        type: 'error'
                                    });
                                    return;
                                }
                                if (!(status == "00" || status == "05")) {
                                    MsgAlert({
                                        content: "当前执行文件关联的" + dealOpinion + "不是编写中或退回状态，请先在" + dealOpinion + "模块退回！",
                                        type: 'error'
                                    });
                                    return;
                                } else if (status == "05") {//只有退回状态才删工作流
                                    InitFuncCodeRequest_({
                                        data: {
                                            objNo: exePkid,
                                            objKey: "EM_EO",
                                            FunctionCode: "EM_WORKFLOW_BUSINESSKEY"
                                        },
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                procInstId = jdata.data;
                                                InitFuncCodeRequest_({
                                                    url: Constant.API_V1_URL + "flow/inst/delete",
                                                    data: {procInstId: procInstId, deleteReason: ''},
                                                    successCallBack: function (jdata) {
                                                        if (jdata.code != RESULT_CODE.SUCCESS_CODE) {
                                                            MsgAlert({content: jdata.msg, type: 'error'});
                                                            return;
                                                        }
                                                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_err:ERRMSG.COMMON.SUCCESS_CODE')});
                                                    }
                                                });
                                            } else {
                                                MsgAlert({content: jdata.msg, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                            //EO/EA/TB
                            if (dealOpinion == "EO" || dealOpinion == "EA" || dealOpinion == "TB" || dealOpinion == "JYD") {
                                if (!confirm("此操作将会删除系统" + dealOpinion + "模块中当前版本的" + dealOpinion + "？")) {
                                    return;
                                }
                            } else {
                                if (!confirm("是否确认删除？")) {
                                    return;
                                }
                            }

                            InitFuncCodeRequest_({
                                data: {
                                    taskid: taskid,
                                    exeNo: exeNo,
                                    pkid: refPkid,
                                    flag: flag,
                                    exePkid: exePkid,
                                    dealOpinion: dealOpinion,
                                    FunctionCode: "EM_FILE_TASK_SF_DEL"
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg2");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (operation == 'view') {
                        items['编辑'].enable = false;
                        items['取消关联'].enable = false;
                        items['终结'].enable = false;
                        items['改版工卡'].enable = false;
                        items['改版'].enable = false;
                        items['删除'].enable = false;
                    }
                    if (row.DEAL_MEASURE != "REF") {
                        items['取消关联'].enable = false;
                    }
                    if (row.DEAL_OPINION == "SYBZX" || row.DEAL_OPINION == "OTHERS") {
                        items['取消关联'].enable = false;
                        items['终结'].enable = false;
                        items['改版工卡'].enable = false;
                        items['改版'].enable = false;
                    }


                    return items;
                },
                onDblClickRow: function (index, field, value) {
                    editTaskSf(value, "view");
                }
            }
        )
    }

    function InitDataGrid3(taskid) {
        var identity = 'dg3';
        $("#dg3").MyDataGrid({
            fit: true,
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            queryParams: {
                segpkid: segpkid,
                taskid: taskid
            },
            columns: {
                param: {
                    FunctionCode: 'EM_FILE_TASK_OPAPL_LIST'
                },
                alter: {
                    IF_MASTER: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['ifMaster'] [value];
                        }
                    },
                    LAST_EXE_TIME: {
                        type: 'date'
                    },
                    FH: {
                        formatter: function (value, row, index) {
                            if (!value) {
                                return "";
                            }
                            value = value + "";
                            if (value.indexOf(".") != -1) {
                                var arr = value.split('.');
                                var min = arr[1];
                                if (min.length == 1) {
                                    value = value + "0";
                                }
                            }
                            return value;
                        }
                    }
                }
            },
            onLoadSuccess: function () {
                if (gzFlag == 'N') {
                    $('#dg3').datagrid('hideColumn', 'IF_MASTER');
                }
            },
            contextMenus: [
                {
                    id: "m-edit",
                    i18nText: "编辑",
                    auth: "",
                    onclick: function () {
                        var rowData = getDG('dg3').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }

                        var taskNature = "";
                        var workType = "";
                        var taskId = rowData.TASK_PKID;
                        InitFuncCodeRequest_({
                            data: {pkid: taskId, FunctionCode: 'EM_FILE_TASK_BY_PKID'},
                            async: false,
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    if (jdata.data != null) {
                                        taskNature = jdata.data.TASK_NATURE;
                                        workType = jdata.data.WORK_TYPE;
                                    }
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });

                        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
                        ShowWindowIframe({
                            url: "/views/em/emfileeval/emfileeva_seg_add_opapl.shtml",
                            param: {
                                pkid: rowData.PKID,
                                evapkid: evapkid,
                                taskId: taskId,
                                needMaster: needMaster,
                                taskNature: taskNature,
                                workType: workType,
                                applyType: applyType
                            },
                            title: $.i18n.t('编辑上营运人执行文件--机身'),
                            width: "650",
                            height: "500"
                        });
                    }
                },
                // {
                //     id: "m-edit", i18nText: "清空适用性", auth: "",
                //     onclick: function () {
                //         var rowData = getDG('dg3').datagrid('getSelected');
                //         if (!rowData.PKID) {
                //             MsgAlert({content: "请选择数据！", type: 'error'});
                //             return;
                //         }
                //         delAppl(rowData, "APL", identity);
                //     }
                // },
                {
                    id: "", text: "删除", auth: "",
                    onclick: function () {
                        var rowData = $('#dg3').datagrid('getSelected');
                        var refPkid = rowData.PKID;
                        if (!confirm("是否确认删除？")) {
                            return;
                        }
                        InitFuncCodeRequest_({
                            data: {pkid: refPkid, FunctionCode: "EM_FILE_TASK_OPAPL_DEL"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: '操作成功'});
                                    reload_("#dg3");
                                } else {
                                    MsgAlert({content: jdata.msg, type: 'error'});
                                }
                            }
                        })
                    }
                }
            ],
            validAuth: function (row, items) {
                if (operation == 'view') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                return items;
            }
        });
    }

    function InitDataGrid4(taskid) {
        var title_ = "上营运人发动机编辑";
        var identity = 'dg4';
        $("#dg4").MyDataGrid({
            fit: true,
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            queryParams: {
                segpkid: segpkid,
                taskid: taskid
            },
            columns: {
                param: {
                    FunctionCode: 'EM_FILE_TASK_OPENG_LIST'
                },
                alter: {
                    IF_MASTER: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['ifMaster'] [value];
                        }
                    },
                    SHOP_VIST: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['shopVist'] [value];
                        }
                    },
                    LAST_EXE_TIME: {
                        type: 'date'
                    }
                }
            },
            onLoadSuccess: function () {
                if (gzFlag == 'N') {
                    $('#dg4').datagrid('hideColumn', 'IF_MASTER');
                }
            },
            contextMenus: [
                {
                    id: "m-edit",
                    i18nText: "编辑",
                    auth: "",
                    onclick: function () {
                        var rowData = getDG('dg4').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }

                        var taskNature = "";
                        var workType = "";
                        var taskId = rowData.TASK_PKID;
                        InitFuncCodeRequest_({
                            data: {pkid: taskId, FunctionCode: 'EM_FILE_TASK_BY_PKID'},
                            async: false,
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    if (jdata.data != null) {
                                        taskNature = jdata.data.TASK_NATURE;
                                        workType = jdata.data.WORK_TYPE;
                                    }
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });

                        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
                        ShowWindowIframe({
                            url: "/views/em/emfileeval/emfileeva_seg_add_openg.shtml",
                            param: {
                                pkid: rowData.PKID,
                                evapkid: evapkid,
                                taskId: taskId,
                                needMaster: needMaster,
                                taskNature: taskNature,
                                workType: workType,
                                applyType: applyType
                            },
                            title: title_,
                            width: "600",
                            height: "350"
                        });
                    }
                },
                // {
                //     id: "m-edit", i18nText: "清空适用性", auth: "",
                //     onclick: function () {
                //         var rowData = getDG('dg4').datagrid('getSelected');
                //         if (!rowData.PKID) {
                //             MsgAlert({content: "请选择数据！", type: 'error'});
                //             return;
                //         }
                //         delAppl(rowData, "ENG", identity);
                //     }
                // },
                {
                    id: "", text: "删除", auth: "",
                    onclick: function () {
                        var rowData = $('#dg4').datagrid('getSelected');
                        var refPkid = rowData.PKID;
                        if (!confirm("是否确认删除？")) {
                            return;
                        }
                        InitFuncCodeRequest_({
                            data: {pkid: refPkid, FunctionCode: "EM_FILE_TASK_OPENG_DEL"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: '操作成功'});
                                    reload_("#dg4");
                                } else {
                                    MsgAlert({content: jdata.msg, type: 'error'});
                                }
                            }
                        })
                    }
                }
            ],
            validAuth: function (row, items) {
                if (operation == 'view') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                return items;
            }
        });
    }


    function evaChange(dealOption) {
        $("#notapp").hide();
        $("#notapp1").hide();
        if (dealOption == "SY") {
            $('#substituteByFile').textbox('setValue', '');
            $('#notAppReason').textbox('setValue', '');
            $("#notapp2").hide();
            $("#notapp3").hide();
            $("#substituteByFile").textbox({required: false});
            $("#addTaskBtn").prop("disabled", false);
            if(ifAsms === "Y"){
                $("#asmsInfo").show();
            }
            $("#subTypeId").combobox('setValue', "");
            $("#zoneBind").combotree('setValue', "");
            $("#relativeFileId").combobox('setValue', "");
            $("#sectionInfoId").combobox('setValue', "");
            initStructureEESeg("");

        } else if (dealOption == "BSY" || dealOption == "ZHL") {
            if (!confirm("选择不适用将清空任务,执行文件、结构信息，是否确认？")) {
                $("#evaResult").combobox('setValue', "SY");
            } else {
                $('#substituteByFile').textbox('setValue', '');
                $("#notapp2").hide();
                $("#notapp3").hide();
                $("#substituteByFile").textbox({required: false});
                $("#addTaskBtn").prop("disabled", true);
                $("#asmsInfo").hide();

                InitFuncCodeRequest_({
                    data: {segpkid: segpkid, dealOption: dealOption, FunctionCode: "EM_FILE_SEG_TASK_CLEAR"},
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: '操作成功'});
                            reload_("#dg1");
                            reload_("#dg2");
                            reload_("#dg3");
                            reload_("#dg4");
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                })
            }
        } else if (dealOption == "BQD") {
            if (!confirm("选择被取代将清空任务及执行文件数据，是否确认？")) {
                $("#evaResult").combobox('setValue', "SY");
            } else {
                $("#substituteByFile").textbox({required: true});
                $('#notAppReason').textbox('setValue', '');
                $("#notapp2").show();
                $("#notapp3").show();
                $("#addTaskBtn").prop("disabled", true);
                $("#asmsInfo").hide();
                InitFuncCodeRequest_({
                    data: {segpkid: segpkid, dealOption: dealOption, FunctionCode: "EM_FILE_SEG_TASK_CLEAR"},
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: '操作成功'});
                            reload_("#dg1");
                            reload_("#dg2");
                            reload_("#dg3");
                            reload_("#dg4");
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                })
            }
        } else {
            $("#notapp2").hide();
            $("#notapp3").hide();
            $("#substituteByFile").textbox({required: false});
        }
        var evaResNew = $("#evaResult").combobox('getValue');
        InitFuncCodeRequest_({
            data: {segpkid: segpkid, dealOption: evaResNew, FunctionCode: "EM_FILE_SEG_TASK_RESULT"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function evaChangeInit(dealOption) {
        $("#notapp").hide();
        $("#notapp1").hide();
        $("#asmsInfo").hide();
        if (dealOption == "SY") {
            $('#substituteByFile').textbox('setValue', '');
            $('#notAppReason').textbox('setValue', '');
            $("#notapp2").hide();
            $("#notapp3").hide();
            $("#substituteByFile").textbox({required: false});
            $("#addTaskBtn").prop("disabled", false);
            if (ifAsms === "Y") {
                $("#asmsInfo").show();
            }
        } else if (dealOption == "BSY" || dealOption == "ZHL") {
            $('#substituteByFile').textbox('setValue', '');
            $("#notapp2").hide();
            $("#notapp3").hide();
            $("#substituteByFile").textbox({required: false});
            $("#addTaskBtn").prop("disabled", true);
        } else if (dealOption == "BQD") {
            $('#notAppReason').textbox('setValue', '');
            $("#notapp2").show();
            $("#notapp3").show();
            $("#substituteByFile").textbox({required: true});
            $("#addTaskBtn").prop("disabled", true);
        } else {
            $("#notapp2").hide();
            $("#notapp3").hide();
            $("#substituteByFile").textbox({required: false});
        }
    }

    function InitDataForm(pkid) {
        InitFuncCodeRequest_({
            data: {pkid: segpkid, FunctionCode: "EM_FILE_SEG_BY_PKID"},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {

                    if (operation == 'view') {
                        $("#mform [textboxname]").each(function (k, it) {
                            if($(it).hasClass("subType-info")){//子机型信息需要操作
                                return;
                            }
                            if ($(it).hasClass("combobox-f")) {
                                $(it).combobox({editable: false, onlyview: true});
                            } else if ($(it).hasClass("textbox-f")) {
                                $(it).textbox({editable: false, onlyview: true});
                            } else {
                                $(it).datetimebox({editable: false, onlyview: true});
                            }
                        });
                    }
                    ParseFormField_(jdata.data, $("#mform"), Constant.CAMEL_CASE);
                    $("#evaResult").combobox('setValue', jdata.data.EVA_RESULT);
                    initStructureEESeg("");
                    var evaRes = $("#evaResult").combobox('getValue');
                    evaChangeInit(evaRes);
                    if(param.dataType.indexOf("MOD") != -1 || param.dataType.indexOf("VSTC") != -1){
                    if(jdata.data.hasOwnProperty("PROFESSIONAL_EVA")){
                        showAndHide(jdata.data.PROFESSIONAL_EVA);
                    }else {
                        showAndHide("N");
                    }
                    };
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }

        });
    }

    function addTask() {
        var title_ = $.i18n.t('增加分段任务');
        var isTlShow = (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1 || dataType.indexOf("AMOC") != -1 || (dataType.indexOf("SB") != -1 && ifAsms && ifAsms=="Y") ) ? true : false;
        if(isTlShow){
            ShowWindowIframe({
                width: "960",
                height: "660",
                title: title_,
                param: {evapkid: evapkid, segpkid: segpkid, dataType: dataType, applyType: applyType,ifAsms:ifAsms},
                url: "/views/em/emfileeval/emfileeva_seg_task.shtml"
            });
        }else{
            ShowWindowIframe({
                width: "960",
                height: "330",
                title: title_,
                param: {evapkid: evapkid, segpkid: segpkid, dataType: dataType, applyType: applyType,ifAsms:ifAsms},
                url: "/views/em/emfileeval/emfileeva_seg_task.shtml"
            });
        }
    }

    function editTask(operation, row) {
        var title_ = $.i18n.t('增加分段任务');
        var isTlShow = (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1 || dataType.indexOf("AMOC") != -1 || (dataType.indexOf("SB") != -1 && ifAsms && ifAsms=="Y")) ? true : false;
        var workType = row.WORK_TYPE;
        if (isTlShow) {
            ShowWindowIframe({
                width: "960",
                height: "660",
                title: title_,
                param: {
                    evapkid: evapkid,
                    segpkid: segpkid,
                    taskId: row.PKID,
                    dataType: dataType,
                    operation: operation,
                    applyType: applyType,
                    workType: workType,
                    ifAsms:ifAsms,
                },
                url: "/views/em/emfileeval/emfileeva_seg_task.shtml"
            });
        } else {
            ShowWindowIframe({
                width: "960",
                height: "330",
                title: title_,
                param: {
                    evapkid: evapkid,
                    segpkid: segpkid,
                    taskId: row.PKID,
                    dataType: dataType,
                    operation: operation,
                    applyType: applyType
                },
                url: "/views/em/emfileeval/emfileeva_seg_task.shtml"
            });
        }
    }

    //新增
    function addTaskSf() {
        var dealOpinion = $("#dealOpinion").textbox('getValue');
        if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
            if (dealOpinion == "EA") {
                MsgAlert({content: 'AD/CAD类评估单不允许增加EA执行文件！', type: 'error'});
                return false;
            }
        }
        dealMeasure = "ADD";
        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var taskId = rowDataL.PKID;
        var taskNature = rowDataL.TASK_NATURE;
        var workType = rowDataL.WORK_TYPE;
        if(workType == 'GZ'){
            if(dealOpinion == 'JYD' || dealOpinion == 'MP' || dealOpinion == 'TB' || dealOpinion == 'EA' || dealOpinion == 'OTHERS'){
                MsgAlert({content: "针对改装类的任务不允许选择该类型执行文件！", type: 'error'});
                return;
            }
        }
        if (dealOpinion == 'MP') {
            MsgAlert({content: "不允许颁发MP执行文件！", type: 'error'});
            return;
        }
        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
        if (dealOpinion) {
            if (workType == 'PN') {
                if (!(dealOpinion == 'EO' || dealOpinion == 'EA' || dealOpinion == 'MP')) {
                    MsgAlert({content: "部件要求类的任务不允许颁发" + dealOpinion, type: 'error'});
                    return;
                }
            }
            var title_ = $.i18n.t('增加顺丰执行文件--' + dealOpinion);
            var params = {
                dealOpinion: dealOpinion,
                dealMeasure: dealMeasure,
                taskId: taskId,
                evapkid: evapkid,
                applyType: applyType,
                applyModel: applyModel,
                segpkid: segpkid,
                ata: ata,
                operation: "add",
                workType: workType,
                needMaster: needMaster,
                taskNature: taskNature
            };
            ShowWindowIframe({
                url: "/views/em/emfileeval/emfileeva_seg_add_sf.shtml",
                title: title_,
                param: params,
                width: "820",
                height: "550"
            });
        } else {
            MsgAlert({content: "请先选择处理意见！", type: 'error'});
        }
    }

    function editTaskSf(row, operation) {
        var dealOpinion = row.DEAL_OPINION;
        var taskId = row.TASK_PKID;
        var dealMeasure = row.DEAL_MEASURE;
        var status = row.STATUS;
        var taskNature = "";
        var workType = "";
        InitFuncCodeRequest_({
            data: {pkid: taskId, FunctionCode: 'EM_FILE_TASK_BY_PKID'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        taskNature = jdata.data.TASK_NATURE;
                        workType = jdata.data.WORK_TYPE;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
        var title_ = $.i18n.t('编辑顺丰执行文件--' + dealOpinion);
        var params = {
            dealOpinion: dealOpinion,
            dealMeasure: dealMeasure,
            taskNature: taskNature,
            taskId: taskId,
            evapkid: evapkid,
            applyType: applyType,
            applyModel: applyModel,
            segpkid: segpkid,
            ata: ata,
            workType: workType,
            needMaster: needMaster,
            operation: operation,
            pkid: row.PKID,
            status: status
        };
        ShowWindowIframe({
            url: "/views/em/emfileeval/emfileeva_seg_add_sf.shtml",
            title: title_,
            param: params,
            width: "820",
            height: "550"
        });
    }

    //改版
    function revTaskSf() {
        var row = $("#dg2").datagrid('getSelected');
        var taskId = row.TASK_PKID;
        var dealOpinion = row.DEAL_OPINION;
        var recordId = row.EXE_PKID;
        var status = row.STATUS;
        var exeNo = row.EXE_NO;
        var sfPkid = row.PKID;
        //EM_FILE_EVAL_DEALMEASURE
        dealMeasure = "REV";

        var evaVer = '';
        InitFuncCodeRequest_({
            data: {evaPkid: evapkid, FunctionCode: 'EM_FILE_CHECK_EVAVER'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        evaVer = jdata.data.EVA_VER;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        /* if (evaVer == '00' || (status != '生效' && status != '已完成')) {
             MsgAlert({content: "只有评估单不是第一版且执行文件状态为生效的才可以改版！", type: 'error'});
             return;
         }*/
        if (status != '生效' && status != '已完成' && status != '已发布') {
            MsgAlert({content: "只有评估单执行文件状态为生效或完成的才可以改版！", type: 'error'});
            return;
        }

        if (dealOpinion == "EO" || dealOpinion == "EA") {
            var stopCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {eoPkid: recordId, FunctionCode: 'EM_EOEA_STOP_EO_PKID_COUNT'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        stopCount = jdata.data.COUNT_DATA;
                    }
                }
            });
            if (stopCount != 0) {
                MsgAlert({content: "已终止或者终止中的" + dealOpinion + "不可改版！", type: 'error'});
                return;
            }

            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {eoNo: exeNo, FunctionCode: 'EM_FILE_CHECK_EO'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该" + dealOpinion + "已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        } else if (dealOpinion == "TB") {
            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {tbNo: exeNo, FunctionCode: 'EM_FILE_CHECK_TB'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该" + dealOpinion + "已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        } else if (dealOpinion == "JYD") {
            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {tbNo: exeNo, FunctionCode: 'EM_FILE_CHECK_JYD'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该建议单已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        }


        if (dealOpinion == "EO" || dealOpinion == "EA") {
            InitFuncCodeRequest_({
                data: {
                    eopkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_EO_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg2");
                        MsgAlert({content: '改版EO成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
        //MP暂时不改版，因为没有版次
        /*else if (dealOpinion == "MP") {
            InitFuncCodeRequest_({
                data: {
                    evalNo: recordId,
                    dealOpinion: dealOpinion,
                    taskId: taskId,
                    FunctionCode: 'EM_FILE_TASK_SF_MP_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg2");
                        MsgAlert({content: '改版MP成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }*/ else if (dealOpinion == "TB") {
            InitFuncCodeRequest_({
                data: {
                    tbpkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_TB_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg2");
                        MsgAlert({content: '改版TB成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        } else if (dealOpinion == "JYD") {
            InitFuncCodeRequest_({
                data: {
                    pkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_JYD_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg2");
                        MsgAlert({content: '改版手册修改建议单成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        } else if (dealOpinion == "SYBZX" || dealOpinion == "OTHERS" || dealOpinion == "MP") {
            MsgAlert({content: "此类文件不能改版！", type: 'error'});

        }
    }

    //关联
    function refTaskSf() {
        //EM_FILE_EVAL_DEALMEASURE
        var dealOpinion = $("#dealOpinion").textbox('getValue');
        if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
            if (dealOpinion == "EA") {
                MsgAlert({content: 'AD/CAD类评估单不允许增加EA执行文件！', type: 'error'});
                return false;
            }
        }

        dealMeasure = "REF";
        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var taskId = rowDataL.PKID;
        var taskNature = rowDataL.TASK_NATURE;
        var workType = rowDataL.WORK_TYPE;
        if(dealOpinion == 'MP' || dealOpinion == 'TB' || dealOpinion == 'EA' || dealOpinion == 'EO'){
            alert("提醒：关联操作会影响执行执行文件源文件信息变化，请注意评估是否改版执行文件内容");
        }
        if(workType == 'GZ'){
            if(dealOpinion == 'JYD' || dealOpinion == 'MP' || dealOpinion == 'TB' || dealOpinion == 'EA' || dealOpinion == 'OTHERS'){
                MsgAlert({content: "针对改装类的任务不允许选择该类型执行文件！", type: 'error'});
                return;
            }
        }

        if (dealOpinion) {
            if (workType == 'PN') {
                if (!(dealOpinion == 'EO' || dealOpinion == 'EO' || dealOpinion == 'MP')) {
                    MsgAlert({content: "部件要求类的任务不允许关联" + dealOpinion, type: 'error'});
                    return;
                }
            }
            if (dealOpinion == "EO") {

                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        applyType: applyType,
                        taskNature: taskNature,
                        workType: workType,
                        segpkid: segpkid,
                        evaId: evapkid
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfeo.shtml"
                });
            } else if (dealOpinion == "EA") {

                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        applyType: applyType,
                        taskNature: taskNature,
                        workType: workType,
                        segpkid: segpkid,
                        evaId: evapkid
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfea.shtml"
                });
            } else if (dealOpinion == "MP") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                var fleet = '';
                if(applyType == 'APL'){
                    InitFuncCodeRequest_({
                        data: {taskId: taskId, FunctionCode: 'EM_FILE_REF_MP_FLEET'},
                        async: false,
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                if (jdata.data != null) {
                                    fleet = jdata.data.FLEET;
                                }
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });
                }
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: evapkid,
                        workType: workType,
                        fleet: fleet,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfmp.shtml"
                });
            } else if (dealOpinion == "TB") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: evapkid,
                        segpkid: segpkid,
                        workType: workType,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sftb.shtml"
                });
            } else if (dealOpinion == "JYD") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: evapkid,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfjyd.shtml"
                });
            } else if (dealOpinion == "SYBZX" || dealOpinion == "OTHERS" || dealOpinion == "XDSC") {
                MsgAlert({content: "此类文件不能关联！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选择处理意见！", type: 'error'});
        }
    }

    function editGroup(rowData) {
        var appType = rowData.APPLY_TYPE;
        var dealOpinion = rowData.DEAL_OPINION;
        if (applyType == appType) {
            var title_ = $.i18n.t('顺丰执行文件设置适用性');
            ShowWindowIframe({
                width: "566",
                height: "366",
                title: title_,
                param: {
                    evapkid: evapkid,
                    taskId: rowData.TASK_PKID,
                    sfpkid: rowData.PKID,
                    opflag: "SF",
                    dealOpinion: dealOpinion,
                    applyType: applyType,
                    exePkid: rowData.EXE_PKID
                },
                url: "/views/em/emfileeval/emfileeva_seg_group_sfeo.shtml"
            });
        } else {
            MsgAlert({content: "此执行文件适用类型与评估单不一致不允许设置适用性！", type: 'error'});
        }
    }

    function editGroupOp(opflag, rowData) {
        var title_ = $.i18n.t('顺丰执行文件设置适用性');
        ShowWindowIframe({
            width: "566",
            height: "366",
            title: title_,
            param: {
                evapkid: evapkid,
                taskId: rowData.TASK_PKID,
                sfpkid: rowData.PKID,
                opflag: opflag,
                dealOpinion: rowData.DEAL_OPTION,
                applyType: applyType,
                exePkid: rowData.EXE_PKID
            },
            url: "/views/em/emfileeval/emfileeva_seg_group_sfeo.shtml"
        });
    }

    function addSybzx(dealOpinion, taskId) {
        InitFuncCodeRequest_({
            data: {
                dealOpinion: dealOpinion,
                dealMeasure: dealMeasure,
                taskId: taskId,
                FunctionCode: "EM_FILE_EVAL_SYBZX_SAVE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '操作成功'});
                    reload_("#dg2");
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    //新增上营运人机身
    function addTaskOpApl() {

        if (applyType == "ENG") {
            MsgAlert({content: '评估单适用性类型为发动机，不能增加机身执行文件！', type: 'error'});
            return;
        }

        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }


        var taskId = rowDataL.PKID;
        var taskNature = rowDataL.TASK_NATURE;
        var workType = rowDataL.WORK_TYPE;
        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
        if (workType == 'PN') {
            MsgAlert({content: '部件要求类的任务不能增加机身执行文件！', type: 'error'});
            return;
        }
        ShowWindowIframe({
            url: "/views/em/emfileeval/emfileeva_seg_add_opapl.shtml",
            param: {
                evapkid: evapkid,
                taskId: taskId,
                needMaster: needMaster,
                taskNature: taskNature,
                workType: workType,
                applyType: applyType
            },
            title: $.i18n.t('增加上营运人执行文件--机身'),
            width: "650",
            height: "500"
        });
    }

    //新增上营运人发动机
    function addTaskOpEng() {
        if (applyType == "APL") {
            MsgAlert({content: '评估单适用性类型为机身，不能增加发动机执行文件！', type: 'error'});
            return;
        }
        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var taskId = rowDataL.PKID;
        var taskNature = rowDataL.TASK_NATURE;
        var workType = rowDataL.WORK_TYPE;
        var needMaster = (/\bSB\b/.test(dataType) || /\bMOD\b/.test(dataType)) && workType == "GZ";
        if (workType == 'PN') {
            MsgAlert({content: '部件要求类的任务不能增加机身执行文件！', type: 'error'});
            return;
        }
        var title_ = $.i18n.t('增加上营运人执行文件--发动机');
        ShowWindowIframe({
            url: "/views/em/emfileeval/emfileeva_seg_add_openg.shtml",
            param: {
                evapkid: evapkid,
                taskId: taskId,
                needMaster: needMaster,
                taskNature: taskNature,
                workType: workType,
                applyType: applyType
            },
            title: title_,
            width: "600",
            height: "350"
        });
    }

    function delAppl(rowData, flag, dg) {
        var refPkid = rowData.PKID;
        var dealOpinion = rowData.DEAL_OPINION;
        InitFuncCodeRequest_({
            data: {
                pkid: refPkid,
                flag: flag,
                dealOpinion: dealOpinion,
                exePkid: rowData.EXE_PKID,
                FunctionCode: "EM_FILE_TASK_APP_DEL"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '操作成功'});
                    reload_("#" + dg);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function cancelRef(rowData, dg) {
        var pkid = rowData.PKID;
        var dealOpinion = rowData.DEAL_OPINION;
        InitFuncCodeRequest_({
            data: {
                pkid: pkid,
                FunctionCode: "EM_FILE_TASK_REF_DEL"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '操作成功'});
                    reload_("#" + dg);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function stopEo(rowData, dg) {
        var eoPkid = rowData.EXE_PKID;
        var sfPkid = rowData.PKID;
        var count = 0;
        InitFuncCodeRequest_({
            async: false,
            data: {FunctionCode: 'EM_FILE_STOP_COUNT', eoPkid: eoPkid},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    count = jdata.data.STOP_COUNT;
                }
            }
        });

        if (count != 0) {
            MsgAlert({content: '不可重复终止', type: 'error'});
            return;
        }
        ShowWindowIframe({
            width: 820,
            height: 270,
            title: $.i18n.t('终止申请'),
            param: {eoPkid: eoPkid, eoNo: rowData.EXE_NO, eoVer: rowData.EXE_VER,
                    eoEa: rowData.DEAL_OPINION
                    ,sfPkid:sfPkid},
            url: '/views/em/emstop/em_eo_stop_add.shtml'
        });
    }

    function stopTb(rowData,dg) {
        var tbPkid = rowData.EXE_PKID;
        var sfPkid = rowData.PKID;
        common_add_edit_({
            url: "/views/em/emtb/em_tb_invalid_add.shtml?operation=add&pkid=" + tbPkid+"&sfPkid="+sfPkid,
            identity: dg,
            isEdit: 0,
            width: 600,
            height: 400
        });
    }

    function revJc(rowData, dg) {
        var eoPkid = rowData.EXE_PKID;
        //对已发布的数据进行改版，并且新增一条编写中的数据
        var jcPkid = rowData.JC_PKID;
        var jcNo = rowData.JC_NO;
        var ver = rowData.VER + 1;
        InitFuncCodeRequest_({
            data: {jcNo: jcNo, ver: ver, FunctionCode: "TD_JC_ALL_EOJC_BEFOR_AMEND"},
            successCallBack: function (jdata) {
                if (jdata.data == null || jdata.data.length == 0) {
                    if (confirm("是否确认改版？")) {
                        //打开注销或恢复页面
                        var title_ = $.i18n.t('改版');
                        ShowWindowIframe({
                            width: "680",
                            height: "80",
                            title: title_,
                            param: {pkid: jcPkid},
                            url: "/views/td/jobcard/eojc/tdEojcAmend.shtml"
                        });
                    }
                } else {
                    MsgAlert({content: "该数据已改版过了。", type: 'error'});

                }
            }
        });
    }


    function reload_(dg) {
        $(dg).datagrid("reload");
    }


    function reloadPar(dg) {
        param.OWindow.reload_(dg);
    }

    function checkNum() {
        var str = $(this).val();
        if (isNaN(Number(str))) {
            alert('请输入数字！');
            $(this).val('');

        }
    }

    function downTemplate(){
        if(applyType == 'ENG'){
            var con = "<form id='_f0_rm' method='post' action='/api/v1/plugins/DOWNLOAD_EM_FILE_ENG'></form>";
            $("#_f0_rm").remove();
            $("body").append(con);
            $("#_f0_rm").submit();
        }else{
            MsgAlert({content: '部件和机身暂无模板'});

        }

    }
    //导入数据
    function uploadDetailList() {
        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        if(applyType != 'ENG'){
            MsgAlert({content: '部件和机身暂时不支持'});
            return;
        }
        var title_ = $.i18n.t('上传模板文件');
        ShowWindowIframe({
            width: "520",
            height: "270",
            title: title_,
            param: {taskId: rowDataL.PKID},
            url: "/views/em/emfileeval/upload/emfileeva_upload_template.shtml"
        });
    }

    //复制上运营人执行文件
    function copySyyrFile() {
        var rowDataL = $("#dg1").datagrid('getSelected');
        if (!rowDataL) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var worktype = rowDataL.WORK_TYPE;
        if(worktype == 'GZ'){
            if(confirm("复制完改装类执行记录，需注意维护’主改装‘属性！")){
                var title_ = '上运营人执行文件复制';
                ShowWindowIframe({
                    width: 600,
                    height: 500,
                    title: title_,
                    param: {tTaskId: rowDataL.PKID,applyType: applyType},
                    url: "/views/em/emfileeval/emfileeva_add_seg_copy_file_list.shtml"
                });
            }
        }
    }

    //复制分段
    function copySeg() {
        var stopCount = 0;
        InitFuncCodeRequest_({
            async: false,
            data: {segId: segpkid, FunctionCode: 'EM_FILE_TASK_COU'},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    stopCount = jdata.data.COU;
                }
            }
        });
        if (stopCount != 0) {
            MsgAlert({content: "请先删除现有任务及执行文件！", type: 'error'});
            return;
        }
        if (dataType.indexOf("SB") != -1 || dataType.indexOf("AD") != -1) {
            var title_ = '分段复制';
            ShowWindowIframe({
                width: 800,
                height: 500,
                title: title_,
                param: {segpkid: segpkid, dataType: dataType},
                url: "/views/em/emfileeval/emfileeva_add_seg_copy_list.shtml"
            });
        } else {
            MsgAlert({content: '非AD和SB类的评估单不允许使用此功能！'});

        }
    }

    function delEng() {
        var rowData = $('#dg4').datagrid('getChecked');
        if (!rowData || rowData.length == 0) {
            MsgAlert({content: '请至少选择一条数据', type: 'error'});
            return;
        }
        ajaxLoading();
        var pkids = [];
        for (var i = 0; i < rowData.length; i++) {
            pkids.push(rowData[i].PKID);
        }
        InitFuncCodeRequest_({
            data: {
                FunctionCode: "EM_FILE_TASK_E_DEL",
                pkids: pkids.toString()
            },
            successCallBack: function (jdata) {
                ajaxLoadEnd();
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    reload_("#dg4");
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_err:ERRMSG.COMMON.SUCCESS_CODE')});
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    //选择项初始化
    function selectNub() {
        $("#professionalEva").combobox({
            valueField: 'value',
            textField: 'label',
            panelHeight: '50px',
            data:yesAndNoSelect,
            onSelect: function(data){
                if(data.value == "N"){
                    if(confirm("结构专业评估选择否将清空结构信息，是否确认？")){
                        removeData();
                        judgeSave("N");
                    }else {
                        judgeSave("Y");
                    }
                }else {
                    judgeSave("Y");
                }
            }
        });
        $("#byAdSsi").combobox({
            valueField: 'value',
            textField: 'label',
            panelHeight: '50px',
            data:byAdSsiSelect,
            onSelect: function(data){

            }
        });
        $("#byAir").combobox({
            valueField: 'value',
            textField: 'label',
            panelHeight: '50px',
            data:byAirSelect,
            onSelect: function(data){

    }
        });
        $("#byRvsm").combobox({
            valueField: 'value',
            textField: 'label',
            panelHeight: '50px',
            data:byRvsmSelect,
            onSelect: function(data){

            }
        });
    };

    //显示和隐藏
    function showAndHide(data) {
        if(data=="Y"){
            $("#professionalEva").textbox('setValue', "Y");
            $("#professionalEva").textbox('setText', "是");
            // 显示
            $("#asmsInfo").show();
            initJudgeList();
        }else{
            $("#professionalEva").textbox('setValue', "N");
            $("#professionalEva").textbox('setText', "否");
            //    隐藏
            $("#asmsInfo").hide();
        }
    };

    //添加表格
    function initWorthinessList(data) {
        $("#airWorthinessJudgeDg").datagrid({
            columns: [[
                {field:'suitable', title: '适用对象', width:"300"},
                {field:'isAddRefit', title: '加入改装图', width: "100",formatter: YNchangeformatter},
                {field:'isDte', title: '损伤容限', width: "100",formatter: YNchangeformatter},
                {field:'evalNo', title: '损伤容限编号', width:"200"},
                {field:'id', title: '附件', width: "100", formatter: selectBtn}
            ]],
            rownumbers:true,
            singleSelect:true,
            // fitColumns:true,
            onLoadSuccess:function(data){
            },
            onRowContextMenu: onRowContextZoneRightMenu
            // onRowContextMenu: onRowContextZoneMenu

        });
        $("#airWorthinessJudgeDg").datagrid("loadData",{ rows:data });
    };

    //表格Y N转换成是和否
    function YNchangeformatter(value, rowData, rowIndex){
        if(value === "Y"){
            return "是"
        }else if(value === "N"){
            return "否"
        }else{
            return value
        }
    }

    //添加右击菜单内容
    function onRowContextZoneRightMenu(e, rowIndex, rowData) {
        e.preventDefault();
        $(this).datagrid('selectRow', rowIndex); //选中当前行
        if(operation == 'view'){
            $("#airWorthinessDell").hide();
            $("#airWorthinessEdit").hide();
            $("#airWorthinessDellView").show();
            $("#airWorthinessEditView").show();
            // $("#structuralEeZoneListDelView").show();
        }else{
            $("#airWorthinessDell").show();
            $("#airWorthinessEdit").show();
            $("#airWorthinessDellView").hide();
            $("#airWorthinessEditView").hide();
            // $("#structuralEeZoneListDelView").hide();
        }
        $('#airWorthinessEeMenu').menu('show', {
            left: e.pageX,
            top: e.pageY
        });
    }

    //持续性适航删除动作
    function deleteWorthinessJudgeDg(){
        if (!confirm("是否确认删除？")) {
            return;
        }
        var row = $("#airWorthinessJudgeDg").datagrid('getSelected');
        $.ajax({
            url: '/mo/emFileEvaluateAirworthiness/deleteEmFileEvaluateAirworthiness/'+row.id,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.msg == "success") {
                    MsgAlert({content: '删除成功'});
                    initJudgeList();
                    $("#airWorthinessJudgeDg").datagrid("reload");
                } else {
                    MsgAlert({content: data.msg , type: 'error'});
                }
            }
        });

    };

    //持续性适航编辑动作
    function editWorthinessJudgeDg(){
        var row = $("#airWorthinessJudgeDg").datagrid('getSelected');
        var title_ = "持续适航评估编辑";
        ShowWindowIframe({
            width: "620",
            height: "250",
            title: title_,
            param: {
                //当前条目所有内容
                row :row,
                //条目ID
                id:row.id,
                //工程评估分段ID
                segpkid:strucSegpkid ,
                //父页面获取到的evaNo编号，
                evaNo:param.evaNo,
                // 工程评估ID
                evapkid:param.evapkid
            },
            url: "/views/em/emfileeval/emfileeva_add_air_worthiness.shtml"
        });
    };

    //上传附件按钮
    function selectBtn(value, rowData, rowIndex){
            return "<button style='width: 70px;padding-top: 2px;padding-bottom: 3px; background-color:#1d5289;color: #fff ;border-radius:3px ;font-size: 12px;border-color: #3251B1;' type='button' " +
                "onclick='neceAttach(" + JSON.stringify(value) + ")'>附件查看</button>";
    };

    //附件查看
    function neceAttach(fileId) {
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: fileId,
                CATEGORY: "emFlieevaWorthiness",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            successCallBack: function (jdata) {
                //为0时提示没有上传附件，无法查看
                if (jdata.data.length == 0) {
                    MsgAlert({content: "请先上传附件", type: 'error'});
                } else {
                    //打开一个列表页面
                    ShowWindowIframe({
                        width: "515",
                        height: "285",
                        param: {pkid: fileId, category: "emFlieevaWorthiness",operation:operation},
                        url: "/views/data_manager/dm/upload/editAttach.shtml"
                    });
                }
            }
        });
    };

    //持续适航评估的增加按钮
    function addWorthinessDataList() {
        var title_ = "持续适航评估编辑";
        ShowWindowIframe({
            width: "620",
            height: "250",
            title: title_,
            param: {
                row :"",
                id: "",
                segpkid:strucSegpkid,
                evaNo:param.evaNo,
                evapkid:param.evapkid
            },
            url: "/views/em/emfileeval/emfileeva_add_air_worthiness.shtml"
        });
    };

    //初始化适航评估接口集合
    function intiWorthiness() {
        initWorthiness();
        initJudgeList();
    };

    //初始化持续适航信息接口
    function initWorthiness() {
        $.ajax({
            type: "get",
            url: "/mo/emFileEvaluateAirworthiness/queryEmFileContinueAirworthiness/"+param.segpkid,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                if(obj.hasOwnProperty("data")){
                    showOrSelect(obj.data);
                }
                //适用模拟数据

            },    // showOrSelect(mokeEffct);
            error: function (resultObj) {
                alert(resultObj.msg);
            }
        });
    };

    //初始化适用性列表接口
    function initJudgeList() {
        $.ajax({
            type: "get",
            url: "/mo/emFileEvaluateAirworthiness/queryEmFileEvaluateAirworthiness/"+strucSegpkid,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                if(obj.hasOwnProperty('data')){
                    initWorthinessList(obj.data);
                };
                //使用模拟数据
                // initWorthinessList(modeDataForAirWorthinessJudge);
            },
            error: function (resultObj) {
                alert(resultObj.msg);
            }
        });
    };

    //设置初始值
    function showOrSelect(data) {
        if(data.hasOwnProperty("adSsiEffect")){
            $("#byAdSsi").combobox("select", data.adSsiEffect);
            $("#byAir").combobox("select", data.aerodynamicEffect);
            $("#byRvsm").combobox("select", data.pvsmZone);
        }
    };

    //    持续适航保存按钮
    function airWorthinessSave() {
        var data = {
            adSsiEffect: $("#byAdSsi").combobox("getValue"),
            aerodynamicEffect: $("#byAir").combobox("getValue"),
            pvsmZone: $("#byRvsm").combobox("getValue")
        };
        if(data.adSsiEffect == ""){
            alert("请选择‘受AD/SSI影响’选项");
            return false
        }else if(data.aerodynamicEffect == ""){
            alert("请选择‘气动性影响’选项");
            return false
        }else if(data.pvsmZone == ""){
            alert("请选择‘RVSM区域’选项");
            return false
        };
        var worthinessDatas = {
            "adSsiEffect": data.adSsiEffect,
            "aerodynamicEffect": data.aerodynamicEffect,
            "evaId": param.evapkid,
            "id": "",
            "pvsmZone": data.pvsmZone,
            "segId": strucSegpkid
        };
        $.ajax({
            url: '/mo/emFileEvaluateAirworthiness/editEmFileContinueAirworthiness',
            type: 'post',
            data: JSON.stringify(worthinessDatas),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if(data.data.hasOwnProperty("adSsiEffect")){
                    showOrSelect(data.data);
                };
                alert("保存成功！");
            },
            error: function (data) {
                alert(data.msg);
            }
        });
    };

    //结构专业选择否，清空数据操作
    function removeData() {
        $.ajax({
            url: '/mo/emFileEvaluateAirworthiness/deleteAllContinueAirworthiness/'+param.segpkid,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                if(obj.hasOwnProperty('data')){
                    $("#byAdSsi").combobox("setValue", "");
                    $("#byAir").combobox("setValue", "");
                    $("#byRvsm").combobox("setValue", "");
                }else{
                    alert("删除失败！");
                }
            },
            error: function (data) {
                alert(data.msg);
            }
        });
    };

    //结构专业评估选择保存
    function judgeSave(data) {
        $.ajax({
            url: '/editSegProfessionalEva/updateSegProfessionalEvaValue/'+strucSegpkid+'/'+data,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                if(param.dataType.indexOf("MOD") != -1 || param.dataType.indexOf("VSTC") != -1) {
                    showAndHide(obj.data.professionalEval);
                };
            },
            error: function (data) {
                alert(data.msg);
            }
        });
    };

   //模拟数据
    var modeDataForAirWorthinessJudge = [{
        "id": "1213456",
        "evaId": "101132679",
        "segId": "101050269",
        "isDte": "Y",
        "isAddRefit": "Y",
        "dteContent": "损伤容限评估内容",
        "suitable": "适用对象1",
        "refitResult": "改装图评估结果",
        "uuid": "c3f4b036bad24e9e84b0573392c4907a",
        "dteResult": "损伤容限结果",
        "refitContent": "改装图评估内容"
    }, {
        "id": "22",
        "evaId": "101132679",
        "segId": "101050269",
        "isDte": "Y",
        "isAddRefit": "N",
        "dteContent": "损伤容限评估内容",
        "suitable": "适用对象2",
        "refitResult": "改装图评估结果",
        "uuid": "c598504604b045fa83dce6fbad640379",
        "dteResult": "损伤容限结果",
        "refitContent": "改装图评估内容"
    }, {
        "id": "23",
        "evaId": "101132679",
        "segId": "101050269",
        "isDte": "Y",
        "isAddRefit": "N",
        "dteContent": "损伤容限评估内容",
        "suitable": "适用对象3",
        "refitResult": "改装图评估结果",
        "uuid": "de4b9fc9ab8f465589006c65d518d120",
        "dteResult": "损伤容限结果",
        "refitContent": "改装图评估内容"
    }];
//    受影响模拟数据
    var mokeEffct= {
        "adSsiEffect": "N",
        "aerodynamicEffect": "N",
        "evaId": "101132679",
        "id": "",
        "pvsmZone": "N",
        "segId": "101050269"
    };

//    结合数据
    var mokeEffctAndModeDataForAirWorthinessJudge ={
        mokeEffct:mokeEffct,
        modeDataForAirWorthinessJudge:modeDataForAirWorthinessJudge
    };

</script>
</html>