<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<style>
    .ctbox {
        margin: 0 auto;
        width: 820px;
    }
    span.structureSpan{
        margin-right: 10px;
        margin-bottom: 10px;
    }
</style>
<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
</head>
<body>

<div class="ctbox">
    <form id="mform1">
        <input name="pkid" id="pkid" type="hidden">
        <input type="hidden" class="easyui-textbox" id="evaAccid" name="evaAccid"/>
        <input type="hidden" class="easyui-textbox" id="structureBasePkId" name="structureBasePkId"/>

        <table id="dealMemo" class="table table-bordered table-info">
            <tr>
                <th class="th" align="right" nowrap style="width: 80px">驳回原因：</th>
                <td class="td5" colspan="5">
                    <input style="width: 92%; height: 30px" class="easyui-textbox" id="quaMemo" name="quaMemo"
                           data-options="editable:true"/>
                </td>
            </tr>
        </table>
        <table class="table table-bordered table-info">
            <caption style="padding-bottom: 7px;font-weight:bold;"><p style="font-size: 15px">工程文件评估</p></caption>
        </table>
        <table class="table table-bordered table-info" style="width:860px">
            <tr>
                <th class="th" align="right" style="width: 80px">文件类型：</th>
                <td class="td5">
                    <input class="easyui-combobox" id="dataType" name="dataType" style="width: 180px"
                           data-options="editable:false,required:true,onlyview:true"
                    />
                </td>
                <th class="th" align="right" style="width: 80px">评估单号：</th>
                <td class="td5">
                    <input class="easyui-textbox" id="evaNo" name="evaNo" data-options="onlyview:true,editable:false"
                           style="width: 180px"/>
                </td>
                <th id="urgen1" class="th" align="right" style="width: 80px">紧急程度：</th>
                <td id="urgen2" class="td5">
                    <input class="easyui-combobox" id="urgentLevel" name="urgentLevel" style="width: 180px"
                           data-options="editable:true,required:true"/>
                </td>
            </tr>
            <tr>
                <th class="th" align="right" style="width: 80px">适用类型：</th>
                <td class="td5">
                    <input class="easyui-combobox" id="applyType" name="applyType" style="width: 180px"
                           data-options="editable:true,required:true"
                    />
                </td>
                <th class="th" align="right" style="width: 80px">适用型号：</th>
                <td class="td5">
                    <input class="easyui-textbox" id="applyModel" name="applyModel" style="width: 180px"
                           data-options="editable:true,required:true"/>
                </td>
                <th class="th" align="right" style="width: 80px">评估章节：</th>
                <td class="td5">
                    <input class="easyui-textbox" id="evaAta" name="evaAta" data-options="editable:true,required:true"
                           style="width: 180px"/>
                </td>
            </tr>
            <tr>
                <th class="th" align="right" style="width: 80px">评估期限：</th>
                <td class="td5">
                    <input class="easyui-datebox" id="evaDeadline" name="evaDeadline" style="width: 180px"
                           data-options="editable:false,onlyview:true"
                    />
                </td>
                <th class="th" align="right" style="width: 80px">评估人：</th>
                <td class="td5">
                    <input class="easyui-textbox" id="evaManName" name="evaManName" style="width: 180px"
                           data-options="editable:true,required:true"/>
                </td>
                <th class="th" align="right" style="width: 80px">评估日期：</th>
                <td class="td5">
                    <input class="easyui-datebox" id="evaDate" name="evaDate" style="width: 180px"
                           data-options="onlyview:true,editable:false"/>
                </td>
            </tr>
            <tr>
                <th class="th" align="right" style="width: 80px">专业：</th>
                <td class="td5">
                    <input class="easyui-textbox" id="specialize" name="specialize" style="width: 180px"
                           data-options="onlyview:true,editable:false"/>
                </td>
            </tr>
            <tr>
                <th class="th" style="width: 80px">标题：</th>
                <td colspan="5">
                                <textarea class="easyui-textbox" id="title" name="title" multiline="true"
                                          style="height:50px;width: 670px;border: 1px solid #ddd;"
                                ></textarea>
                </td>
            </tr>
            <tr id="view" style="height:40px">
                <td colspan="6" align="right">
                    <a class="searchBtn" data-options="iconCls:'icon-search'" data-i18n="" id="addSoruce" onclick="addSourceFile()" >新增源文件</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="viewHistory"
                       onclick="viewHistory()">查看评估历史</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="save" onclick="msave()">保存</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="pdf" onclick="previewPdf()">预览PDF</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="commitBtn" onclick="commit()">提交</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="tran" onclick="tranEval()">转发</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="bohui" onclick="turnEval()">驳回</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="delay" onclick="delay()">延期申请</a>
                    <a href="javascript:void(0)" class="btn btn-primary" id="close" style="margin-right: 75px"
                       onclick="closeAdd()">关闭</a>
                </td>
            </tr>
        </table>
    </form>
    <div id="tt" class="easyui-tabs" style="width:860px;height:80%;">
        <div id="showSour" title="源文件">
            <div id='nstc' style="width: 99%;height: 99%">
                <table id='dg1'>
                </table>
            </div>
            <fieldset id="stc1" class="fieldset_eui" style="float:left;width:98%;height:99%;">
                <legend data-i18n="">证书文件：</legend>
                <table id='dg15'>
                </table>
            </fieldset>
            <fieldset id="stc2" class="fieldset_eui" style="float:left;width:98%;height:99%;">
                <legend data-i18n="">技术文件：</legend>
                <table id='dg16'>
                </table>
            </fieldset>
        </div>
        <div id="showRelate" title="关联文件" style="">
            <table class="table table-bordered table-info">
                <tr>
                    <th style="width:120px">关联文件：</th>
                    <td>
                        <a href="javascript:void(0)" class="btn btn-primary" id="addRef" onclick="addRefFile()"
                        >添加</a>
                    </td>
                </tr>
            </table>
            <div style="width: 99%;height: 90%">
                <table id='dg2'>
                </table>
            </div>

        </div>
        <div id="showSummary" title="评估概述" style="">
            <form id="mform2">
                <input name="pkid" id="mpkid" type="hidden">
                <table class="table table-bordered table-info">
                    <tr>
                        <td colspan="6" style="height: 30px">
                            <a style="margin-left:80px;" href="javascript:void(0)" class="btn btn-primary"
                               id="fetchInfo" onclick="fetchInfo()"
                            >提取源文件信息</a>
                            <a style="margin-left:80px;" href="javascript:void(0)" class="btn btn-primary"
                               id="viewMemo" onclick="viewEvamemo()"
                            >各分段评估汇总</a>
                            <a href="javascript:void(0)" class="btn btn-primary" id="saveEa"
                               onclick="saveEva()"
                            >保存</a>
                            <!--Add by Doreen,SF-->
                            <a href="javascript:void(0)"  class="btn btn-primary" id="uploadEvaId"
                               onclick="uploadEva()"
                            >上传附件</a>
                            <a href="javascript:void(0)" class="btn btn-primary" id="viewEvaAttachmentId"
                               onclick="viewEvaAttachment()"
                            >查看附件</a>
                        </td>
                    </tr>
                    <tr id="othereva" style="height: 30px">
                        <th align="right">新飞机引进是否影响本评估单：</th>
                        <td class="td5" colspan="5">
                            <input class="easyui-combobox" id="ifInfluenceEva" name="ifInfluenceEva"
                                   style="width:120px;"
                                   data-options="required:true">
                        </td>
                    </tr>
                    <tr>
                        <th class="td" style="width: 80px" nowrap align="right">改版原因：</th>
                        <td class="td5" colspan="5" style="width: 90%;">
                                    <textarea class="easyui-textbox" id="revReason" name="revReason"
                                              data-options="multiline:true"
                                              style="height:50px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <th style="width: 80px" align="right">适用性描述：</th>
                        <td class="td5" colspan="5">
                                    <textarea class="easyui-textbox" id="applyDesc" name="applyDesc"
                                              data-options="multiline:true"
                                              style="height:50px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr id="result1">
                        <th align="right">评估结论：</th>
                        <td class="td5" colspan="5" style="width:120px">
                            <input class="easyui-combobox" id="evaResult" style="width:120px;"
                                   data-options="required:true"
                                   name="evaResult"/>
                        </td>
                    </tr>
                    <tr>
                        <th style="width: 80px" id="notapp" align="right">不适用原因：</th>
                        <td id="notapp1" class="td5" colspan="5">
                                    <textarea class="easyui-textbox" id="notAppReason" name="notAppReason"
                                              data-options="multiline:true"
                                              style="height:110px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr id="result2">
                        <th id="dis" align="right">失效源文件：</th>
                        <td id="dis1" style="width: 120px">
                            <input class="easyui-combobox" id="disabledSourceFile"
                                   name="disabledSourceFile"
                                   style="width:120px;"/>
                        </td>
                    </tr>
                    <tr id="dis2">
                        <th class="th" align="right">失效原因：</th>
                        <td class="td5" colspan="3">
                                    <textarea class="easyui-textbox" id="disabledReason" name="disabledReason"
                                              data-options="multiline:true"
                                              style="height:110px;width:  97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr id="result3">
                        <th id="sb1" align="right">是否提交SBI：</th>
                        <td id="sb2" class="td5" style="width:120px">
                            <input class="easyui-combobox" id="ifSubmitSbi" style="width:120px;"
                                   name="ifSubmitSbi"/>
                        </td>
                        <th id="notapp2" class="th" align="right" align="right">是否通知飞行/运行手册修订：</th>
                        <td id="notapp3" class="td5" colspan="3">
                            <input class="easyui-textbox" style="width:120px;" id="ifNoticeFlight" name="ifNoticeFlight"
                                   data-options="editable:true"/>
                        </td>
                    </tr>
                    <tr id="result4">
                        <th id="dis4" align="right">需要反馈厂家：</th>
                        <td id="dis5" style="width: 120px">
                            <input class="easyui-combobox" id="ifFeedbackFactory"
                                   name="ifFeedbackFactory"
                                   style="width:120px;"/>
                        </td>
                        <th id="dis6" class="th" align="right">反馈地址（Email）：</th>
                        <td id="dis7" class="td5" colspan="3">
                            <input class="easyui-textbox" style="width:543px" id="feedbackEmail" name="feedbackEmail"
                                   data-options="editable:true"/>
                        </td>
                    </tr>
                    <tr>
                        <th align="right">备注：</th>
                        <td class="td5" colspan="5">
                                    <textarea class="easyui-textbox" id="memo" name="memo"
                                              data-options="multiline:true"
                                              style="height:50px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                    <tr id="ewis">
                        <th class="th" align="right">有无EWIS：</th>
                        <td>
                            <input class="easyui-combobox" id="ifEwis"
                                   name="ifEwis"
                                   style="width:120px;"/>
                        </td>
                        <th class="th" style="width:140px;" align="right">不涉及原因或EWIS编号：</th>
                        <td colspan="3">
                            <input class="easyui-textbox" id="reasonEwis"
                                   name="reasonEwis"
                                   style="width:96%;"/>
                        </td>
                    </tr>
                    <tr>
                        <th id="againEva" class="th" align="right">设定重评：</th>
                        <td class="td5">
                            <input class="easyui-combobox" id="ifAgainEva" data-options="required:true"
                                   name="ifAgainEva"
                                   style="width:120px;"/>
                        </td>
                        <th id="again1" class="th" align="right">重评时间：</th>
                        <td id="again2" class="td5">
                            <input class="easyui-datebox" style="width:163px;" id="againEvaDate" name="againEvaDate"
                                   data-options="editable:false"/>
                        </td>
                        <th id="again3" class="th" align="right">重评间隔：</th>
                        <td id="again4" class="td5">
                            <input class="easyui-textbox" id="againEvaInterval"
                                   name="againEvaInterval" data-options="editable:true,events:{blur:checkNum}"/>天
                        </td>
                    </tr>
                    <tr id="again5">
                        <th class="th">设定重评原因：</th>
                        <td class="td5" colspan="5">
                                    <textarea class="easyui-textbox" id="againEvaReason" name="againEvaReason"
                                              data-options="multiline:true"
                                              style="height:50px;width: 746px;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
        <div title="适用性">
            <div>
                <table class="table table-bordered table-info">
                    <tr id="analySb">
                        <th class="th" align="right" style="width: 80px">是否解析源文件适用性：</th>
                        <td class="td5">
                            <input style="width: 50px" class="easyui-combobox" id="ifAnalysis" name="ifAnalysis"
                            />
                        </td>
                        <td align="left" id="analy1" class="td5">
                            <a id="chooseSb" href="javascript:void(0)" class="btn btn-primary"
                               onclick="chooseSbApp()"
                            >提取源文件适用性</a>
                        </td>
                    </tr>
                    <tr>
                        <td style="height: 30px" align="center">
                            <a id="analy5" href="javascript:void(0)" class="btn btn-primary"
                               onclick="clearChoose()">全显示</a>
                        </td>
                        <th class="th" align="right">适用性分组：</th>
                        <td style="height: 30px">
                            <a id="analy3" href="javascript:void(0)" class="btn btn-primary"
                               onclick="copyAppl()" >复制评估单适用性</a>
                            <a id="analy4" href="javascript:void(0)" class="btn btn-primary"
                               onclick="addGroup()" >增加分组</a>
                        </td>
                        <td id="con" style="width: 450px">
                            <p id="app1" style="font-weight: bold">适用发动机：</p>
                            <p id="app2" style="font-weight: bold">适用飞机：</p>
                            <p id="app3" style="font-weight: bold">适用部件：</p>

                            <input class="easyui-combobox" id="config" style="width: 80px" data-options="editable:false"
                                   name="config"/>
                            <input class="btn btn-primary" id="assignCon" style="width: 70px" type="button"
                                   onclick="assignConfig()" value="指定config"/>
                        </td>
                    </tr>
                </table>
            </div>

            <div style="float:left;width:400px;height:248px;">
                <table id='dg4'>
                </table>
            </div>

            <div style="float:left;width:400px;height:248px;">
                <div id="mxapl">
                    <table id='dg5'>
                    </table>
                </div>
                <div id="bsyac">
                    <p style="font-weight: bold">不适用飞机列表：</p>
                    <table id='dg17'>
                    </table>
                </div>
            </div>
            <div id ='expa' style="float:left;width:400px;height:248px;">
                以下部件引进时，触发当前评估单重评：
                <a id="analy7" href="javascript:void(0)" class="btn btn-primary"
                   onclick="setAgaEva()">设置条件</a>
                <table id='dg13'>
                </table>
            </div>
        </div>
        <div id="showSbMod" title="分段评估">
            <div id="segnor" style="margin: 10px">
                <a href="javascript:void(0)" class="btn btn-primary" id="addSeg"
                   onclick="addSeg()">增加分段</a>
            </div>
            <fieldset id="segnor1" class="fieldset_eui" style="float:left;width:98%;height:90%;">
                <table id='dg6'>
                </table>
            </fieldset>
            <div id="segother">
                <form id="mform6">
                    <!--<input name="pkid" id="spkid" type="hidden">-->
                    <input name="pkid" id="spkid" type="hidden">
                    <input name="segpkid" id="segpkid" type="hidden">
                    <input name="taskpkid" id="taskpkid" type="hidden">
                    <table class="table table-bordered table-info">
                        <tr>
                            <!--<th class="th" align="right" style="width: 90px">新飞机引进是否影响本评估单：</th>-->
                            <td colspan="2" class="td5">
                                <input id="saveSegBtn" class="btn btn-primary" type="button" onclick="saveSeg()"
                                       value="保存分段"
                                       style="width: 70px;margin-left:780px;"/>
                            </td>
                        </tr>
                        <tr>
                            <th id="slDesc" align="right">分段描述：</th>
                            <td class="td5">
                                    <textarea class="easyui-textbox" id="segDesc" name="segDesc"
                                              data-options="multiline:true"
                                              style="height:150px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <th align="right">评估意见：</th>
                            <td class="td5">
                                    <textarea class="easyui-textbox" id="evaOpinion" name="evaOpinion"
                                              data-options="multiline:true,required:true"
                                              style="height:150px;width: 97%;border: 1px solid #ddd;border-radius: 5px;"></textarea>
                            </td>
                        </tr>
                    </table>
                    <fieldset class="fieldset_eui" style="float:left;width:96%;height:430px;">
                        <table class="table table-bordered table-info">
                            <tr>
                                <th style="width:120px;" class="th">顺丰执行文件：</th>
                                <th class="th" align="right">处理意见：</th>
                                <td>
                                    <input class="easyui-combobox" id="dealOpinion"
                                           name="dealOpinion"
                                           style="width:120px;"/>
                                </td>
                                <td class="tdr">
                                    <input id="addTaskSfBtn" class="btn btn-primary" type="button" onclick="addTaskSf()"
                                           value="新增执行文件"
                                           style="width: 90px;margin:5px;"/>
                                    <input id="refTaskSfBtn" class="btn btn-primary" type="button" onclick="refTaskSf()"
                                           value="关联执行文件"
                                           style="width: 90px;margin:5px;"/>
                                </td>
                            </tr>
                        </table>
                        <table id='dg7'>
                        </table>
                    </fieldset>
                </form>
            </div>
        </div>
        <div title="索赔">
            <form id="mform4">
                <table class="table table-bordered table-info">
                    <tr>
                        <th class="th" align="right" style="width: 90px">是否涉及索赔：</th>
                        <td class="td5">
                            <input class="easyui-combobox" id="ifClaim" name="ifClaim"
                                   data-options="editable:false,required:true" />
                        </td>
                        <td id="claim1" class="tdr" colspan="2">
                            <input id="sClaim" class="btn btn-primary" type="button" onclick="saveClaim()" value="保存"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                    <tr id="claim2">
                        <th id="sp1" style="width:120px">索赔权截止日期：</th>
                        <td id="sp2">
                            <input class="easyui-datebox" data-options="editable:false" id="roaDeadline"
                                   name="roaDeadline"/>
                            <a href="javascript:void(0)" class="btn btn-primary" id="cal" onclick="calculateClaim()" >匹配</a>
                        </td>
                        <th style="width:120px">索赔期限：</th>
                        <td>
                            <input class="easyui-datebox" data-options="editable:false" id="claimDeadline"
                                   name="claimDeadline"/>
                        </td>
                    </tr>
                </table>
                <fieldset id="claim3" class="fieldset_eui" style="float:left;width:98%;height: 230px;">
                    <p>适用对象：</p>
                    <input class="btn btn-primary" type="button" id="addClaim" onclick="addClaimObj()" value="增加"
                           style="width: 50px;margin:5px;"/>
                    <table id='dg8'>
                    </table>
                </fieldset>
                <fieldset id="claim4" class="fieldset_eui" style="float:left;width:98%;height: 230px;">
                    <p>航材包：</p>
                    <input class="btn btn-primary" type="button" id="addClaimMa" onclick="addClaimMateria()"
                           value="增加"
                           style="width: 50px;margin:5px;"/>
                    <table id='dg9'>
                    </table>
                </fieldset>
                <fieldset id="claim5" class="fieldset_eui" style="float:left;width:98%;height: 230px;">
                    <p>人工时：</p>
                    <input class="btn btn-primary" type="button" id="addClaimh" onclick="addClaimManh()" value="增加"
                           style="width: 50px;margin:5px;"/>
                    <table id='dg10'>
                    </table>
                </fieldset>
                <fieldset id="claim6" class="fieldset_eui" style="float:left;width:98%;height: 65px;">
                    <p>索赔说明：</p>
                    <textarea class="easyui-textbox" id="claimDesc" name="claimDesc"
                              multiline="true"
                              style="height:150px;width: 100%;border: 1px solid #ddd;border-radius: 5px;"
                    ></textarea>
                </fieldset>
            </form>
        </div>
        <div id="showJingji" title="经济性评估">
            <form id="mform3">
                <input name="pkid" id="epkid" type="hidden">
                <table class="table table-bordered table-info">
                    <tr>
                        <th style="width: 120px;" class="th" align="right">是否需要经济性评估：</th>
                        <td class="td5">
                            <input class="easyui-combobox" id="ifEcon" name="ifEcon"
                                   data-options="editable:false,required:true"
                            />
                        </td>
                        <th id="noneed" class="th" align="right">不需要原因：</th>
                        <td id="noneed1" class="td5">
                            <input class="easyui-textbox" id="needlessEcon" name="needlessEcon"
                                   data-options="editable:true" />
                        </td>
                        <td id="uploadecon">
                            <input class="btn btn-primary" type="button" id="uploadNoE" onclick="uploadNoEcon()"
                                   value="上传附件"
                                   style="width: 70px;margin:5px;"/>
                            <input class="btn btn-primary" type="button" id="downEcon" onclick="econAttach()"
                                   value="附件查看"
                                   style="width: 70px;margin:5px;"/>
                            <input class="btn btn-primary" type="button" id="saveEc" onclick="saveEcon()" value="保存"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                    <tr id="pg">
                        <th class="th" align="right">复制经济性评估：</th>
                        <td id="ifAd">
                            <input class="easyui-combobox" id="ifAdAccordant" name="ifAdAccordant"/>
                        </td>
                        <th id="evan" class="th" align="right">评估单号：</th>
                        <td>
                            <input class="easyui-textbox" id="adevano" name="adevano"
                                   data-options="editable:true"/>
                            <input class="easyui-textbox" id="accordantEvaPkid" name="accordantEvaPkid"
                                   data-options="editable:true"/>
                            <input class="btn btn-primary" type="button" id="chooseA" onclick="chooseAd()" value="选择"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                        <td colspan="2">
                        </td>
                    </tr>
                    <tr id="kekao">
                        <th class="th" align="right">是否通知可靠性：</th>
                        <td>
                            <input class="easyui-combobox" id="ifNoticeReliability" name="ifNoticeReliability"/>
                        </td>
                        <th class="th" style="width: 90px" align="right">单方案/多方案：</th>
                        <td>
                            <input class="easyui-combobox" id="smPro" name="smPro"
                                   data-options="editable:true"/>
                        </td>
                        <td colspan="2">
                            <input class="btn btn-primary" type="button" id="saveE" onclick="saveEcon()" value="保存"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                    <tr id="kekaomemo">
                        <td colspan="4">
                            <p style="font-size: 13px;color: red;">单机停场15天/单机费用超过10万美金需通知可靠委</p>
                        </td>
                    </tr>
                </table>

                <fieldset id="applist1" class="fieldset_eui" style="float:left;width:98%;height: 300px;">
                    <!--<p>适用性列表：</p>-->
                    <input class="btn btn-primary" type="button" id="addEc" onclick="addEcon()" value="增加"
                           style="width: 50px;margin:5px;"/>
                    <table id='dg11'>
                    </table>
                </fieldset>
            </form>
        </div>
        <div id="showBiyao" title="必要性评估">
            <form id="mform5">
                <input name="pkid" id="npkid" type="hidden">
                <table class="table table-bordered table-info">
                    <tr>
                        <th style="width: 120px;" class="th" align="right">是否需要必要性评估：</th>
                        <td class="td5">
                            <input class="easyui-combobox" id="ifNecessity" name="ifNecessity"
                                   data-options="editable:false,required:true"
                            />
                        </td>
                        <th id="neneed" style="width: 90px;" class="th" align="right">不需要原因：</th>
                        <td id="neneed1" class="td5">
                            <input class="easyui-textbox" id="needlessNecessity" name="needlessNecessity"
                                   data-options="editable:true"
                            />
                        </td>
                        <td id="uploadnece">
                            <input class="btn btn-primary" type="button" id="uploadNoNe" onclick="uploadNoNece()"
                                   value="上传附件"
                                   style="width: 70px;margin:5px;"/>
                            <input class="btn btn-primary" type="button" id="downNece" onclick="neceAttach()"
                                   value="附件查看"
                                   style="width: 70px;margin:5px;"/>
                            <input class="btn btn-primary" type="button" id="saveNe" onclick="saveNece()" value="保存"
                                   style="width: 50px;margin:5px;"/>
                        </td>
                    </tr>
                </table>
                <fieldset id="nece" class="fieldset_eui" style="float:left;width:98%;height:90%;">
                    <legend data-i18n="">安全性评估</legend>
                    <table class="table table-bordered table-info">
                        <td colspan="2">
                            <input class="btn btn-primary" type="button" id="saveNe2" onclick="saveNece()" value="保存"
                                   style="width: 50px;margin-left:700px;"/>
                        </td>
                        <tr>
                            <th style="width: 120px;" class="th" align="right">是否涉及SDR：</th>
                            <td class="td5">
                                <input style="width: 60px;" class="easyui-combobox" id="ifSdr" name="ifSdr"
                                       data-options="editable:true" />
                                <input style="width: 91%; height: 60px" class="easyui-textbox" id="involveSdr" name="involveSdr"
                                       data-options="multiline:true" />
                            </td>
                        </tr>
                        <tr>
                            <th style="width: 120px;" class="th" align="right">是否影响维修及放行：</th>
                            <td class="td5">
                                <input style="width: 60px;" class="easyui-combobox" id="ifEffectDisch"
                                       name="ifEffectDisch"
                                       data-options="editable:true" />
                                <input style="width: 91%; height: 60px" class="easyui-textbox" id="effectDisch" name="effectDisch"
                                       data-options="multtiline:true" />
                            </td>
                        </tr>
                        <tr>
                            <th class="th" align="right" style="width: 120px">是否影响飞行操作：</th>
                            <td class="td5">
                                <input style="width: 60px;" class="easyui-combobox" id="ifEffectFlight"
                                       name="ifEffectFlight"
                                       data-options="editable:true" />
                                <input style="width: 91%; height: 60px" class="easyui-textbox" id="effectFlight" name="effectFlight"
                                       data-options="multiline:true" />
                            </td>
                        </tr>
                        <tr>
                            <th class="th" align="right" style="width: 120px">是否影响其他运行：</th>
                            <td class="td5">
                                <input style="width: 60px;" class="easyui-combobox" id="ifEffectOther"
                                       name="ifEffectOther"
                                       data-options="editable:true" />
                                <input style="width: 91%; height: 60px" class="easyui-textbox" id="effectOther" name="effectOther"
                                       data-options="multiline:true" />
                            </td>
                        </tr>
                        <tr>
                            <th class="th" align="right" style="width: 120px">是否会造成空停：</th>
                            <td class="td5">
                                <input style="width: 60px;" class="easyui-combobox" id="ifFlameout" name="ifFlameout"
                                       data-options="editable:true" />
                                <input style="width: 91%; height: 60px" class="easyui-textbox" id="flameout" name="flameout"
                                       data-options="multiline:true" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="nece1" class="fieldset_eui" style="float:left;width:98%;height:90%;">
                    <legend data-i18n="">可靠性评估</legend>
                    <table class="table table-bordered table-info">
                        <tr>
                            <th class="th" align="right" style="width: 120px">不正常事件千次率：</th>
                            <td class="td5">
                                <input style="width: 200px;" class="easyui-textbox" id="abnormanRate" name="abnormanRate"
                                       data-options="editable:true" />
                            </td>
                            <th class="th" align="right" style="width: 120px">故障报告千次率：</th>
                            <td class="td5">
                                <input style="width: 200px;" class="easyui-textbox" id="faultRate" name="faultRate"
                                       data-options="editable:true" />
                            </td>
                        </tr>
                        <tr>
                            <th class="th" align="right" style="width: 120px">可靠性说明：</th>
                            <td class="td5" colspan="3">
                                <input style="width: 100%; height: 60px" class="easyui-textbox" id="reliabilityDes" name="reliabilityDes"
                                       data-options="editable:true,multiline:true" />
                            </td>
                        </tr>
                    </table>

                    <fieldset id="nece2" class="fieldset_eui" style="float:left;width:98%;height:90%;">
                        <legend data-i18n="">MTBUR：</legend>
                        <input class="btn btn-primary" type="button" id="addMt" onclick="addMtbur()" value="增加"
                               style="width: 50px;margin:5px;"/>
                        <table id='dg14'>
                        </table>
                    </fieldset>
                </fieldset>
            </form>
        </div>
        <div title="评估延期情况">
            <table class="table table-bordered table-info">
                <td align="left">评估延期情况</td>
            </table>
            <fieldset class="fieldset_eui" style="float:left;width:98%;height:90%;">
                <table id='dg12'>
                </table>
            </fieldset>
        </div>
        <!--Add by Doreen ,SF -->

        <!--结构信息-->
        <div title="结构信息" id="structureInfo">

            <div id="structureBtn" style="margin: 10px;float:right">
                <a href="javascript:void(0)" class="btn btn-primary" id="saveStructure"
                   onclick="saveStructure()">保存</a>
            </div>
            <form id="mform9">
                <table  class="table table-bordered table-info" id="structureTable">
                    <tr>
                        <th class="th"><span style="color:#ed5565;">*</span>源文件目的:</th>
                        <td class="tdr hs">
                            <span class="structureSpan"><input  name="filePurpose" type="checkbox"  value="0"/>安全性</span>
                            <span class="structureSpan"><input  name="filePurpose" type="checkbox"  value="1"/>经济性</span>
                            <span class="structureSpan"><input  name="filePurpose" type="checkbox"  value="2"/>可靠性</span>
                            <span class="structureSpan"><input  name="filePurpose" type="checkbox" id="isOtherFileAim" value="3"  onclick ="opentext()"/>其它：
                                <input class="easyui-textbox"
                                   name="otherFileAim"
                                   id="otherFileAim"
                                       type="text"
                                   data-options ="validType:['maxLength[100]'],disabled:true"/>
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th class="th"><span style="color:#ed5565;">*</span>针对缺陷:</th>
                        <td class="tdr hs">
                            <span class="structureSpan"><input name="filedefect" type="checkbox"  value="0"/>腐蚀</span>
                            <span class="structureSpan"><input name="filedefect" type="checkbox"  value="1"/>疲劳</span>
                            <span class="structureSpan"><input name="filedefect" type="checkbox"  value="2"/>损伤</span>
                            <span class="structureSpan"><input name="filedefect" type="checkbox"  value="3"/>分层</span>
                            <span class="structureSpan"><input name="filedefect" type="checkbox" id="isOtherDefect" value="4"  onclick ="opentext1()" />其它：
                                <input class="easyui-textbox"
                                       name="otherDefect"
                                       id="otherDefect"
                                       data-options="validType:['maxLength[100]'],disabled: true"/>
                            </span>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
</div>
</body>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript" src="/js/common.js"></script>
<script type="text/javascript">
    var isEdit_;
    var param = '';
    var EVA_MODEL;
    var TYPE;
    var FILE_PKID;
    var pkid;
    var PAGE_DATA = {};
    var select = '';
    var selectRow = "";
    var yulan;
    var gaiban;
    var companyCode;
    var operatorCode;
    var dataType = '';
    var configPkid = "";
    var configPkidsb = "";
    var executionId = ""; //流程实例ID
    var groupPkid;
    var operation;
    var recordId;
    var msgpkid;
    var msgData;
    var spkid;
    var tpkid = "";
    var result = "";
    var dType;
    var dealMeasure;//处理措施
    var exeFlag = "";
    var status = "";
    var overdate;
    var cou;
    var couzh;
    var isFlow = false;
    var rangeType;
    var groupname = "";
    var minAta = "";
    var minFleet = "";
    var ifClaim = "";
    param = getParentParam_();
    isEdit_ = param && param.pkid;
    ifClaim = param.ifClaim;
    pkid = param.pkid;
    dataType = param.dataType;
    yulan = param.yulan; //预览标识
    gaiban = param.gaiban; //改版标识
    dmpkid = param.dmpkid;
    operation = param.operation;
    msgData = param.msgData;
    recordId = param.recordId;
    msgpkid = param.msgpkid;
    isFlow = param.isFlow;
    overdate = param.overdate;
    cou = param.cou;
    couzh = param.couzh;
    var accountId = '';
    var squaflag = '';
    var equaflag = '';
    var ifAsms;
    var evaTitle = "";
    var emFileId = "";
    if (!(dataType.indexOf('SB') != -1 || dataType.indexOf('AD') != -1 || dataType.indexOf('MOD') != -1)) {
        $("#showSbMod").attr("title", "整体评估");
        $("#slDesc").html("原文描述：");
        $("#saveSegBtn").attr("value", "保存");
    }
    function i18nCallBack() {
        $("#evaDate").textbox('setValue', curDate());
        if (operation == "view") {
//            $("#view").hide();
            yulan = true;
        }
        $("#expa").hide();
        $("#con").hide();

        if (isFlow) {
            $("#close").hide();
            $("#commitBtn").hide();
            $("#bohui").hide();
            accountId = param.userId;
        } else {
            $("#close").show();
            $("#commitBtn").show();
            $("#bohui").show();
            accountId = getLoginInfo().accountId
        }

        if (!dataType) {
            dataType = $("#dataType").combobox('getValue');
        }
        $("#stc1").hide();
        $("#stc2").hide();
        $("#nstc").show();
        if (dataType.indexOf('SB') != -1 || dataType.indexOf('AD') != -1) {
            $("#fetchInfo").show();
            $("#analySb").show();
        } else {
            $("#fetchInfo").hide();
            $("#analySb").hide();
        }
        if (msgData == "emFileEvalTran") {
            pkid = recordId;
            $("#delay").hide();
            $("#tran").show();
            updateTranSta();
        } else {
            $("#delay").show();
        }


        InitFuncCodeRequest_({
            data: {
                domainCode: "EVA_RESULT_SEG_SB,EM_FILE_RECEIVE_FILE_TYPE,EM_APPLY_TYPE,DM_URGENT_LEVEL,YESORNO," +
                "EMPOSTPONE_STATUS,GROUP_CONFIG,EM_FILE_PLAN_TYPE,EM_FILE_CLAIM_SIT,EM_FILE_EVAL_DEALMEASURE," +
                "EVA_RESULT,DM_EXTER_STATUS,EM_FILE_DEAL_TASK_TYPE,EVA_RESULT_SL,DA_ACREG_STATUS," +
                "EM_FILE_APL_RANGE_TYPE_A",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    PAGE_DATA['delayStatus'] = DomainCodeToMap_(jdata.data["EMPOSTPONE_STATUS"]);
                    PAGE_DATA['dataStatus'] = DomainCodeToMap_(jdata.data["DM_EXTER_STATUS"]);
                    PAGE_DATA['claimSituation'] = DomainCodeToMap_(jdata.data["EM_FILE_CLAIM_SIT"]);
                    PAGE_DATA['dealOpinion'] = DomainCodeToMap_(jdata.data["EM_FILE_DEAL_TASK_TYPE"]);
                    PAGE_DATA['dealMeasure'] = DomainCodeToMap_(jdata.data["EM_FILE_EVAL_DEALMEASURE"]);
                    PAGE_DATA['rangeType'] = DomainCodeToMap_(jdata.data["EM_FILE_APL_RANGE_TYPE_A"]);
                    PAGE_DATA['applyType'] = DomainCodeToMap_(jdata.data["EM_APPLY_TYPE"]);
                    PAGE_DATA['segevaResult'] = DomainCodeToMap_(jdata.data["EVA_RESULT_SEG_SB"]);
                    PAGE_DATA['yesorno'] = DomainCodeToMap_(jdata.data["YESORNO"]);
                    PAGE_DATA['acStatus'] = DomainCodeToMap_(jdata.data["DA_ACREG_STATUS"]);
                    $('#dealOpinion').combobox({
                        panelHeight: '150px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.EM_FILE_DEAL_TASK_TYPE
                    });
                    $("#dataType").combobox({
                        panelHeight: '100px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.EM_FILE_RECEIVE_FILE_TYPE,
                    });
                    $('#urgentLevel').combobox({
                        panelHeight: '120px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.DM_URGENT_LEVEL,
                    });
                    $('#applyType').combobox({
                        panelHeight: '150',
                        editable: false,
                        data: jdata.data.EM_APPLY_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });
//                    $('#applyModel').combobox({
//                        panelHeight: '150',
//                        editable: false,
//                        data: jdata.data.REVSUG_FLEET,
//                        valueField: 'VALUE',
//                        textField: 'TEXT'
//                    });
//                    $('#evaAta').combobox({
//                        panelHeight: '135px',
//                        data: jdata.data.DM_ATA,
//                        multiple: true,
//                        valueField: 'VALUE',
//                        textField: 'TEXT',
//                        onSelect: function (index, row) {
//                            selectRow = row;
//                        }
//                    });


                    $('#ifInfluenceEva').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO
                    });

                    if (dataType.indexOf('SB') != -1 || dataType.indexOf('AD') != -1 || dataType.indexOf('MOD') != -1) {
                        $('#evaResult').combobox({
                            panelHeight: '70px',
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            data: jdata.data.EVA_RESULT,
                            onSelect: function (data) {
                                evaChange(data.VALUE);
                            }
                        });
                    } else {
                        $('#evaResult').combobox({
                            panelHeight: '70px',
                            valueField: 'VALUE',
                            textField: 'TEXT',
                            data: jdata.data.EVA_RESULT_SL,
                            onSelect: function (data) {
                                evaChange(data.VALUE);
                            }
                        });
                    }

                    $('#disabledSourceFile').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            disChange(data.VALUE);
                        }
                    });
                    $('#ifSubmitSbi').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO
                    });
                    $('#ifNoticeFlight').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO
                    });
                    $('#ifFeedbackFactory').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            feedChange(data.VALUE);
                        }
                    });
                    $('#ifAgainEva').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            againChange(data.VALUE);
                        }
                    });
                    $('#ifAnalysis').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            analyChange(data.VALUE);
                        }
                    });
                    $('#config').combobox({
                        panelHeight: '150px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.GROUP_CONFIG
                    });
                    $('#ifEcon').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            updateEcon(data.VALUE);
                        }
                    });
                    $('#ifNecessity').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            neceChange(data.VALUE);
                        }
                    });
                    $('#ifSdr').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            sdrChange(data.VALUE);
                        }
                    });
                    $('#ifEffectDisch').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            effectChange(data.VALUE);
                        }
                    });
                    $('#ifEffectFlight').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            flightChange(data.VALUE);
                        }
                    });
                    $('#ifEffectOther').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            otherChange(data.VALUE);
                        }
                    });
                    $('#ifFlameout').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            flameChange(data.VALUE);
                        }
                    });

                    $('#ifEwis').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            ewisChange(data.VALUE);
                        }
                    });
                    $('#ifFuzhi').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO
                    });
                    $('#ifNoticeReliability').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO
                    });
                    $('#ifClaim').combobox({
                        panelHeight: '50px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.YESORNO,
                        onSelect: function (data) {
                            claimChange(data.VALUE);
                        }
                    });
                    $('#smPro').combobox({
                        panelHeight: '150px',
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        data: jdata.data.EM_FILE_PLAN_TYPE
                    });

                    /**实现tab切换后保存，并刷新*/
                    $('#tt').tabs({
                        onSelect: function (title) {
                            $("#con").hide();
                            if (title == '源文件') {
                                InitDataGrid1();

                            }
                            if (title == '关联文件') {
                                InitDataGrid2();
                            }
                            if (title == '评估概述') {
                                InitDataGrid3();
                            }
                            if (title == '适用性') {
                                var app = $("#applyType").combobox('getValue');
                                InitDataGrid4();
                                if (app == "PART") {
                                    $("#mxapl").hide();
                                } else {
                                    $("#mxapl").show();
                                    InitDataGrid5();
                                }
                                if (app == "APL") {
                                    InitDataGrid17();
                                    $("#bsyac").show();
                                    $("#analySb").show();
                                } else {
                                    $("#bsyac").hide();
                                    $("#analySb").hide();
                                }
                                if(app == "PART"){
                                    $("#expa").show();
                                    InitDataGrid13();
                                }
                            }
                            if (title == '索赔') {
                                var ifClaim = $("#ifClaim").combobox('getValue');
                                var app = $("#applyType").combobox('getValue');
                                if (app == "PART" || app == "ENG") {
                                    $("#sp1").hide();
                                    $("#sp2").hide();
                                } else {
                                    $("#sp1").show();
                                    $("#sp2").show();
                                }
                                claimChange(ifClaim);
                                InitDataGridSP();
                                InitDataGrid8();
                                InitDataGrid9();
                                InitDataGrid10();
                            }
                            if (title == '经济性评估') {
                                $("#ifAd").hide();
                                $("#evan").hide();
                                $("#accordantEvaPkid").next().hide();
                                var deal = $("#ifEcon").combobox('getValue');
                                jingjiChange(deal);
                            }
                            if (title == '必要性评估') {
                                var deal = $("#ifNecessity").combobox('getValue');
                                var ifSdr = $("#ifSdr").combobox('getValue');
                                var ifEffectDisch = $("#ifEffectDisch").combobox('getValue');
                                var ifEffectFlight = $("#ifEffectFlight").combobox('getValue');
                                var ifEffectOther = $("#ifEffectOther").combobox('getValue');
                                var ifFlameout = $("#ifFlameout").combobox('getValue');
                                neceChange(deal);
//                                sdrChange(ifSdr);
//                                effectChange(ifEffectDisch);
//                                flightChange(ifEffectFlight);
//                                otherChange(ifEffectOther);
//                                flameChange(ifFlameout);
                                InitDataGrid14();
                            }
                            if (title == '分段评估' || title == '整体评估') {
                                //其他
                                if (!(dType.indexOf("CAD") != -1 || dType.indexOf("AD") != -1 || dType.indexOf("AOMC") != -1 || dType.indexOf("SB") != -1
                                        || dType.indexOf("IN") != -1 || dType.indexOf("NSC") != -1 || dType.indexOf("MOD") != -1 || dType.indexOf("VSTC") != -1
                                        || dType.indexOf("MDL") != -1)) {
                                    InitFuncCodeRequest_({
                                        data: {evapkid: pkid, FunctionCode: "EM_GET_SEG_PKID"},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    spkid = jdata.data.PKID;
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg, type: 'error'});
                                            }
                                        }
                                    });
                                    if (spkid) {
                                        InitFuncCodeRequest_({
                                            data: {segpkid: spkid, FunctionCode: "EM_GET_TASK_PKID"},
                                            async: false,
                                            successCallBack: function (jdata) {
                                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                    if (jdata.data != null) {
                                                        tpkid = jdata.data.PKID;
                                                    }
                                                } else {
                                                    MsgAlert({content: jdata.msg, type: 'error'});
                                                }
                                            }
                                        });
                                        $("#taskpkid").val(tpkid);
                                        InitForm6(spkid);
                                    } else {
                                        $("#segDesc").textbox('setValue', '');
                                        $("#evaOpinion").textbox('setValue', '');
                                    }
                                    if (tpkid) {
                                        InitFormTask6(tpkid);
                                    }

                                    InitDataGrid7(spkid, tpkid);
                                    var evaResult = 'SY';
                                    InitFuncCodeRequest_({
                                        data: {pkid: pkid, FunctionCode: "EM_FILE_EVA_BY_PKID"},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    evaResult = jdata.data.EVA_RESULT;
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                    if (evaResult == 'BSY' || evaResult == 'ZHL') {
                                        $("#evaOpinion").textbox({required: false});
                                    } else {
                                        $("#evaOpinion").textbox({required: true});
                                    }

                                } else {
                                    InitDataGrid6();
                                }
                            }
                            if (title == '评估延期情况') {
                                InitDataGrid12();
                            }
                        }
                    });
                    if (pkid) {
                        InitDataGrid1();
                        InitDataGrid();
                        InitGrid();
                        var urgentLevel = $("#urgentLevel").combobox('getValue');
                        if (urgentLevel == "") {
                            $("#urgen1").hide();
                            $("#urgen2").hide();
                            $("#urgentLevel").combobox({onlyview: true, editable: false, required: false});
                        } else {
                            $("#urgen1").show();
                            $("#urgen2").show();
                            $("#urgentLevel").combobox({onlyview: true, editable: false, required: true});
                        }
                        $("#dataType").textbox({onlyview: true, editable: false});
                        $("#evaDeadline").textbox({onlyview: true, editable: false});
                        $("#evaManName").combobox({onlyview: true, editable: false});
                        $("#applyType").combobox({onlyview: true, editable: false});
                        $("#applyModel").textbox({onlyview: true, editable: false});
                        $("#evaAta").textbox({onlyview: true, editable: false});
                    } else {
                        $("#evaNo").textbox('setValue', randomNumber());
                    }
                    var app = $("#applyType").combobox('getValue');
                    if (app == "APL") {
                        $("#app1").hide();
                        $("#app3").hide();
                        $("#app2").show();
                    } else if (app == "ENG") {
                        $("#app1").show();
                        $("#app2").hide();
                        $("#app3").hide();
                    } else if (app == "PART") {
                        $("#app3").show();
                        $("#app1").hide();
                        $("#app2").hide();
                    }


                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        //评估单主键ID 赋值给 emFileId
        emFileId = pkid;

    }

    function InitForm6(spkid) {
        InitFuncCodeRequest_({
            data: {pkid: spkid, FunctionCode: "EM_OTHER_SEG_BY_PKID"}, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    ParseFormField_(jdata.data, $("#mform6"), Constant.CAMEL_CASE);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function InitFormTask6(tpkid) {
        InitFuncCodeRequest_({
            data: {pkid: tpkid, FunctionCode: "EM_OTHER_TASK_BY_PKID"}, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    ParseFormField_(jdata.data, $("#mform6"), Constant.CAMEL_CASE);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }


    /**
     * 回显数据
     */
    function InitGrid() {

        if (yulan) {
            $("#analy7").hide();
            $("#viewHistory").hide();
            $("#save").hide();
            $("#pdf").hide();
            $("#commitBtn").hide();
            $("#tran").hide();
            $("#bohui").hide();
            $("#delay").hide();
            $("#close").hide();
            $("#addRef").hide();
            $("#fetchInfo").hide();
            $("#viewMemo").hide();
            $("#saveEa").hide();
            $("#saveEc").hide();
            $("#analy3").hide();
            $("#analy4").hide();
            $("#analy5").hide();
            $("#assignCon").hide();
            $("#addSeg").hide();
            $("#saveSegBtn").hide();
            $("#addTaskSfBtn").hide();
            $("#refTaskSfBtn").hide();
            $("#sClaim").hide();
            $("#cal").hide();
            $("#addClaim").hide();
            $("#addClaimMa").hide();
            $("#addClaimh").hide();
            $("#uploadNoE").hide();
            $("#saveE").hide();
            $("#chooseA").hide();
            $("#addEc").hide();
            $("#uploadNoNe").hide();
            $("#saveNe").hide();
            $("#saveNe2").hide();
            $("#addMt").attr("disabled", true);
            $("#setT").hide();
            $("#addSoruce").hide();
            $("#saveStructure").hide();
            $("input[name='filePurpose']").prop("disabled", true);
            $("input[name='filedefect']").prop("disabled", true);
            $("#uploadEvaId").hide();

            $("#mform1 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
            $("#mform2 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
            $("#mform3 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
            $("#mform4 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
            $("#mform5 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
            $("#mform6 [textboxname]").each(function (k, it) {
                if ($(it).hasClass("combobox-f")) {
                    $(it).combobox({editable: false, onlyview: true});
                } else if ($(it).hasClass("textbox-f")) {
                    $(it).textbox({editable: false, onlyview: true});
                } else {
                    $(it).datetimebox({editable: false, onlyview: true});
                }
            });
        }
        if (isFlow) {
            $("#pdf").show();
        }
        if (gaiban) {
            $('#evaReason').textbox({editable: true, onlyview: false, required: true});
        }
        if (!yulan) {
            $('#applyDesc').textbox({editable: true, onlyview: false, required: true});
        }
        if (pkid) {
            queryStructure(pkid);
            InitFuncCodeRequest_({
                data: {pkid: pkid, FunctionCode: "EM_FILE_EVA_BY_PKID"}, async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        ParseFormField_(jdata.data, null, Constant.CAMEL_CASE);
                        $('#dataType').combobox({value: jdata.data.DATATYPE});
                        $('#applyModel').textbox({value: jdata.data.APPLY_MODEL});
                        $('#applyType').combobox({value: jdata.data.APPLY_TYPE});
                        $('#urgentLevel').combobox({value: jdata.data.URGENT_LEVEL});
                        $('#evaResult').combobox({value: jdata.data.EVA_RESULT});
                        $('#disabledSourceFile').combobox({value: jdata.data.DISABLED_SOURCE_FILE});
                        $('#evaManName').textbox({value: jdata.data.EVA_MAN_NAME});
                        $('#evaAccid').textbox({value: jdata.data.EVA_MAN_ID});
                        evaTitle = jdata.data.TITLE;
                        var ifEcon = jdata.data.IF_ECON;
                        status = jdata.data.STATUS;
                        dType = jdata.data.DATATYPE + "";
                        dataType = dType;//重新赋一次值是因为转发页面提交时候取不到该字段
                        var app = $("#applyType").combobox('getValue');

                        var quaSta = jdata.data.QUA_STA;
                        if (quaSta == 'BH') {
                            $("#dealMemo").show();
                        } else {
                            $("#dealMemo").hide();
                        }
                        if (ifEcon == 'Y') {
                            $("#kekaomemo").show();
                        } else {
                            $("#kekaomemo").hide();
                        }
                        /***
                         AD/CAD/AMOC
                         SB/IN/NSC
                         MOD/VSTC
                         SL/SIL/SAIB/FTD/MOM/MAINT REP.
                         */
                        if (dType.indexOf("CAD") != -1 || dType.indexOf("AD") != -1 || dType.indexOf("AMOC") != -1) {
                            $('#tt').tabs('close', '必要性评估');
                            $('#tt').tabs('close', '索赔');
                            $('#tt').tabs('close', '评估内容');
                            $("#othereva").hide();
                            $("#segnor").show();
                            $("#segnor1").show();
                            $("#segother").hide();
                            $("#urgen1").show();
                            $("#urgen2").show();
                            $("#result1").show();
                            $('#evaResult').combobox({required: true});
                            $('#ifInfluenceEva').combobox({required: false});
                            $('#ifInfluenceEva').combobox('setValue', '');
                            $("#result2").show();
                            $("#ewis").hide();
                            $("#result3").hide();
                            $("#result4").hide();
                            $('#ifEwis').textbox('setValue', '');
                            $('#reasonEwis').textbox('setValue', '');
                        } else if (dType.indexOf("SB") != -1 || dType.indexOf("IN") != -1
                            || dType.indexOf("NSC") != -1) {
                            $("#result3").show();
                            $("#result4").hide();
                            if (app == 'APL') {
                                $("#sb1").show();
                                $("#sb2").show();
                            } else {
                                $("#sb1").hide();
                                $("#sb2").hide();
                            }
                            $("#othereva").hide();
                            $('#ifInfluenceEva').combobox({required: false});
                            $('#ifInfluenceEva').combobox('setValue', '');
                            $("#segnor").show();
                            $("#segnor1").show();
                            $("#segother").hide();
                            $("#urgen1").show();
                            $("#urgen2").show();
                            $("#result1").show();
                            $("#result2").show();
                            $("#ewis").hide();
                            $('#ifEwis').textbox('setValue', '');
                            $('#reasonEwis').textbox('setValue', '');

                        } else if (dType.indexOf("MOD") != -1 || dType.indexOf("VSTC") != -1 || dType.indexOf("MDL") != -1) {
                            $('#tt').tabs('close', '索赔');
                            $("#othereva").show();
                            $("#segnor").show();
                            $("#segnor1").show();
                            $("#segother").hide();
                            $("#urgen1").hide();
                            $("#urgen2").hide();
                            $("#result1").show();
                            $("#result2").show();
                            $("#ewis").show();

                            $('#urgentLevel').textbox('setValue', '');
                            $("#result3").hide();
                            $("#result4").hide();
                        } else {
                            exeFlag = "OTHERS";
                            $('#tt').tabs('close', '必要性评估');
                            $('#tt').tabs('close', '索赔');

                            $("#othereva").show();
                            $("#segnor").hide();
                            $("#segnor1").hide();
                            $("#segother").show();
                            $("#urgen1").show();
                            $("#urgen2").show();
                            $("#result1").show();
                            $("#result2").show();
                            $("#ewis").hide();
                            $('#ifEwis').textbox('setValue', '');
                            $('#reasonEwis').textbox('setValue', '');
                            $("#againEva").text("是否重评");
                            $('#evaResult').combobox({required: true});
                            $("#result3").hide();
                            $("#result4").hide();
                        }
                        if (app != "PN") {
                            $('#tt').tabs('close', '重评估条件');
                        }
                        if (gaiban) {
//                            $('#againEvaDate').textbox({editable: true, onlyview: false, required: true});
                        }
                    }
                }
            });
        }
    }

    //表头信息
    function InitDataGrid() {
        var $form = $("#mform1");
        var applyType = $("#applyType").combobox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var ata2 = $("#evaAta").textbox('getValue');
        getAtaAndModel(applyType, applyModel, ata2);
        $form.form({
            onSubmit: function () {
                var data = $form.serializeObject();
                data = $.extend({
                    dmpkid: dmpkid,
                    msgData: msgData,
                    minAta: minAta,
                    minFleet: minFleet
                }, data, {FunctionCode: 'EM_FILE_EVALUATE_ADD'});
                InitFuncCodeRequest_({
                    data: data,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            pkid = jdata.data.pkid;
                            param.OWindow.reload_();
                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
                return false;
            }
        });
    }


    /*选择“其他”输入框显示*/
    function opentext(){
        console.log($('#otherFileAim').is(":checked"));
        if($('#isOtherFileAim').is(":checked")){
            $('#otherFileAim').textbox({disabled:false});
        } else {
            $('#otherFileAim').textbox('setValue')
            $('#otherFileAim').textbox({disabled:true})
        }}

    function opentext1(){
        console.log($('#isOtherDefect').is(":checked"));
        if($('#isOtherDefect').is(":checked")){
            $('#otherDefect').textbox({disabled:false});
        } else {
            $('#otherDefect').textbox('setValue')
            $('#otherDefect').textbox({disabled:true})
        }}


    //保存结构信息
    function saveStructure() {
        var chk_value =[];//定义一个数组
        var cck_value = [];
        var otherFileAimdate;
        var otherDefectdate;

        $('input[name="filePurpose"]:checked').each(function(){//遍历每一个名字为interest的复选框，其中选中的执行函数
            if($(this).val() != "3"){
                filePurposeRemark="";
            }
            chk_value.push($(this).val());//将选中的值添加到数组chk_value中
        });
        $('input[name="filedefect"]:checked').each(function(){//遍历每一个名字为interest的复选框，其中选中的执行函数
            if($(this).val() != "4"){
                defectRemark="";
            }
            cck_value.push($(this).val());//将选中的值添加到数组chk_value中
        });
        var otherFileAimdate = $("#otherFileAim").textbox('getValue');
        var otherDefectdate = $("#otherDefect").textbox('getValue');
        //结构信息主键ID
        var structureBasePkId = $("#structureBasePkId").textbox('getValue');

        var filePurpose = chk_value.join();
        var filedefect = cck_value.join();
        var filePurposeRemark = otherFileAimdate;
        var defectRemark = otherDefectdate;

        if(filePurpose == null||filePurpose.length <= 0){
            MsgAlert({content: "源文件目的必填", type: 'error'});
            return;
        };
        if(filedefect == null||filedefect.length <= 0){
            MsgAlert({content: "针对缺陷必填", type: 'error'});
            return;
        };


        var params = {
             "pkId":structureBasePkId,
            "filePurpose": filePurpose,
            "evaId": pkid,
            "defect": filedefect,
            "defectRemark": defectRemark,
            "filePurposeRemark": filePurposeRemark,
        };

        $.ajax({
            url: '/api/v1/ee/emFileStructureBase/editEmFileStructureBase',
            type: 'post',
            data: JSON.stringify(params),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                //alert(data.code);
                //判断操作是否成功
                if (data.code ==200) {
                    // 操作成功后提示
                    MsgAlert({content: "操作成功"  , type: 'info'});

                    // 关闭窗口
                   //CloseWindowIframe();
                } else {
                   MsgAlert({content: data.msg , type: 'error'});
                }
            }
        });
    }

    //查询结构信息
    function queryStructure(pkid) {
        debugger;
        $('#tt').tabs('getTab',"结构信息").panel('options').tab.hide();//隐藏tab页
        $("#structureInfo").hide();
        $("#uploadEvaId").hide();
        $("#viewEvaAttachmentId").hide();
        $.ajax({
            url: '/api/v1/ee/emFileStructureBase/queryEmFileStructureBase/'+pkid,
            type: 'get',
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                //判断操作是否成功
                if (result.msg == "success") {
                    var data = result.data;
                    if(JSON.stringify(data) != "{}" && data != undefined){
                        ifAsms=data.ifAsms;
                        if(ifAsms && ifAsms=="Y"){
                            $('#tt').tabs('getTab',"结构信息").panel('options').tab.show();//显示tab页
                            $("#structureInfo").show();
                            $("#viewEvaAttachmentId").show();
                            if(!yulan){
                                $("#uploadEvaId").show();
                            }
                        }
                        $("#otherDefect").textbox('setValue',data.defectRemark);
                        $("#otherFileAim").textbox('setValue',data.filePurposeRemark);
                        $("#structureBasePkId").textbox('setValue',data.pkId);
                        var filePurposeList =  data.filePurpose;
                        var defectList =  data.defect;
                        if(filePurposeList != null){
                            for (var i = 0; i < filePurposeList.length; i++) {
                                $("input[name='filePurpose'][value='" + filePurposeList[i] + "']").prop("checked", true);
                            }
                        }

                        if(defectList != null) {
                            for (var i = 0; i < defectList.length; i++) {
                                $("input[name='filedefect'][value='" + defectList[i] + "']").prop("checked", true);
                            }
                        }
                    }
                } else {
                    console.log("error--->"+result.msg);
                }
            },
            error:function(result){
                MsgAlert({content: result.msg , type: 'error'});
            }
        });
    }


    //进入三维辅助页面
    function threeDimension(){
        ShowWindowIframe({
            width: "900",
            height: "1000",
            title:"三维辅助",
            param: {evapkid:""},
            url: "/views/em/emfileeval/ee/emfileeva_threedimensional.shtml"
        });
    }




    // 保存
    function msave() {
        var isValidate = $("#mform1").form('validate');
        if (!isValidate)
            return;
        $("#mform1").submit();
    }

    //更新评估概述
    function saveEva() {
        var isValidate = $("#mform2").form('validate');
        if (!isValidate)
            return;
        $("#mform2").submit();
    }

    //更新索赔
    function saveClaim() {
        var isValidate = $("#mform4").form('validate');
        if (!isValidate)
            return;
        $("#mform4").submit();
    }



    /**关联文件
     */
    function InitDataGrid2() {
        var identity = 'dg2';
        $("#dg2").MyDataGrid({
                fit: true,
                identity: identity,
            pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
            queryParams: {pkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_REF_FILE_LIST'
                    },
                    alter: {
                        FILE_NO: {
                            formatter: function (value, row, index) {
                                return '<a href="javascript:void(0);" onclick="viewDetail(\'' + row.PKID + '\',\'' + row.APPLY_TYPE + '\',\'' + row.DATA_TYPE + '\');">' + value + '</a>';
                            }
                        },
                        FILE_UPLOAD: {
                            formatter: function (value, row, index) {
                                if (row.FILE_UPLOAD) {
                                    return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach4">' +
                                        '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                                }
                            }
                        },
                        DATA_STATUS: {
                            formatter: function (value) {
                                return PAGE_DATA['dataStatus'] [value];
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                    //上传成功之后给图标绑定方法
                    InitSuspend('a.attach4', {
                        'onmouseover': function (thiz, event, callback) {
                            var index = $(thiz).attr("rowindex");
                            var row = $("#dg2").datagrid('getRows')[index];
                            InitFuncCodeRequest_({
                                data: {
                                    SOURCE_ID: row.PKID,
                                    CATEGORY: "EMFILEEVAREFFILE",
                                    FunctionCode: 'ATTACHMENT_RSPL_GET'
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code == 200) {

                                    }
                                    var html = "";
                                    for (var i = 0; i < jdata.data.length; i++) {
                                        html += '<li><a target="_blank" onclick="downFileLocal(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a><span onclick="deleteFile(\'' + jdata.data[i].PKID + '\');return false;" class="icon-cross"></span></li>';
                                    }
                                    callback(html);
                                }
                            });
                        }
                    });
                    $("#dg2").datagrid('doCellTip', {'max-width': '400px', 'delay': 500});
                },
                contextMenus: [
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg2').datagrid('getSelected');
                            var refPkid = rowData.REFPKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, FunctionCode: "EM_FILEEVA_REFFILE_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg2");
                                        reloadSour();
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )

    }

    function commit() {
        if (pkid == "") {
            MsgAlert({content: '请先保存基本信息！', type: 'error'});
            return false;
        }

        var applyType = $("#applyType").combobox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var ata2 = $("#evaAta").textbox('getValue');
        var minAta = "";
        var minModel = "";

        var sourResult = "相同来源厂商，类型的资料只能有一个生效的。不符合要求数据如下：";
        var sresult = "";
        if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
            InitFuncCodeRequest_({
                data: {evaId: pkid, FunctionCode: 'EM_FILE_CHECK_SOUR'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            var zxArray = jdata.data;
                            if (Array.isArray(zxArray)) {
                                if (zxArray.length > 0 && zxArray[0] != null) {
                                    for (var i = 0; i < zxArray.length; i++) {
                                        if (zxArray[i].COU != 1) {
                                            sresult = sresult + "[源文件：" + zxArray[i].DATA_TYPE + ",来源厂商：" + zxArray[i].DATA_FROM + "];";
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
        if (sresult != "") {
            MsgAlert({content: sourResult + sresult, type: 'error'});
            return false;
        }

        var isValidate1 = $("#mform1").form('validate');
        var isValidate2 = $("#mform2").form('validate');
        if (!isValidate1 || !isValidate2) {
            MsgAlert({content: '请完整填写评估概述页面必填内容保存后再进行该操作', type: 'warn'});
            return false;
        }
        var isValidate3 = $("#mform3").form('validate');
        if (!isValidate3) {
            MsgAlert({content: '经济性评估含有必填项，请先填写再进行该操作', type: 'warn'});
            return false;
        }

        var reqCou = 0;
        InitFuncCodeRequest_({
            data: {evapkid: pkid, FunctionCode: 'EM_FILE_REQ_COU'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        reqCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (reqCou > 0) {
            MsgAlert({content: "请先填写评估概述、经济性评估页面必填项，保存之后再提交！", type: 'error'});
            return;
        }

        if(dataType.indexOf("SB") != -1 || dataType.indexOf("MOD") != -1){
            //SB校验必要性
            var reqCou = 0;
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: 'EM_FILE_BYX_COU'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            reqCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
            if (reqCou > 0) {
                MsgAlert({content: "请先填写必要性评估页面必填项，保存之后再提交！", type: 'error'});
                return;
            }
        }

        if (overdate > 0) {
            MsgAlert({content: '评估单已经超期，不允许提交，请先提交延期申请！', type: 'error'});
            return false;
        }
        var stcFlag = "N";
        if (dataType.indexOf("MOD") != -1 || dataType.indexOf("VSTC") != -1 || dataType.indexOf("MDL") != -1) {
            stcFlag = "Y";
        }

        var sflag = true;
        if (dataType.indexOf("SB") != -1) {
            var pnCou = 0;
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: 'EM_FILE_MTBUR_COU'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            pnCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
            InitFuncCodeRequest_({
                data: {pkid: pkid, FunctionCode: 'EM_FILE_EVA_BY_PKID'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            var ifNecessity = jdata.data.IF_NECESSITY;
                            var abnormanRate = jdata.data.ABNORMAN_RATE;
                            var faultRate = jdata.data.FAULT_RATE;
                            var reliabilityDes = jdata.data.RELIABILITY_DES;
                            if (ifNecessity == "Y" && !abnormanRate && !faultRate && !reliabilityDes && pnCou == 0) {
                                sflag = false;
                            }
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }

        if (!sflag) {
            MsgAlert({content: "必要性评估为是时，可靠性评估和MTBUR二者至少添加一个", type: "error"});
            return;
        }


        //剩下的校验都是只有评估单为适用的时候才校验
        var evaResult = "";
        InitFuncCodeRequest_({
            data: {evapkid: pkid, FunctionCode: 'EM_FILE_GET_RESULT'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        evaResult = jdata.data.EVA_RESULT;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (evaResult == "SY" || stcFlag == 'Y') {
            //校验关联文件
            var refCou = 1;
            if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
                InitFuncCodeRequest_({
                    data: {evaId: pkid, FunctionCode: 'EM_FILE_CHECK_REF'},
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            if (jdata.data != null) {
                                refCou = jdata.data.COU;
                            }
                        } else {
                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                        }
                    }
                });
            }
            if (refCou == 0) {
                if (!confirm("关联文件为空，请确认是否提交？")) {
                    return;
                }
            }

            //校验经济性价格表
            var econCou = 1;
            InitFuncCodeRequest_({
                data: {evaId: pkid, FunctionCode: 'EM_FILE_CHECK_ECON'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            var econ = jdata.data.IF_ECON;
                            if (econ == "Y") {
                                InitFuncCodeRequest_({
                                    data: {evaId: pkid, FunctionCode: 'EM_FILE_CHECK_ECON_COU'},
                                    async: false,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            if (jdata.data != null) {
                                                econCou = jdata.data.COU;
                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });
                            }
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
            if (econCou == 0) {
                MsgAlert({content: "选的是需要经济评估，请先添加经济性价格表，再提交！", type: 'error'});
                return;
            }

            //校验适用性分组是否存在
            var groupCou = 0;
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: 'EM_FILE_CHECK_GROUP'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            groupCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });

            if (groupCou == 0) {
                MsgAlert({content: "还未添加适用性分组，不允许提交！", type: 'error'});
                return;
            }
            //校验适用性适用范围是否存在
            var rangeCou = 0;
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: 'EM_FILE_CHECK_RANGE'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            rangeCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });

            if (rangeCou == 0) {
                MsgAlert({content: "分组还未添加适用性范围，不允许提交！", type: 'error'});
                return;
            }

            //校验至少要有一个分段（必须有分段源文件），分段下至少要有一个任务，任务下至少要有一个执行文件
            var segCou = 0;
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: 'EM_FILE_COMMIT_SEG'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            segCou = jdata.data.COU;
                        }
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
            if (segCou == 0) {
                MsgAlert({content: "该评估单下没有增加分段，不允许提交！", type: 'error'});
                return;
            }
            //其他类评估单不校验
            if (dataType.indexOf('SB') != -1 || dataType.indexOf('AD') != -1 || dataType.indexOf('MOD') != -1) {
                checkSegSour();
                if (groupname != "") {
                    MsgAlert({content: "以下适用的分段没有分段源文件，不允许提交！【" + groupname + "】", type: 'error'});
                    return;
                }
            }

            checkSegTask();
            if (groupname != "") {
                MsgAlert({content: "以下适用的分段没有任务，不允许提交！【" + groupname + "】", type: 'error'});
                return;
            }
            checkSegTaskZx();
            if (groupname != "") {
                MsgAlert({content: "以下任务没有执行文件，不允许提交！【" + groupname + "】", type: 'error'});
                return;
            }

            var isTlShow = (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1 || dataType.indexOf("AMOC") != -1) ? true : false;
            if (isTlShow) {
                checkTl();
                if (groupname != "") {
                    MsgAlert({content: groupname, type: 'error'});
                    return;
                }
            }

            //提交前校验适用性分配情况
            //校验任务
            checkTask();
            if (groupname != "") {
                MsgAlert({content: "适用性分组" + groupname + "未分配到任务上，不允许提交！", type: 'error'});
                return;
            }
            checkTaskCfx(applyType);
            if (groupname != "") {
                MsgAlert({content: "重复性类型的任务有适用性未完全分配到顺丰执行文件上，不允许提交！【" + groupname + "】", type: 'error'});
                return;
            }
            beforeSubmit(applyType, pkid);
            if (result != null && result != "") {
                MsgAlert({content: "存在有未完全分配适用性的任务，请先处理再提交！" + result, type: 'error'});
                return;
            }
            //其他类评估单不校验
            if (dataType.indexOf('SB') != -1 || dataType.indexOf('AD') != -1 || dataType.indexOf('MOD') != -1) {
                checkTaskYcx(applyType);
                if (groupname != "") {
                    MsgAlert({content: "针对一次性任务，同一个适用对象同时存在顺丰执行文件和前营运人执行文件中，不允许提交！【" + groupname + "】", type: 'error'});
                    return;
                }
            }
            //校验上营运人执行文件适用性不允许为空
            checkTaskOp(applyType);
            if (groupname != "") {
                MsgAlert({content: "前营运人执行文件中，有适用性为空的数据，不允许提交！【" + groupname + "】", type: 'error'});
                return;
            }
            checkGz(pkid);
            if (groupname != "") {
                MsgAlert({content: "针对SB/MOD的改装类任务对应的执行文件‘主改装’属性不能为空！【" + groupname + "】", type: 'error'});
                return;
            }
            if (dataType.indexOf("SB") != -1) {
                if (ifClaim == "Y") {
                    var aFlag = 0;
                    var bFlag = 0;
                    InitFuncCodeRequest_({
                        data: {
                            FunctionCode: 'EM_FILE_CHECK_CLAIM',
                            evapkid: pkid
                        },
                        async: false,
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                if (jdata.data != null) {
                                    aFlag = jdata.data.A_FLAG;
                                    bFlag = jdata.data.B_FLAG;
                                }
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });

                    if (aFlag > 0) {
                        MsgAlert({
                            content: "索赔航材包、人工时分组中含有适用对象中没有的分组！",
                            type: 'error'
                        });
                        return;
                    }
                    if (bFlag > 0) {
                        MsgAlert({
                            content: "索赔航材包、人工时分组之和必须包含所有适用对象中的分组！",
                            type: 'error'
                        });
                        return;
                    }
                }
            }
        }

        var execid = validWorkFlow("EM_FILE_EVALUATE", pkid);
        var evaManId = $("#evaAccid").textbox('getValue');
        checkzz(pkid, applyType, applyModel, ata2);
        var tips = "";
        if (equaflag != "ALL") {
            if (squaflag == "NO") {
                tips = "当前用户没有该评估单的资质，请提交给有资质的用户！";
            } else if (squaflag == "PART") {
                tips = "当前用户资质不全，请提交给其他有资质的用户进行联合评估！";
            }
            if (squaflag == "NO" || squaflag == "PART") {
                $.messager.confirm('', tips, function (r) {
                    if (r) {
                        ShowWindowIframe({
                            width: 550,
                            height: 250,
                            title: "联合评估",
                            param: {
                                accId: evaManId,
                                pkid: pkid,
                                cflag: "commit",
                                accountId: accountId,
                                msgData: msgData,
                                eflag: equaflag,
                                sflag: squaflag
                            },
                            url: '/views/em/emfileeval/emfileeva_filetrans.shtml'
                        });
                    }
                });
            }
        }

        isCreateSvrApp(pkid);

        var ret = isVerifyEeBaseInfo(pkid);

        if(ret != ""){
            MsgAlert({content: ret , type: 'error'});
            return false;
        }

        var varRet = isVerifyEeParaInfo(pkid);
        if (varRet != ""){
            MsgAlert({content: varRet , type: 'error'});
            return false;
        }

        //校验改装类文件是否存在持续适航评估未选择适应性的记录
        if (dataType.indexOf("MOD") != -1  || dataType.indexOf("VSTC") != -1){
             var msg= validateEvaAirworthinessApl();
             if(msg){
                 MsgAlert({content: "分段["+msg+"]持续适航评估适应性为空！" , type: 'error'});
                 return false;
             }
        }

        if (squaflag == "ALL" || equaflag == "ALL") {
            ShowWindowIframe({
                identity: 'dg', isEdit: '', width: 520, height: 300,
                title: "选择处理人",
                param: {
                    roleId: '',
                    otherParam: pkid,
                    otherParam1: msgpkid,
                    msgData: msgData,
                    FunctionCode_: 'TD_EMFILEEVAL_SUMBIT',
                    successCallback: reloadTo2,
                    flowKey:"emFileEvaluateFlow"
                },
                url: "/views/em/emfileeval/emfileeva_flow_select.shtml"
            });
        }

    }

    /**
     *  是否在老龄生成服务申请
     *
     *  @author 01377736 Tom
     *  @date 2019-10-30 10:30
     *
     */
    function isCreateSvrApp(id) {
        var result = [];
        $.ajax({
            type: "get",
            url: "/ee/emFileEmFileStructuralAttribute/selectEmFileStructuralAttributeByEvaId/?evaId="+id,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                result = obj.data;
            },
            error: function (resultObj) {
                alert("结构属性信息查询失败！");
            }
        });

        if(result.length > 0){
            var tmpInfo = null;
            for (var i = 0; i < result.length; i++){
                tmpInfo = "段落 " + result[i] + ",";
            }
            var info = tmpInfo + "结构属性判断为PTF，如需创建服务申请，请前往分段评估界面创建。";
            confirm(info);
        }
    }

    /**
     *  校验结构信息必填
     *
     *  @author 01377736 Tom
     *  @date 2019-12-10 17:16
     *
     */
    function isVerifyEeBaseInfo(id){
        var result = "";
        $.ajax({
            type: "get",
            url: "/api/v1/ee/verifyAndDelete/verifyEeStructureBaseInfo/"+id,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                result = obj.data;
            },
            error: function (resultObj) {
                alert(resultObj.msg);
            }
        });

        return result;
    }

    /**
     *  校验分段措施类别必填
     *
     *  @author 01377736 Tom
     *  @date 2019-12-10 17:16
     *
     */
    function isVerifyEeParaInfo(id){
        var result = "";
        $.ajax({
            type: "get",
            url: "/api/v1/ee/verifyAndDelete/verifyEeStructureParaInfo/"+id,
            contentType: "application/json;charset=utf-8",
            async:false,
            success: function (obj) {
                result = obj.data;
            },
            error: function (resultObj) {
                alert(resultObj.msg);
            }
        });

        return result;
    }

    function checkzz(evapkid, applyType, applyModel, ata2) {
        InitFuncCodeRequest_({
            async: false,
            data: {
                evapkid: evapkid, applyType: applyType,
                applyModel: applyModel, ata2: ata2, FunctionCode: "EM_FILE_CHECK_ZZ"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        squaflag = jdata.data.sflag;
                        equaflag = jdata.data.eflag;
                    }
                } else {
                    MsgAlert({content: '校验资质失败，请联系管理员！', type: 'error'});
                }
            }
        });
    }

    /**
     * 校验工作流是否已经存在
     *
     **/
    function validWorkFlow(objKey, objNo) {
        InitFuncCodeRequest_({
            async: false,
            data: {objKey: objKey, objNo: objNo, FunctionCode: 'VALID_WORK_FLOW'},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data) {
                        executionId = jdata.data.EXECUTION_ID;
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        return executionId;
    }


    function editDeloy(operation, delayId) {
        var title_ = $.i18n.t('评估延期申请编辑页面');
        var evaDeadline = $('#evaDeadline').datebox('getValue');
        var evaNo = $('#evaNo').textbox('getValue');

        var sourNo = '';
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SOURNO'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        sourNo = jdata.data.DATA_NO;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (sourNo != '') {
            evaNo = evaNo + ':' + sourNo;
        }
        ShowWindowIframe({
            width: "610",
            height: "330",
            title: title_,
            param: {
                operation: operation, pkid: delayId,
                postponeSort: "EM_FILE_EVALUATE",//EMFILEEVA
                postponeObjectPkid: pkid,
                postponeObjectNo: evaNo,
                originalDeadline: evaDeadline
            },
            url: "/views/em/empostpone/empostpone_add.shtml"
        });
    }

    /**
     * 延期申请
     */
    function delay() {
        openTab("评估延期情况");
        if (status != "PGZ") {
            MsgAlert({content: '评估单不是评估中，不允许提交延期申请！', type: 'error'});
            return false;
        }
        if (pkid == "") {
            MsgAlert({content: '请先保存基本信息！', type: 'error'});
            return false;
        }
        var isValidate = $("#mform").form('validate');
        if (!isValidate) {
            MsgAlert({content: '请完整填写页面必填内容保存后再进行该操作', type: 'warn'});
            return false;
        }
        var evaDeadline = $('#evaDeadline').datebox('getValue');
        var evaNo = $('#evaNo').textbox('getValue');

        var sourNo = '';
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SOURNO'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        sourNo = jdata.data.DATA_NO;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (sourNo != '') {
            evaNo = evaNo + ':' + sourNo;
        }

        ShowWindowIframe({
            width: 610,
            height: 330,
            param: {
                postponeSort: "EM_FILE_EVALUATE",//EMFILEEVA
                postponeObjectPkid: pkid,
                postponeObjectNo: evaNo,
                originalDeadline: evaDeadline
            },
            title: "延期申请",
            url: "/views/em/empostpone/empostpone_add.shtml"
        });
    }

    /**
     * 主页面的关闭方法
     */
    function closeAdd() {
        $.messager.confirm('', '是否关闭', function (r) {
            if (r) {
                CloseWindowIframe();
                param.OWindow.reload_();
            }
        });
    }


    /**
     * 添加参考文件
     */
    function addRefFile() {
//        var refFileNo = $('#refFileNo').combobox('getValue');
//        if (!refFileNo) {
//            MsgAlert({content: "此处必须选择关联文件号", type: "error"});
//            return false;
//        }
//        InitFuncCodeRequest_({
//            data: {
//                FILEPKID: refFileNo, EVAPKID: pkid,
//                FunctionCode: "EM_FILEEVA_REFFILE_ADD"
//            },
//            successCallBack: function (jdata) {
//                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
//                    MsgAlert({content: "操作成功"});
//                    reload_("#dg2");
//                    $("#refFileNo").combobox('clear');
//                    reloadSour();
//                } else {
//                    MsgAlert({content: jdata.msg, type: 'error'});
//                }
//            }
//        });

        var title_ = $.i18n.t('关联文件列表');
//        var dataType = rowData.DATA_TYPE;
//        var dataFrom = rowData.DATA_FROM;
//        var spkid = rowData.SPKID;
        ShowWindowIframe({
            width: "784",
            height: "403",
            title: title_,
            param: {evapkid: pkid, dataType: dataType},
            url: "/views/em/emfileeval/emfileeva_reffile_list.shtml"
        });
    }


    //是否询问空客，是时上传文件
    //上传
    function upload() {
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: pkid,
                CATEGORY: "emfileevaAddEdit",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    var len = jdata.data.length;
                    if (len > 0) {
                        alert('已上传附件，重新上传请删除原附件');

                    } else {
                        common_upload_({
                            param: {
                                cat: "emfileevaAddEdit",
                                sourceId: pkid,
                                PKID: pkid,
                                successCallBack: function () {
                                    param.OWindow.reload_("#showSbBase");
                                    attachList(pkid);
                                    MsgAlert({content: "上传成功"});
                                },
                                failCallBack: ""
                            },
                        });
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    //回显附件
    function attachList(pkid) {
        //回显附件信息
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: pkid,
                CATEGORY: "emfileevaAddEdit",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            async: false,
            successCallBack: function (jdata) {
                var attachHtml1 = "";
                for (var i = 0; i < jdata.data.length; i++) {
                    attachHtml1 += '<a href="javascript:void(0);" onclick="downFileLocal(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a>&nbsp;'
                }
                document.getElementById("attachment").innerHTML = attachHtml1;
            }
        });
    }

    //删除附件
    function deleteUpload() {
        InitFuncCodeRequest_({
            data: {
                pkid: pkid,
                category: 'emfileevaAddEdit',
                FunctionCode: 'ATTACHMENT_RSPL_DEL_BY_CATEGORY'
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    attachList(pkid);
                    MsgAlert({content: "删除成功"});
                    //MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }


    function InitDataGrid1() {
        var flag = "E";
        var operation = "view";
        var identity = 'dg1';
        $("#dg1").MyDataGrid({
                fit: true,
                identity: identity,
            pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
            queryParams: {pkid: pkid},
            columns: {
                param: {
                    FunctionCode: 'EM_FILE_SOUR_FILE_LIST'
                },
                alter: {
                    DATA_NO: {
                        formatter: function (value, row, index) {
                            return '<a href="javascript:void(0);" onclick="viewDetail(\'' + row.PKID + '\',\'' + row.APPLY_TYPE + '\',\'' + row.DATA_TYPE + '\');">' + value + '</a>';
                        }
                    },
                    DATA_STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['dataStatus'] [value];
                        }
                    },
                    ATTACHMENT: {
                        formatter: function (value, row, index) {
                            if (row.ATTACHMENT) {
                                return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach">' +
                                    '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                            }
                        }
                    },
                    EFFECT_DATE: {
                        type: 'date'
                    },
                    ISSUE_DATE: {
                        type: 'date'
                    },
                }
            },
            onLoadSuccess: function () {
                InitSuspend('a.attach', {
                    'onmouseover': function (thiz, event, callback) {
                        var index = $(thiz).attr("rowindex");
                        var row = $("#dg1").datagrid('getRows')[index];
                        var pkid = row.PKID;
                        InitFuncCodeRequest_({
                            data: {
                                SOURCE_ID: pkid,
                                CATEGORY: "dmDataRecExter",
                                FunctionCode: 'ATTACHMENT_RSPL_GET'
                            }, async: false,
                            successCallBack: function (jdata) {
                                if (jdata.code === RESULT_CODE.SUCCESS_CODE) {
                                    var html = "";
                                    for (var i = 0; i < jdata.data.length; i++) {
                                        html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a></li>';
                                    }
                                    callback(html);
                                }

                            }
                        });
                    }
                }, 'ee');
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg1').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        var flag = "E";
                        openDetai(flag, 'edit', rowData);
                    }
                },
                {
                    id: "m-delete", i18nText: "删除", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg1').datagrid('getSelected');
                        if (!rowData.SPKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        if(!confirm('确认删除?')){
                            return;
                        }
                        InitFuncCodeRequest_({
                            async : false,
                            data: {evaPkid: pkid, spkid: rowData.SPKID, FunctionCode: "EM_FILE_SOUR_FILE_DEL"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    reload_("#dg1");
                                    param.OWindow.reload_();
                                    MsgAlert({content: '删除成功'});
                                } else {
                                    MsgAlert({content: '删除失败', type: 'error'});
                                }
                            }
                        });
                    }
                },
                {
                    id: "m-edit", i18nText: "设置替代关系", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg1').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        setReplace(rowData);
                    }
                },
                {
                    id: "m-edit", i18nText: "取消替代关系", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg1').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        cancelReplace(rowData);
                    }
                }
            ],
            validAuth: function (row, items) {
                if (yulan) {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                    items['设置替代关系'].enable = false;
                    items['取消替代关系'].enable = false;
                }
                if (row.DATA_TYPE != "AD" && row.DATA_TYPE != "CAD") {
                    items['设置替代关系'].enable = false;
                    items['取消替代关系'].enable = false;
                }
                if (row.SOURCE_FILE_STATUS == 'S') {
                    items['设置替代关系'].enable = false;
                }
                return items;
            }
            }
        )
    }

    function setReplace(rowData) {
        var title_ = $.i18n.t('设置替代关系');
        var dataType = rowData.DATA_TYPE;
        var dataFrom = rowData.DATA_FROM;
        var spkid = rowData.SPKID;
        ShowWindowIframe({
            width: "784",
            height: "403",
            title: title_,
            param: {dataType: dataType, dataFrom: dataFrom, evapkid: pkid, pkid: spkid},
            url: "/views/em/emfileeval/emfileeva_replace_list.shtml"
        });
    }

    function cancelReplace(rowData) {
        var spkid = rowData.SPKID;
        InitFuncCodeRequest_({
            data: {
                pkid: spkid,
                FunctionCode: "EM_FILE_REPLACE_CANCEL"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    reload_("#dg1");
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function InitDataGrid15() {
        var identity = 'dg15';
        $("#dg15").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                sortable: true,
                queryParams: {pkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SOUR_STC_LIST'
                    },
                    alter: {
                        DATA_STATUS: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dataStatus'] [value];
                            }
                        },

                        ATTACHMENT: {
                            formatter: function (value, row, index) {
                                if (row.ATTACHMENT) {
                                    return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach2">' +
                                        '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                                }
                            }
                        },
                    }
                },
                onLoadSuccess: function () {
                    InitSuspend('a.attach2', {
                        'onmouseover': function (thiz, event, callback) {
                            var index = $(thiz).attr("rowindex");
                            var row = $("#dg15").datagrid('getRows')[index];
                            var pkid = row.PKID;
                            InitFuncCodeRequest_({
                                data: {
                                    SOURCE_ID: pkid,
                                    CATEGORY: "dmDataRecExter",
                                    FunctionCode: 'ATTACHMENT_RSPL_GET'
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code === RESULT_CODE.SUCCESS_CODE) {

                                    }
                                    var html = "";
                                    for (var i = 0; i < jdata.data.length; i++) {
                                        html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a></li>';
                                    }
                                    callback(html);
                                }
                            });
                        }
                    });
                },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg15').datagrid('getSelected');
                            if (!rowData.SPKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            if(!confirm('确认删除?')){
                                return;
                            }
                            InitFuncCodeRequest_({
                                async : false,
                                data: {evaPkid: pkid, spkid: rowData.SPKID, FunctionCode: "EM_FILE_SOUR_FILE_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        reload_("#dg15");
                                        MsgAlert({content: '删除成功'});
                                    } else {
                                        MsgAlert({content: '删除失败', type: 'error'});
                                    }
                                }
                            });
                        }
                    },
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['删除'].enable = false;
                    }
                }
            }
        )
    }

    function InitDataGrid16() {
        var identity = 'dg16';
        $("#dg16").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                sortable: true,
                queryParams: {pkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SOUR_MDL_LIST'
                    },
                    alter: {
                        DATA_STATUS: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dataStatus'] [value];
                            }
                        },

                        ATTACHMENT: {
                            formatter: function (value, row, index) {
                                if (row.ATTACHMENT) {
                                    return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach3">' +
                                        '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                                }
                            }
                        },
                    }
                },
                onLoadSuccess: function () {
                    InitSuspend('a.attach3', {
                        'onmouseover': function (thiz, event, callback) {
                            var index = $(thiz).attr("rowindex");
                            var row = $("#dg16").datagrid('getRows')[index];
                            var pkid = row.PKID;
                            InitFuncCodeRequest_({
                                data: {
                                    SOURCE_ID: pkid,
                                    CATEGORY: "dmDataRecExter",
                                    FunctionCode: 'ATTACHMENT_RSPL_GET'
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code === RESULT_CODE.SUCCESS_CODE) {

                                    }
                                    var html = "";
                                    for (var i = 0; i < jdata.data.length; i++) {
                                        html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a></li>';
                                    }
                                    callback(html);
                                }
                            });
                        }
                    });
                },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg16').datagrid('getSelected');
                            if (!rowData.SPKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            if(!confirm('确认删除?')){
                                return;
                            }
                            InitFuncCodeRequest_({
                                async : false,
                                data: {evaPkid: pkid, spkid: rowData.SPKID, FunctionCode: "EM_FILE_SOUR_FILE_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        reload_("#dg16");
                                        MsgAlert({content: '删除成功'});
                                    } else {
                                        MsgAlert({content: '删除失败', type: 'error'});
                                    }
                                }
                            });
                        }
                    },
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['删除'].enable = false;
                    }
                }
            }
        )
    }

    /**主页面信息————评估概述
     * */
    function InitDataGrid3() {
        var eva = $("#evaResult").combobox('getValue');
        var dis = $("#disabledSourceFile").combobox('getValue');
        var again = $("#ifAgainEva").combobox('getValue');
        var feed = $("#ifFeedbackFactory").combobox('getValue');
        if (eva == "BSY") {
            $("#notapp").show();
            $("#notapp1").show();
            $("#result2").show();
            $("#disabledSourceFile").combobox({required: true});
        } else if (eva == "SY") {
            $("#disabledSourceFile").combobox({required: false});
            $("#disabledReason").textbox({required: false});
//            dis = 'N';
            $("#notapp").hide();
            $("#notapp1").hide();
            $("#result2").hide();

//            $('#disabledSourceFile').combobox('setValue', 'N');
            $('#disabledReason').textbox('setValue', '');
        }
        if (eva == "ZHL") {
            $("#notapp").html("知会类说明：");
        } else {
            $("#notapp").html("不适用原因：");
        }
        $('#disabledSourceFile').combobox('setValue', dis);
        disChange(dis);
        againChange(again);
        feedChange(feed);
        var $form = $("#mform2");
        $form.form({
            onSubmit: function () {
                var ifagain = $("#ifAgainEva").combobox('getValue');
                if (ifagain == 'Y') {
                    var againEvaDate = $("#againEvaDate").datebox("getValue");
                    var againEvaInterval = $("#againEvaInterval").textbox("getValue");
                    if (againEvaDate == "" && againEvaInterval == "") {
                        MsgAlert({content: "重评时间和间隔不允许都为空！", type: 'error'});
                        return;
                    }
                    if (againEvaDate != "" && againEvaInterval != "") {
                        MsgAlert({content: "重评时间和间隔只能二选一！", type: 'error'});
                        return;
                    }
                    var now = new Date();
                    var year = now.getFullYear(); //得到年份
                    var month = now.getMonth();//得到月份
                    var date = now.getDate();//得到日期
                    month = month + 1;
                    if (month < 10) {
                        month = "0" + month
                    }
                    if (date < 10) {
                        date = "0" + date
                    }
                    var curDate = year + "-" + month + "-" + date;
                    if (againEvaDate != "") {
                        if (againEvaDate < curDate) {
                            MsgAlert({content: "重评日期不能小于当前日期！", type: 'error'});
                            $("#againEvaDate").datebox("setValue", "");
                            return;
                        }
                    }
                    var r = /^\+?[1-9][0-9]*$/;　　//正整数
                    var flag = r.test(againEvaInterval);
                    if (againEvaInterval != "") {
                        if (!flag) {
                            MsgAlert({content: "重评间隔只能是正整数！", type: 'error'});
                            $("#againEvaInterval").textbox("setValue", "");
                            return;
                        }
                    }
                }

                var data = $form.serializeObject();
                data = $.extend({pkid: pkid}, data, {FunctionCode: 'EM_FILE_EVALUATE_PGGS'});
                InitFuncCodeRequest_({
                    data: data,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: '操作成功'});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
                return false;
            }
        });
    }

    function feedChange(dealOption) {
        if (dealOption == "Y") {
            $("#feedbackEmail").textbox({editable: true, required: true});
            $("#dis6").show();
            $("#dis7").show();
        } else {
            $("#feedbackEmail").textbox({editable: true, required: false});
            $("#dis6").hide();
            $("#dis7").hide();
        }
    }

    function InitDataGrid4() {
        var identity = 'dg4';
        $("#dg4").MyDataGrid({
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            enableLineEdit: false,
            sortable: true,
            resize: function () {
                return {width: 380, height: 248};
            },
            queryParams: {evapkid: pkid},
            columns: {
                param: {
                    FunctionCode: 'EM_FILE_GROUP_LIST'
                },
                alter: {
                    RANGE_TYPE: {
                        formatter: function (value) {
                            return PAGE_DATA['rangeType'][value];
                        }
                    },
                    RANGE_VALUE: {
                        formatter: function (value) {
                            if (value) {
                                if (value.length > 500) {
                                    return newLine(value.substring(0, 820) + "........", 100);
                                } else {
                                    return newLine(value, 100);
                                }
                            }
                        }
                    },
                    RANGE_VALUE1: {
                        formatter: function (value) {
                            if (value) {
                                return newLine(value, 100);
                            }
                        }
                    }
                }
            },
            contextMenus: [
                {
                    id: "m-edit",
                    i18nText: "编辑",
                    auth: "",
                    onclick: function () {
                        var rowData = getDG('dg4').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        groupEdit('edit', rowData.PKID);
                    }
                },
                {
                    id: "", text: "删除", auth: "",
                    onclick: function () {
                        $.messager.confirm('', '此操作将会删除所有适用性及被引用的适用性，请确认？', function (r) {
                            if (r) {
                                var rowData = $('#dg4').datagrid('getSelected');
                                var refPkid = rowData.PKID;
                                var applyType = $("#applyType").textbox('getValue');
                                InitFuncCodeRequest_({
                                    data: {
                                        evapkid: pkid,
                                        exeFlag: exeFlag,
                                        grouppkid: refPkid,
                                        FunctionCode: "EM_FILE_GROUP_DEL"
                                    },
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            MsgAlert({content: '操作成功'});
                                            reload_("#dg4");
                                            if(applyType != 'PART'){
                                                reload_("#dg5");
                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg, type: 'error'});
                                        }
                                    }
                                })
                            }
                        });
                    }
                }
            ],
            validAuth: function (row, items) {
                if (yulan) {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                return items;
            },
            onClickRow: function (rowIndex, rowData) {
                if (rowData.PKID) {
                    groupPkid = rowData.PKID;
                    rangeType = rowData.RANGE_TYPE;
                    InitDataGridRef5(groupPkid, rangeType);
                    $("#con").show();
                }
            }
        });
    }

    function InitDataGridRef5(groupId, rangeType) {
        var func = "";
        var applyType = $("#applyType").textbox('getValue');
        if (applyType == "APL") {
            func = "EM_FILE_GROUP_ACNO_REF";
        } else if (applyType == "ENG") {
            func = "EM_FILE_GROUP_ACNO_ENG_REF";
        } else if (applyType == "PART") {
            if (rangeType == 'PN') {
                func = "EM_FILE_GROUP_ACNO_PN";
            } else {
                func = "EM_FILE_GROUP_ACNO_PART_REF";
            }
        }
        var identity = 'dg5';
        $("#dg5").MyDataGrid({
//                fit: true,
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            enableLineEdit: false,
            sortable: true,
            queryParams: {evapkid: pkid, groupId: groupId},
            columns: {
                param: {
                    FunctionCode: func
                },
                alter: {
                    HIGH_LIFE_STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['yesorno'] [value];
                        },
                        STATUS: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['acStatus'] [value];
                            }
                        }
                    }
                }
            },
            resize: function() {
                return {width: 428, height: 250}
            }
        });
    }

    function InitDataGrid5() {
        var func = "";
        var applyType = $("#applyType").textbox('getValue');
        if (applyType == "APL") {
            func = "EM_FILE_GROUP_ACNO_LIST";
        } else if (applyType == "ENG") {
            func = "EM_FILE_GROUP_ACNO_ENG_LIST";
        } else if (applyType == "PART") {
            func = "EM_FILE_GROUP_ACNO_PART_LIST";
        }
        var identity = 'dg5';
        $("#dg5").MyDataGrid({
//                fit: true,
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            enableLineEdit: false,
            sortable: true,
            queryParams: {evapkid: pkid},
            columns: {
                param: {
                    FunctionCode: func
                },
                alter: {
                    HIGH_LIFE_STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['yesorno'] [value];
                        }
                    },
                    STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['acStatus'] [value];
                        }
                    }
                }
            },
            resize: function () {
                return {width: 428, height: 250}
            }
        });
    }

    function InitDataGrid17() {
        var func = "";
        var applyType = $("#applyType").textbox('getValue');
        if (applyType == "APL") {
            func = "EM_FILE_GROUP_ACNO_BSY";
        }
        var applyModel = $("#applyModel").textbox('getValue');
        var identity = 'dg17';
        $("#dg17").MyDataGrid({
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            enableLineEdit: false,
            sortable: true,
            queryParams: {fleet: applyModel, evapkid: pkid},
            columns: {
                param: {
                    FunctionCode: func
                },
                alter: {
                    HIGH_LIFE_STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['yesorno'] [value];
                        }
                    },
                    STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['acStatus'] [value];
                        }
                    }
                }
            },
            resize: function () {
                return {width: 428, height: 250}
            },
            onLoadSuccess: function () {
            },
            contextMenus: [],
            validAuth: function (row, items) {
            }
        });
    }


    function InitDataGrid6() {
        var identity = 'dg6';
        $("#dg6").MyDataGrid({
                fit: true,
                identity: identity,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {pkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_LIST'
                    },
                    alter: {
                        EVA_RESULT: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['segevaResult'] [value];
                            }
                        },
                    }
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg6').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            editSeg('edit', rowData.PKID);

                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg6').datagrid('getSelected');
                            var refPkid = rowData.PKID;

                            var curCou = 0;
                            InitFuncCodeRequest_({
                                data: {segId: refPkid, FunctionCode: 'EM_FILE_CHECK_SF_SEG'},
                                async: false,
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        if (jdata.data != null) {
                                            curCou = jdata.data.COU;
                                        }
                                    } else {
                                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                    }
                                }
                            });
                            if (curCou > 0) {
                                MsgAlert({
                                    content: "请先删除顺丰执行文件！",
                                    type: 'error'
                                });
                                return;
                            }

                            $.messager.confirm('', '是否确认删除？', function (r) {
                                if (r) {
                                    InitFuncCodeRequest_({
                                        data: {segpkid: refPkid, FunctionCode: "EM_FILE_SEG_DEL"},
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                MsgAlert({content: '操作成功'});
                                                reload_("#dg6");
                                            } else {
                                                MsgAlert({content: jdata.msg, type: 'error'});
                                            }
                                        }
                                    })
                                }
                            });
                        }
                    }
                ],
            onDblClickRow: function (index, field, value) {
                editSeg("view", value.PKID);
            },
                validAuth: function (row, items) {
                    if (yulan) {
                        items['编辑'].enable = false;
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }


    /**主页面信息————索赔
     * */
    function InitDataGridSP() {
        var $form = $("#mform4");
        $form.form({
            onSubmit: function () {
                var data = $form.serializeObject();
                data = $.extend({pkid: pkid}, data, {FunctionCode: 'EM_FILE_EVALUATE_SP'});
                InitFuncCodeRequest_({
                    data: data,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: '操作成功'});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
                return false;
            }
        });
    }


    //索赔 增加适用对象
    function InitDataGrid8() {
        var func = "";
        var applyType = $("#applyType").textbox('getValue');
        if (applyType == "APL") {
            func = "EM_FILE_EVAL_CLAIM_OBJ_LIST";
        } else if (applyType == "ENG") {
            func = "EM_FILE_EVAL_CLAIM_ENG_LIST";
        } else if (applyType == "PART") {
            func = "EM_FILE_EVAL_CLAIM_PART_LIST";
        }
        var identity = 'dg8';
        $("#dg8").MyDataGrid({
                fit: true,
                identity: identity,
                singleSelect: true,
                allowPaging: true,
                sortable: true,
                pagination: false,//去掉分页
                queryParams: {evapkid: pkid},
                columns: {
                    param: {
                        FunctionCode: func
                    },
                    alter: {}
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg8').datagrid('getSelected');
                            var refPkid = rowData.PKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, FunctionCode: "EM_FILE_EVAL_CLAIM_OBJ_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg8");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }


    //索赔 增加航材包
    function InitDataGrid9() {
        var identity = 'dg9';
        $("#dg9").MyDataGrid({
            fit: true,
            identity: identity,
            singleSelect: true,
            allowPaging: true,
            pagination: false,//去掉分页
            sortable: true,
            queryParams: {evapkid: pkid},
            columns: {
                param: {
                    FunctionCode: 'EM_FILE_EVAL_CLAIM_MATERIA_LIST'
                },
                alter: {
                    CLAIM_SITUATION: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['claimSituation'] [value];
                        }
                    }
                }
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg9').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        addClaimMateria('edit', rowData.PKID);

                    }
                },
                {
                    id: "", text: "删除", auth: "",
                    onclick: function () {
                        var rowData = $('#dg9').datagrid('getSelected');
                        var refPkid = rowData.PKID;
                        if (!confirm("是否确认删除？")) {
                            return;
                        }
                        InitFuncCodeRequest_({
                            data: {pkid: refPkid, FunctionCode: "EM_FILE_EVAL_CLAIM_MATERIA_DEL"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: '操作成功'});
                                    reload_("#dg9");
                                } else {
                                    MsgAlert({content: jdata.msg, type: 'error'});
                                }
                            }
                        })
                    }
                }
            ],
            validAuth: function (row, items) {
                if (yulan) {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                return items;
            }
        });
    }

    //索赔 增加航材包
    function InitDataGrid10() {
        var identity = 'dg10';
        $("#dg10").MyDataGrid({
                fit: true,
                identity: identity,
                singleSelect: true,
                allowPaging: true,
                pagination: false,//去掉分页
                sortable: true,
                queryParams: {evapkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_EVAL_CLAIM_MANH_LIST'
                    },
                    alter: {
                        CLAIM_SITUATION: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['claimSituation'] [value];
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg10').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            addClaimManh('edit', rowData.PKID);

                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg10').datagrid('getSelected');
                            var refPkid = rowData.PKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, FunctionCode: "EM_FILE_EVAL_CLAIM_MANH_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg10");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['编辑'].enable = false;
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }

    //增加经济性评估
    function InitDataGrid11(pkid) {
        var func = "";
        var applyType = $("#applyType").textbox('getValue');
        if (applyType == "APL") {
            func = "EM_FILE_ECON_LIST";
        } else if (applyType == "ENG") {
            func = "EM_FILE_ECON_ENG_LIST";
        } else if (applyType == "PART") {
            func = "EM_FILE_ECON_PART_LIST";
        }
        var identity = 'dg11';
        $("#dg11").MyDataGrid({
            fit: true,
            identity: identity,
            pagination: false,
            singleSelect: true,
            allowPaging: true,
            enableLineEdit: false,
            sortable: true,
            queryParams: {evapkid: pkid},
            columns: {
                param: {
                    FunctionCode: func
                },
                alter: {}
            },
            onLoadSuccess: function (data) {
                var total = 0;
                if (data) {
                    $.each(data.rows, function (index, item) {
                        total += parseFloat(item.TOTAL);
                    });
                }
                $('#dg11').datagrid('appendRow', {
                    GROUP_NAME: "总计",
                    TOTAL: total
                });
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑", auth: "",
                    onclick: function () {
                        var rowData = getDG('dg11').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        editEcon('edit', rowData.PKID);

                    }
                },
                {
                    id: "", text: "删除", auth: "",
                    onclick: function () {
                        var rowData = $('#dg11').datagrid('getSelected');
                        var refPkid = rowData.PKID;
                        if (!confirm("是否确认删除？")) {
                            return;
                        }
                        InitFuncCodeRequest_({
                            data: {pkid: refPkid, FunctionCode: "EM_FILE_ECON_DEL"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: '操作成功'});
                                    reload_("#dg11");
                                } else {
                                    MsgAlert({content: jdata.msg, type: 'error'});
                                }
                            }
                        })
                    }
                }
            ],
            validAuth: function (row, items) {
                if (yulan || row.GROUP_NAME == "总计") {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                return items;
            }
        });
    }

    //延期申请
    function InitDataGrid12() {
        var identity = 'dg12';
        $("#dg12").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {recordId: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_DELAY_LIST'
                    },
                    alter: {
                        STATUS: {
                            formatter: function (value) {
                                return PAGE_DATA['delayStatus'] [value];
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg12').datagrid('getSelected');
                            var pkid = rowData.PKID;
                            var execid = validWorkFlow("EM_FILE_EVAL_DELAY", pkid);
                            if (execid != null && execid != "") {
                                MsgAlert({content: '已经存在流程，不允许操作！', type: 'warn'});
                                return false;
                            }
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            editDeloy('edit', rowData.PKID);

                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg12').datagrid('getSelected');
                            var pkid = rowData.PKID;
                            var execid = validWorkFlow("EM_FILE_EVAL_DELAY", pkid);
                            if (execid != null && execid != "") {
                                MsgAlert({content: '已经存在流程，不允许操作！', type: 'warn'});
                                return false;
                            }
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: pkid, FunctionCode: "EM_FILE_DELAY_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg12");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    var sta = row.STATUS;
                    if (yulan || sta != "DCL") {
                        items['编辑'].enable = false;
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }

    function InitDataGrid13() {
        var identity = 'dg13';
        $("#dg13").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {evapkid: pkid},
                resize: function () {
                    return {width: 380, height: 248};
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_AGAIN_PN_LIST'
                    },
                    alter: {}
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg13').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            editExpa('edit', rowData.PKID);

                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg13').datagrid('getSelected');
                            var refPkid = rowData.PKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, FunctionCode: "EM_FILE_AGAIN_PN_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg13");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['编辑'].enable = false;
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }

    //查询必要性--MTBUR
    function InitDataGrid14() {
        var identity = 'dg14';
        $("#dg14").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: false,
                sortable: true,
                queryParams: {evapkid: pkid},
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_MTBUR_LIST'
                    },
                    alter: {}
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg14').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            editMtbur('edit', rowData.PKID);

                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg14').datagrid('getSelected');
                            var refPkid = rowData.PKID;
                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {pkid: refPkid, FunctionCode: "EM_FILE_MTBUR_DEL"},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg14");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (yulan) {
                        items['编辑'].enable = false;
                        items['删除'].enable = false;
                    }
                    return items;
                }
            }
        )
    }

    function randomNumber() {
        var num = 1;
        var todayDate = new Date();
        var year = todayDate.getFullYear();
        var serialNo = "EE-" + year;
        InitFuncCodeRequest_({
            data: {serialNo: serialNo, FunctionCode: "TD_EVALUATE_BY_NO"},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        if (jdata.data.OLDNUM) {
                            num = parseInt(jdata.data.OLDNUM, 10) + 1;
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });

        num = pad(num, 4);
        serialNo = serialNo + num;
        return serialNo;
    }

    var pad = function () {
        var tbl = [];
        return function (num, n) {
            var len = n - num.toString().length;
            if (len <= 0) return num;
            if (!tbl[len]) tbl[len] = (new Array(len + 1)).join('0');
            return tbl[len] + num;
        }
    }();

    function curDate() {
        var todayDate = new Date();
        var year = todayDate.getFullYear();
        var date = todayDate.getDate();
        var month = todayDate.getMonth() + 1;
        if (date.toString().length < 2) {
            date = "0" + date;
        }
        if (month.toString().length < 2) {
            month = "0" + month;
        }
        var cur = year + "-" + month + "-" + date;
        return cur;
    }

    function evaChange(dealOption) {
        if (dealOption == "ZHL") {
            $("#notapp").html("知会类说明：");
        } else {
            $("#notapp").html("不适用原因：");
        }
        var couSeg = 0;
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG_COU'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        couSeg = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (dealOption == "BSY" || dealOption == "ZHL") {
            $("#notapp").show();
            $("#notapp1").show();
            $("#result2").show();
            $("#disabledSourceFile").combobox({required: true});
            $("#disabledReason").textbox({required: true});
            if (exeFlag == "OTHERS") {
                $.messager.confirm('', '将会删除分段及以下所有内容，请确认？', function (r) {
                    if (r) {
                        InitFuncCodeRequest_({
                            async: false,
                            data: {FunctionCode: 'EM_FILE_DEL_S', evapkid: pkid},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    spkid = "";
                                    tpkid = "";
                                }
                            }
                        });
                    } else {
                        $("#evaResult").combobox("setValue", "SY");
                        $("#notapp").hide();
                        $("#notapp1").hide();
                        $("#result2").hide();
                        $("#disabledSourceFile").combobox({required: false});
                    }
                });
            } else {
                if (couSeg != 0) {
                    $("#evaResult").combobox("setValue", "SY");
                    MsgAlert({content: "已经有分段，请先删除分段。", type: 'error'});
                    $('#notAppReason').textbox('setValue', '');
                    $('#disabledSourceFile').combobox('setValue', '');
                    $('#disabledReason').textbox('setValue', '');
                    $("#notapp").hide();
                    $("#notapp1").hide();
                    $("#result2").hide();
                    $("#disabledSourceFile").combobox({required: false});
                } else {
                    $.messager.confirm('', '将会删除经济性评估/索赔/必要性以下所有内容，请确认？', function (r) {
                        if (r) {
                            InitFuncCodeRequest_({
                                async: false,
                                data: {FunctionCode: 'EM_FILE_DEL_ALL', evapkid: pkid},
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        $("#ifEcon").combobox("setValue", "N");
                                        updateEcon('N');
                                        $("#ifNecessity").combobox("setValue", "N");
                                        neceChange('N');
                                        claimChange('N');
                                        $("#ifAgainEva").combobox("setValue", "N");
                                        againChange('N');
                                    }
                                }
                            });
                        } else {
                            $("#evaResult").combobox("setValue", "SY");
                            $("#notapp").hide();
                            $("#notapp1").hide();
                            $("#result2").hide();
                            $("#disabledSourceFile").combobox({required: false});
                        }
                    });
                }
            }

        } else {
            $("#disabledReason").textbox({required: false});
            $("#disabledSourceFile").combobox({required: false});
            $('#notAppReason').textbox('setValue', '');
//            $('#disabledSourceFile').combobox('setValue', 'N');
            $('#disabledReason').textbox('setValue', '');
            $("#notapp").hide();
            $("#notapp1").hide();
            $("#result2").hide();
        }
        $('#disabledSourceFile').combobox('setValue', '');
    }

    function disChange(dealOption) {
        if (dealOption == "Y") {
            $("#dis2").show();
            $("#disabledReason").textbox({required: true});
        } else {
            $('#disabledReason').textbox('setValue', '');
            $("#dis2").hide();
            $("#disabledReason").textbox({required: false});
        }
    }

    function claimChange(dealOption) {
        $('#claimDesc').textbox({'required': dealOption == "Y"});
        if (dealOption == "Y") {
            InitDataGridSP();
            InitDataGrid8();
            InitDataGrid9();
            InitDataGrid10();
            $("#claim1").show();
            $("#claim2").show();
            $("#claim3").show();
            $("#claim4").show();
            $("#claim5").show();
            $("#claim6").show();
        } else {/*
            $.messager.confirm('', '将会清空索赔的内容，请确认？', function (r) {
                if (r) {
                    $("#claim1").hide();
                    $("#claim2").hide();
                    $("#claim3").hide();
                    $("#claim4").hide();
                    $("#claim5").hide();
                    $("#claim6").hide();
                    var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_CLAIM'});
                    InitFuncCodeRequest_({
                        data: datas, successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                $("#ifClaim").combobox('setValue', 'N');
                                $("#roaDeadline").datebox('setValue', '');
                                $("#claimDeadline").datebox('setValue', '');
//                                MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });
                } else {
                    $("#ifEcon").combobox("setValue", "Y");
                }
            });*/

            $("#claim1").hide();
            $("#claim2").hide();
            $("#claim3").hide();
            $("#claim4").hide();
            $("#claim5").hide();
            $("#claim6").hide();
            var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_CLAIM'});
            InitFuncCodeRequest_({
                data: datas, successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        $("#ifClaim").combobox('setValue', 'N');
                        $("#roaDeadline").datebox('setValue', '');
                        $("#claimDeadline").datebox('setValue', '');
//                                MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function againChange(dealOption) {
        if (dealOption == "Y") {
            $("#againEvaReason").textbox({editable: true, required: true});
            $("#again1").show();
            $("#again2").show();
            $("#again3").show();
            $("#again4").show();
            $("#again5").show();
        } else {
            $("#againEvaReason").textbox({required: false});

            $('#againEvaDate').textbox('setValue', '');
            $('#againEvaInterval').textbox('setValue', '');
            $('#againEvaReason').textbox('setValue', '');
            $("#again1").hide();
            $("#again2").hide();
            $("#again3").hide();
            $("#again4").hide();
            $("#again5").hide();
        }
    }

    function analyChange(dealOption) {
        if (dealOption == "Y") {
            $("#analy1").show();
            $("#analy3").hide();
            $("#analy4").hide();
            $("#analy5").hide();
        } else {
            $("#analy1").hide();
            $("#analy3").show();
            $("#analy4").show();
            $("#analy5").show();
        }
    }

    function jingjiChange(dealOption) {
        if (pkid) {
            InitDataGrid11(pkid);
        } else {
            InitDataGrid11("");
        }
        if (dealOption == "Y") {
            $("#pg").show();
            $("#kekao").show();
            $("#applist1").show();
            $("#noneed").hide();
            $("#noneed1").hide();
            $("#uploadecon").hide();
        } else {
            $("#pg").hide();
            $("#kekao").hide();
            $("#applist1").hide();
            $("#noneed").show();
            $("#noneed1").show();
            $("#uploadecon").show();
        }
        $('#needlessEcon').textbox({
            editable: true,
            required: dealOption != "Y"
        });
    }

    function updateEcon(dealOption) {
        if (dealOption == "Y") {
            $("#ifNoticeReliability").textbox({required: true});
            $("#smPro").combobox({required: true});
            jingjiChange(dealOption);
            reload_("#dg11");
            $("#kekaomemo").show();
        } else {
            $.messager.confirm('', '将会清空经济性评估的内容，请确认？', function (r) {
                if (r) {
                    $("#kekaomemo").hide();
                    $("#adevano").textbox('setValue', '');
                    $("#ifNoticeReliability").textbox({required: false});
                    $("#smPro").combobox({required: false});
                    var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_ECON'});
                    InitFuncCodeRequest_({
                        data: datas,
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
//                                MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                reload_("#dg11");
                                $("#ifNoticeReliability").textbox('setValue', '');
                                $("#smPro").combobox('setValue', '');
                                jingjiChange(dealOption);
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });

                    var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_ECON_C'});
                    InitFuncCodeRequest_({
                        data: datas, async: false,
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });
                } else {
                    $("#ifEcon").combobox("setValue", "Y");
                    $("#kekaomemo").show();
                }
            });
        }
    }

    function neceChange(dealOption) {
        $('#needlessNecessity').textbox({'required': dealOption == "N"});
        if (dealOption == "Y") {
            $('#needlessNecessity').textbox('setValue', '');
            $("#nece").show();
            $("#nece1").show();
            $("#neneed").hide();
            $("#neneed1").hide();
            $("#uploadnece").hide();

            InitDataGrid14();
        } else {/*
            $.messager.confirm('', '将会清空必要性评估的内容，请确认？', function (r) {
                if (r) {
                    $("#nece").hide();
                    $("#nece1").hide();
                    $("#neneed").show();
                    $("#neneed1").show();
                    $("#uploadnece").show();
                    var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_NECE'});
                    InitFuncCodeRequest_({
                        data: datas, successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
//                                MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                reload_("#dg14");
                                $("#ifSdr").textbox('setValue', '');
                                $("#ifEffectDisch").textbox('setValue', '');
                                $("#ifEffectFlight").textbox('setValue', '');
                                $("#ifEffectOther").textbox('setValue', '');
                                $("#ifFlameout").textbox('setValue', '');
                                $("#abnormanRate").textbox('setValue', '');
                                $("#faultRate").textbox('setValue', '');
                                $("#involveSdr").textbox('setValue', '');
                                $("#effectDisch").textbox('setValue', '');
                                $("#effectFlight").textbox('setValue', '');
                                $("#effectOther").textbox('setValue', '');
                                $("#flameout").textbox('setValue', '');
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });
                } else {
                    $("#ifNecessity").combobox("setValue", "Y");
                }
            });*/

            $("#nece").hide();
            $("#nece1").hide();
            $("#neneed").show();
            $("#neneed1").show();
            $("#uploadnece").show();
            var datas = $.extend({evaId: pkid}, {FunctionCode: 'EM_FILE_EVALUATE_CLEAR_NECE'});
            InitFuncCodeRequest_({
                data: datas, successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg14");
                        $("#ifSdr").textbox('setValue', '');
                        $("#ifEffectDisch").textbox('setValue', '');
                        $("#ifEffectFlight").textbox('setValue', '');
                        $("#ifEffectOther").textbox('setValue', '');
                        $("#ifFlameout").textbox('setValue', '');
                        $("#abnormanRate").textbox('setValue', '');
                        $("#faultRate").textbox('setValue', '');
                        $("#involveSdr").textbox('setValue', '');
                        $("#effectDisch").textbox('setValue', '');
                        $("#effectFlight").textbox('setValue', '');
                        $("#effectOther").textbox('setValue', '');
                        $("#flameout").textbox('setValue', '');
                        $("#involveSdr").textbox({required: false});
                        $("#effectDisch").textbox({required: false});
                        $("#effectFlight").textbox({required: false});
                        $("#effectOther").textbox({required: false});
                        $("#flameout").textbox({required: false});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }

    }

    function sdrChange(dealOption) {
        if (dealOption == "Y") {
            $("#involveSdr").textbox({
                required: true
            });
        } else {
            $("#involveSdr").textbox({
                required: false
            });
            $("#involveSdr").textbox('setValue', '');
            InitFuncCodeRequest_({
                data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CLEAR_SDR'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function effectChange(dealOption) {
        if (dealOption == "Y") {
            $("#effectDisch").textbox({
                required: true
            });
        } else {
            $("#effectDisch").textbox({
                required: false
            });
            $("#effectDisch").textbox('setValue', '');
            InitFuncCodeRequest_({
                data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CLEAR_EFFECT'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function flightChange(dealOption) {
        if (dealOption == "Y") {
            $("#effectFlight").textbox({
                required: true
            });
        } else {
            $("#effectFlight").textbox({
                required: false
            });
            $("#effectFlight").textbox('setValue', '');
            InitFuncCodeRequest_({
                data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CLEAR_FLIGHT'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function otherChange(dealOption) {
        if (dealOption == "Y") {
            $("#effectOther").textbox({
                required: true
            });
        } else {
            $("#effectOther").textbox({
                required: false
            });
            $("#effectOther").textbox('setValue', '');
            InitFuncCodeRequest_({
                data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CLEAR_OTHER'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function flameChange(dealOption) {
        if (dealOption == "Y") {
            $("#flameout").textbox({
                required: true
            });
        } else {
            $("#flameout").textbox({
                required: false
            });
            $("#flameout").textbox('setValue', '');
            InitFuncCodeRequest_({
                data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CLEAR_FLAME'},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
    }

    function ewisChange(dealOption) {
      if(dType.indexOf("MOD") != -1){
          if (dealOption == "N") {
              $("#reasonEwis").textbox({
                  required: true
              });
          } else {
              $("#reasonEwis").textbox({
                  required: false
              });
              $("#reasonEwis").textbox('setValue','');
          }
      }
    }

    function copyAppl() {
        var refCou = 1;
        InitFuncCodeRequest_({
            data: {evapkid: pkid, FunctionCode: 'EM_FILE_CHECK_GROUP'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        refCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        if (refCou == 0) {
            var groupType = $("#applyType").textbox('getValue');
            var applyModel = $("#applyModel").textbox('getValue');
            ShowWindowIframe({
                width: "850",
                height: "500",
                param: {evapkid: pkid, applyType: groupType, applyModel: applyModel, exeFlag: exeFlag},
                url: "/views/em/emfileeval/emfileeva_issue_list.shtml"
            });
        } else {
            MsgAlert({content: "在没有分组的情况下才允许复制！", type: 'error'});

        }
    }

    function addGroup() {
        var groupType = $("#applyType").textbox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var url = "/views/em/emfileeval/emfileeva_add_group.shtml";
        if (groupType == 'PART') {
            url = "/views/em/emfileeval/emfileeva_add_group_cm.shtml";
        }
        ShowWindowIframe({
            url: url,
            param: {
                evapkid: pkid,
                applType: groupType,
                exeFlag: exeFlag,
                applyModel: applyModel
            },
            width: "650",
            height: "500"
        });
    }

    function chooseSbApp() {
        var curCou = 0;
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GROUP_COU'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        curCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (curCou != 0) {
            MsgAlert({content: "已经存在分组不允许提取，请先删除已有分组！", type: 'error'});
            return;
        }
        var applyModel = $("#applyModel").textbox('getValue');
        var dataType = $("#dataType").textbox('getValue');
        var url = "/views/em/emfileeval/emfileeva_sb_app_list.shtml";
        ShowWindowIframe({
            url: url,
            param: {
                evapkid: pkid, applyModel: applyModel,dataType:dataType
            },
            width: "650",
            height: "500"
        });
    }

    function setAgaEva() {
        var title_ = $.i18n.t('部件引进条件维护');
        ShowWindowIframe({
            url: "/views/em/emfileeval/applic/addPnApplic.shtml",
            param: {
                evapkid: pkid,
                title: title_
            },
            width: "538",
            height: "279"
        });
    }

    function groupEdit(operation, groupid) {
        var groupType = $("#applyType").textbox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var url = "/views/em/emfileeval/emfileeva_add_group.shtml";
        if (groupType == 'PART') {
            url = "/views/em/emfileeval/emfileeva_add_group_cm.shtml";
        }
        ShowWindowIframe({
            width: "650",
            height: "500",
            param: {
                evapkid: pkid,
                applType: groupType,
                pkid: groupid,
                applyModel: applyModel,
                exeFlag: exeFlag
            },
            url: url
        });
    }

    function addSeg() {
        var evaResult = "";
        InitFuncCodeRequest_({
            data: {evapkid: pkid, FunctionCode: 'EM_FILE_GET_RESULT'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        evaResult = jdata.data.EVA_RESULT;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (evaResult == 'SY' || dType.indexOf("MOD") != -1) {
            var groupType = $("#applyType").textbox('getValue');
            var applyModel = $("#applyModel").textbox('getValue');
            var ata = $("#evaAta").textbox('getValue');
            var title_ = $.i18n.t('分段新增页面');

            //自动新增默认分段
            var segpkid = "";
            var segSn = '1';
            InitFuncCodeRequest_({
                data: {evapkid: pkid, FunctionCode: "EM_FILE_MAX_SEGNO"},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            segSn = parseInt(jdata.data.SEGNO) + 1;
                        }
                    } else {
                        MsgAlert({content: jdata.msg, type: 'error'});
                    }
                }
            });

            InitFuncCodeRequest_({
                data: {evapkid: pkid,segSn:segSn, FunctionCode: "EM_FILE_ADD_SEG_AUTO"},
                async: false,
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        if (jdata.data != null) {
                            segpkid = jdata.data.pkid;
                        }
                    } else {
                        MsgAlert({content: jdata.msg, type: 'error'});
                    }
                }
            });


            ShowWindowIframe({
                width: "900",
                height: "600",
                title: title_,
                param: {
                    operation: "add",
                    evapkid: pkid,
                    evaNo: $('#evaNo').textbox('getValue'),
                    applyType: groupType,
                    applyModel: applyModel,
                    ata: ata,
                    dataType: dataType,
                    exeFlag: exeFlag,
                    ifAsms:ifAsms,
                    segpkid:segpkid,
                    evaTitle:evaTitle
                },
                url: "/views/em/emfileeval/emfileeva_add_seg.shtml"
            });
        } else {
            if (evaResult == "BSY") {
                MsgAlert({content: "评估单评估结论为不适用，不允许增加分段！", type: 'error'});
            } else {
                MsgAlert({content: "评估单评估结论为空，不允许增加分段！", type: 'error'});
            }
        }
    }

    function editSeg(operation, segpkid) {
        var groupType = $("#applyType").textbox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var ata = $("#evaAta").textbox('getValue');
        var title_ = $.i18n.t('分段编辑页面');
        ShowWindowIframe({
            width: "900",
            height: "600",
            title: title_,
            param: {
                operation: operation,
                segpkid: segpkid,
                evapkid: pkid,
                evaNo: $('#evaNo').textbox('getValue'),
                applyType: groupType,
                applyModel: applyModel, ata: ata,
                dataType: dataType,
                exeFlag: exeFlag,
                ifAsms:ifAsms,
                evaTitle:evaTitle
            },
            url: "/views/em/emfileeval/emfileeva_add_seg.shtml"
        });
    }


    function assignConfig() {
        var config = $("#config").textbox('getValue');
        var pkids = "";
        var rows = $('#dg5').datagrid('getChecked');
        if (rows.length == 0) {
            MsgAlert({content: "请先选择明细数据！", type: 'error'});
            return;
        }
        if (config == "") {
            MsgAlert({content: "请先选择config！", type: 'error'});
            return;
        }
        //判断是否持续适航评估1、是
        var isExitEvalAirworthiness = isExitEvaluateAirworthiness();
        if(isExitEvalAirworthiness === "Y"){
            if (!confirm("所有被引用适用性分组的地方同步修改,改装类文件持续适航评估适用性会被清空？")) {
                return;
            }
        }else{
            if (!confirm("所有被引用适用性分组的地方同步修改？")) {
                return;
            }
        }
        for (i = 0; i < rows.length; i++) {
            rows[i] = toCamelCase(rows[i]);
            pkids = pkids + "," + rows[i].pkid;
        }
        pkids = pkids.substring(1, pkids.length);
        var detailData = JSON.stringify(rows);
        if (config == "NULL") {
            config = "";
        }
        InitFuncCodeRequest_({
            data: {
                evapkid: pkid,
                config: config,
                pkids: pkids,
                detailData: detailData,
                FunctionCode: "EM_FILE_EVAL_GROUP_ASSIGNCONFIG"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    InitDataGrid5();
                    InitDataGrid17();
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function addEcon() {
        var applyType = $("#applyType").textbox('getValue');
        var title_ = $.i18n.t('增加经济性评估');
        ShowWindowIframe({
            width: "600",
            height: "320",
            title: title_,
            param: {evapkid: pkid,applyType:applyType},
            url: "/views/em/emfileeval/emfileeva_add_econ.shtml"
        });
    }

    function editEcon(operation, econpkid) {
        var applyType = $("#applyType").textbox('getValue');
        var title_ = $.i18n.t('经济性评估适用列表编辑页面');
        ShowWindowIframe({
            width: "600",
            height: "320",
            title: title_,
            param: {operation: operation, pkid: econpkid, evapkid: pkid,applyType:applyType},
            url: "/views/em/emfileeval/emfileeva_add_econ.shtml"
        });
    }

    function editExpa(operation, exppkid) {
        var title_ = $.i18n.t('部件引进条件维护');
        ShowWindowIframe({
            width: "538",
            height: "279",
            title: title_,
            param: {operation: operation, pkid: exppkid,evapkid: pkid},
            url: "/views/em/emfileeval/applic/addPnApplic.shtml"
        });
    }

    //保存经济性评估
    function saveEcon() {
        var isValidate = $("#mform3").form('validate');
        if (!isValidate)
            return;
        var $form = $("#mform3");
        var datas = $form.serializeObject();
        datas = $.extend({}, datas, {FunctionCode: 'EM_FILE_EVALUATE_ECON'});
        InitFuncCodeRequest_({
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    pkid = jdata.data.pkid;
                    param.OWindow.reload_();
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }


    //增加必要性评估--MTBUR
    function addMtbur() {
        var title_ = $.i18n.t('增加MTBUR');
        ShowWindowIframe({
            width: "400",
            height: "230",
            title: title_,
            param: {evapkid: pkid},
            url: "/views/em/emfileeval/emfileeva_add_mtbur.shtml"
        });
    }

    function editMtbur(operation, mtburpkid) {
        var title_ = $.i18n.t('必要性评估MTBUR编辑页面');
        ShowWindowIframe({
            width: "400",
            height: "230",
            title: title_,
            param: {operation: operation, pkid: mtburpkid, evapkid: pkid},
            url: "/views/em/emfileeval/emfileeva_add_mtbur.shtml"
        });
    }

    //保存必要性评估
    function saveNece() {
        var isValidate = $("#mform5").form('validate');
        if (!isValidate)
            return;
        var $form = $("#mform5");
        var datas = $form.serializeObject();
        datas = $.extend({}, datas, {FunctionCode: 'EM_FILE_EVALUATE_NECE'});
        InitFuncCodeRequest_({
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    pkid = jdata.data.pkid;
                    param.OWindow.reload_();
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    //计算索赔
    function calculateClaim() {
        var coueng = 0;
        var roaDeadline = $("#roaDeadline").textbox('getValue');
        if (!roaDeadline) {
            MsgAlert({content: '索赔权截止日期不能为空！', type: 'error'});
            return;
        }
        var endDate = new Date(roaDeadline);
        var lastyear = new Date(endDate - 365 * 3 * 24 * 60 * 60 * 1000);
        var year = lastyear.getFullYear();
        var month = lastyear.getMonth() + 1;
        month = month < 10 ? '0' + month : month;
        var day = lastyear.getDate();
        day = day < 10 ? '0' + day : day;
        var LastYear = year + '-' + month + '-' + day;

        InitFuncCodeRequest_({
            data: {
                FunctionCode: 'EM_FILE_COUNT_CAL',
                evapkid: pkid,
                begin: LastYear,
                end: roaDeadline
            },
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data.COU != null) {
                        coueng = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (coueng == 0) {
            MsgAlert({content: "此期间没有有效数据,请手动增加！", type: 'error'});
            return;
        }

        //计算前提示
        InitFuncCodeRequest_({
            data: {
                FunctionCode: "EM_FILE_EVALUATE_CAL_CHECK",
                evapkid: pkid
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    var cou = jdata.data.COU;
                    if (cou > 0) {
                        $.messager.confirm('', '适用对象已有数据，计算前会先清空原有数据，请确认？', function (r) {
                            if (r) {
                                var datas = $.extend({
                                    LastYear: LastYear,
                                    roaDeadline: roaDeadline,
                                    evapkid: pkid
                                }, {FunctionCode: 'EM_FILE_EVALUATE_CAL_CLAIM'});
                                InitFuncCodeRequest_({
                                    data: datas,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            InitDataGrid8();
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });
                            }
                        });
                    } else {
                        var datas = $.extend({
                            LastYear: LastYear,
                            roaDeadline: roaDeadline,
                            evapkid: pkid
                        }, {FunctionCode: 'EM_FILE_EVALUATE_CAL_CLAIM'});
                        InitFuncCodeRequest_({
                            data: datas,
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                    InitDataGrid8();
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

    }

    function addClaimObj() {
        var groupType = $("#applyType").textbox('getValue');
        ShowWindowIframe({
            width: "550",
            height: "300",
            param: {evapkid: pkid, applyType: groupType},
            url: "/views/em/emfileeval/claim/addClaimObj.shtml"
        });
    }

    function addClaimMateria(operation, materpkid) {
        var actype = $("#applyModel").textbox('getValue');
        ShowWindowIframe({
            width: "670",
            height: "300",
            param: {operation: operation, pkid: materpkid, evapkid: pkid, actype: actype},
            url: "/views/em/emfileeval/claim/addClaimMateria.shtml"
        });
    }

    function addClaimManh(operation, manhpkid) {
        ShowWindowIframe({
            width: "585",
            height: "250",
            param: {operation, operation, pkid: manhpkid, evapkid: pkid},
            url: "/views/em/emfileeval/claim/addClaimManh.shtml"
        });
    }

    function chooseAd() {
        ShowWindowIframe({
            width: "738",
            height: "431",
            param: {evapkid: pkid},
            url: "/views/em/emfileeval/emfileeva_econ_ad_list.shtml"
        });
    }

    function tranEval() {
        var evaManId = $("#evaAccid").textbox('getValue');
        var traFlag = "";
        if (msgpkid) {
            traFlag = "Y";//任务页面进行的转发，第二次转发
        }
        ShowWindowIframe({
            width: 550,
            height: 250,
            title: "转发",
            param: {accId: evaManId, pkid: pkid, traFlag: traFlag, msgpkid: msgpkid, accountId: accountId},
            url: '/views/em/emfileeval/emfileeva_filetrans.shtml'
        });
    }

    function turnEval() {
        var quacou = 0;
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_QUA_COU'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        quacou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (quacou == 0) {
            MsgAlert({content: "没有联合评估记录，不能驳回！", type: 'error'});
            return;
        }
        var evaManId = $("#evaAccid").textbox('getValue');
        var cflag = "turn";
        ShowWindowIframe({
            width: 550,
            height: 250,
            title: "驳回",
            param: {accId: evaManId, pkid: pkid, cflag: cflag, msgpkid: msgpkid, accountId: accountId},
            url: '/views/em/emfileeval/emfileeva_filetrans.shtml'
        });
    }

    function previewPdf() {
        var data = $.extend({pkid: pkid}, {FunctionCode: 'EM_FILE_EVA_PRINT'});
        ajaxLoading();
        InitFuncCodeRequest_({
            data: data, successCallBack: function (jdata) {
                ajaxLoadEnd();
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data.length > 0) {
                        var url = jdata.data;
                        eePreview(url);
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }


    function eePreview(url) {
        var title_ = $.i18n.t('工程文件评估预览');
        ShowWindowIframe({
            width: "850",
            height: "650",
            title: title_,
            param: {url: url},
            url: "/views/em/emfileeval/emfileeva_view_pdf.shtml"
        });
    }

    function reloadTo() {
        param.OWindow.reloadTodo();
    }

    function reloadTo2() {
        if (msgData == "emFileEvalTran") {
            param.OWindow.reloadTodo();
        } else {
            param.OWindow.reload_();
        }
        CloseWindowIframe();
    }

    function viewEvamemo() {
        ShowWindowIframe({
            width: 955,
            height: 498,
            title: "评估意见汇总",
            param: {evapkid: pkid},
            url: '/views/em/emfileeval/emfileeva_opinion.shtml'
        });
    }


    function saveSeg() {
        var isValidate = $("#mform6").form('validate');
        if (!isValidate)
            return;
        var evaResult = $("#evaResult").combobox('getValue');
        if (evaResult == 'BSY') {
            MsgAlert({content: '评估结论为不适用不允许增加分段！', type: 'error'});
            return false;
        } else if (evaResult == 'ZHL') {
            MsgAlert({content: '评估结论为知会类不允许增加分段！', type: 'error'});
            return false;
        } else if (evaResult == "") {
            MsgAlert({content: '评估结论为空不允许增加分段！', type: 'error'});
            return false;
        }
        var segDesc = $("#segDesc").textbox('getValue');
        InitFuncCodeRequest_({
            data: {
                spkid: spkid,
                evapkid: pkid,
                segDesc: segDesc,
                evaResult: evaResult,
                FunctionCode: "EM_FILE_EVAL_OTHER_SEG"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    $("#segpkid").val(jdata.data.pkid);
                    spkid = jdata.data.pkid;
                    saveTask();
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function saveTask() {
        var evaOpinion = $("#evaOpinion").textbox('getValue');
        InitFuncCodeRequest_({
            data: {
                evapkid: pkid,
                tpkid: tpkid,
                segpkid: spkid,
                evaOpinion: evaOpinion,
                FunctionCode: "EM_FILE_EVAL_OTHER_TASK"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    $("#taskpkid").val(jdata.data.pkid);
                    tpkid = jdata.data.pkid;
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function addTaskSf() {
        var dealOpinion = $("#dealOpinion").combobox('getValue');
        var applyType = $("#applyType").combobox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var ata = $("#evaAta").textbox('getValue');
        if (dataType) {
            if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
                if (dealOpinion == "EA") {
                    MsgAlert({content: 'AD/CAD类评估单不允许增加EA执行文件！', type: 'error'});
                    return false;
                }
            }
        }
        dealMeasure = "ADD";
        if (!tpkid) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        if (dealOpinion == 'MP') {
            MsgAlert({content: "不允许颁发MP执行文件！", type: 'error'});
            return;
        }
        var taskId = tpkid;
        //获取任务信息
        var taskNature = "";
        InitFuncCodeRequest_({
            data: {pkid: taskId, FunctionCode: 'EM_FILE_GET_SEGTA'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        taskNature = jdata.data.TASK_NATURE;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (dealOpinion) {
            var title_ = $.i18n.t('增加顺丰执行文件--' + dealOpinion);
            var params = {
                dealOpinion: dealOpinion,
                dealMeasure: dealMeasure,
                taskId: taskId,
                evapkid: pkid,
                applyType: applyType,
                applyModel: applyModel,
                ata: ata,
                operation: "add",
                exeFlag: exeFlag,
                taskNature: taskNature
            };
            ShowWindowIframe({
                url: "/views/em/emfileeval/emfileeva_seg_add_sf.shtml",
                title: title_,
                param: params,
                width: "800",
                height: "550"
            });
        } else {
            MsgAlert({content: "请先选择处理意见！", type: 'error'});
        }
    }

    function InitDataGrid7(segpkid, taskid) {
        var applyType = $("#applyType").combobox("getValue");
        var func = 'EM_FILE_TASK_SF_LIST';
        if (applyType == "ENG") {
            func = "EM_FILE_TASK_SF_ENG";
        }
        var identity = 'dg7';
        $("#dg7").MyDataGrid({
                fit: true,
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
            queryParams: {
                segpkid: segpkid,
                taskid: taskid
            },
                columns: {
                    param: {
                        FunctionCode: func
                    },
                    alter: {
                        DEAL_OPINION: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dealOpinion'] [value];
                            }
                        },
                        DEAL_MEASURE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['dealMeasure'] [value];
                            }
                        },
                        APPLY_TYPE: {
                            formatter: function (value, row, index) {
                                return PAGE_DATA['applyType'] [value];
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
                contextMenus: [
                    {
                        id: "m-edit", i18nText: "编辑", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg7').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            var status = rowData.STATUS;
                            if (status == '编写中' || status == 'N/A' || status == '已创建' || status == '编写' || status == '退回' || status == '任务退回' || status == '驳回' || status == '生效') {
                                editTaskSf("edit");
                            } else {
                                MsgAlert({content: "不是编写中不允许编辑！", type: 'error'});

                            }
                        }
                    },
                    {
                        id: "m-edit", i18nText: "取消关联", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg7').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }

                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var exeNo = rowData.EXE_NO;
                            var deal = rowData.DEAL_OPINION;
                            var curCou = 0;
                            InitFuncCodeRequest_({
                                data: {exeNo: exeNo, FunctionCode: 'EM_FILE_CHECK_OBJ'},
                                async: false,
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        if (jdata.data != null) {
                                            curCou = jdata.data.COU;
                                        }
                                    } else {
                                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                    }
                                }
                            });
                            if (curCou == 1 && deal != 'MP') {
                                MsgAlert({content: "已关联的评估单只有一个，不允许取消！", type: 'error'});

                            } else {
                                cancelRef(rowData, identity);
                            }
                        }
                    },
                    {
                        id: "m-stop", i18nText: "终止",
                        onclick: function () {
                            var rowData = $("#dg7").datagrid('getSelected');
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var pkid = rowData.PKID;
                            var deal = rowData.DEAL_OPINION;
                            var status = rowData.STATUS;
                            if (!pkid) {
                                MsgAlert({content: '请选择记录', type: 'error'});
                                return;
                            }
                            if (deal == "EO" || deal == "EA") {
                                if (status == '生效') {
                                    stopSf(rowData, identity);
                                } else {
                                    MsgAlert({content: "只有生效状态只能进行此操作！", type: 'error'});

                                }
                            } else {
                                MsgAlert({content: "只有EO和EA只能进行此操作！", type: 'error'});

                            }
                        }
                    },
                    {
                        id: "m-edit", i18nText: "改版", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg7').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            revTaskSf();
                        }
                    },
                    {
                        id: "", text: "删除", auth: "",
                        onclick: function () {
                            var rowData = $('#dg7').datagrid('getSelected');
                            if(!taskid){
                                taskid = rowData.TASK_PKID;
                            }
                            var refPkid = rowData.PKID;
                            var exePkid = rowData.EXE_PKID;
                            var exeNo = rowData.EXE_NO;
                            var dealOpinion = rowData.DEAL_OPINION;
                            var dealMeasure = rowData.DEAL_MEASURE;
                            var curCou = 0;
                            var flag = "ONE";
                            var status = "";
                            var procInstId = "";
                            if (dealOpinion == "TB" || dealOpinion == "MP") {
                                if (dealMeasure == "REF") {
                                    MsgAlert({content: "关联的不能删除，只能取消关联！", type: 'error'});
                                    return;
                                }
                            }
                            if (dealOpinion == "JYD") {
                                var stajyd = '';
                                InitFuncCodeRequest_({
                                    data: {pkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ_JYD'},
                                    async: false,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            if (jdata.data != null) {
                                                stajyd = jdata.data.STATUS;

                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });

                                if (stajyd != "EDIT") {
                                    MsgAlert({
                                        content: "当前执行文件关联的建议单不是编写中，不允许删除！",
                                        type: 'error'
                                    });
                                    return;
                                }
                            }

                            if (dealOpinion == "EO" || dealOpinion == "EA") {

                                InitFuncCodeRequest_({
                                    data: {exePkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ'},
                                    async: false,
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            if (jdata.data != null) {
                                                curCou = jdata.data.COU;
                                            }
                                        } else {
                                            MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                        }
                                    }
                                });

                                if (curCou > 1) {
                                    flag = "MANY";
                                }
                                if (flag == "ONE") {
                                    InitFuncCodeRequest_({
                                        data: {pkid: exePkid, FunctionCode: 'EM_FILE_CHECK_OBJ_EO'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    status = jdata.data.STATUS;
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                } else if (flag == "MANY") {
                                    MsgAlert({
                                        content: "当前执行文件关联的" + dealOpinion + "不止一条，不允许删除！",
                                        type: 'error'
                                    });
                                    return;
                                }
                                if (!(status == "00" || status == "05")) {
                                    MsgAlert({
                                        content: "当前执行文件关联的" + dealOpinion + "不是编写中或退回状态，请先在" + dealOpinion + "模块退回！",
                                        type: 'error'
                                    });
                                    return;
                                } else if (status == "05") {//只有退回状态才删工作流
                                    InitFuncCodeRequest_({
                                        data: {
                                            objNo: exePkid,
                                            objKey: "EM_EO",
                                            FunctionCode: "EM_WORKFLOW_BUSINESSKEY"
                                        },
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                procInstId = jdata.data;
                                                InitFuncCodeRequest_({
                                                    url: Constant.API_V1_URL + "flow/inst/delete",
                                                    data: {procInstId: procInstId, deleteReason: ''},
                                                    successCallBack: function (jdata) {
                                                        if (jdata.code != RESULT_CODE.SUCCESS_CODE) {
                                                            MsgAlert({content: jdata.msg, type: 'error'});
                                                            return;
                                                        }
                                                        MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_err:ERRMSG.COMMON.SUCCESS_CODE')});
                                                    }
                                                });
                                            } else {
                                                MsgAlert({content: jdata.msg, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }

                            if (!confirm("是否确认删除？")) {
                                return;
                            }
                            InitFuncCodeRequest_({
                                data: {
                                    taskid: taskid,
                                    exeNo: exeNo,
                                    pkid: refPkid,
                                    flag: flag,
                                    exePkid: exePkid,
                                    dealOpinion: dealOpinion,
                                    FunctionCode: "EM_FILE_TASK_SF_DEL"
                                },
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MsgAlert({content: '操作成功'});
                                        reload_("#dg7");
                                    } else {
                                        MsgAlert({content: jdata.msg, type: 'error'});
                                    }
                                }
                            })
                        }
                    }
                ],
                validAuth: function (row, items) {
                    if (operation == 'view') {
                        items['编辑'].enable = false;
                        items['取消关联'].enable = false;
                        items['终止'].enable = false;
                        items['改版'].enable = false;
                        items['删除'].enable = false;
                    }
                    if (row.DEAL_MEASURE != "REF") {
                        items['取消关联'].enable = false;
                    }
                    if (row.DEAL_OPINION == "SYBZX" || row.DEAL_OPINION == "OTHERS") {
                        items['取消关联'].enable = false;
                        items['终止'].enable = false;
                        items['改版'].enable = false;
                    }


                    return items;
                },
                onDblClickRow: function (index, field, value) {
                    editTaskSf("view");
                }
            }
        )
    }

    function addSybzx(dealOpinion, taskId) {
        InitFuncCodeRequest_({
            data: {
                dealOpinion: dealOpinion,
                dealMeasure: dealMeasure,
                taskId: taskId,
                FunctionCode: "EM_FILE_EVAL_SYBZX_SAVE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '操作成功'});
                    reload_("#dg7");
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function updateTranSta() {
        InitFuncCodeRequest_({
            data: {
                evapkid: pkid,
                FunctionCode: "EM_FILE_EVAL_UP_TRAN_STA"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function reloadSour() {
        $("#refFileNo").MyComboGrid({
            params: {
                FunctionCode: 'EM_FILE_REF_FILENO',
                evapkid: pkid
            },
            columns: [[
                {field: 'DATA_NO', title: '资料编号', width: 50},
                {field: 'DATA_VER', title: '版次', width: 50},
                {field: 'DATA_TYPE', title: '资料类型', width: 50}
            ]],
            idField: 'PKID',  //实际选择值
            textField: 'DATA_NO', //文本显示值
            panelHeight: '200px',
            width: '175px',
            onHidePanel: function () {
                var t = $(this).combogrid('getValue');
                if (selectRow == null || t != selectRow.PKID) {//没有选择或者选项不相等时清除内容
                    alert('请选择，不要直接输入！');
                    $(this).combogrid({value: ''});
                }
            },
            onSelect: function (index, row) {
                selectRow = row;
            }
        });
    }

    //上传
    function uploadNoEcon() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "emFileEvalEcon",
                sourceId: pkid,
                successCellBack: "",
                fialCellBack: ""
            }
        });
    }

    function uploadNoNece() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "emFileEvalNece",
                sourceId: pkid,
                successCellBack: "",
                fialCellBack: ""
            }
        });
    }
    //Add by Doreen,SF
    function uploadEva() {
        common_uploadFile({
            identity: 'dg',
            param: {
                cat: "emFileEvalSummary",
                sourceId: pkid,
                successCellBack: "",
                fialCellBack: ""
            }
        });
    }

    //上传
    function common_uploadFile(edopt) {
        var title_ = $.i18n.t('common:COMMON_OPERATION.UPLOAD');
        ShowWindowIframe({
            width: 575,
            height: 200,
            title: title_,
            param: $.extend({}, edopt.param),
            url: "/views/data_manager/dm/upload/attachment_add.shtml"
        });
    }

    function viewHistory(evapkid) {
        var evaNo = $("#evaNo").textbox('getValue');
        var title_ = $.i18n.t('查看评估历史');
        ShowWindowIframe({
            width: "790",
            height: "519",
            title: title_,
            param: {evaNo: evaNo},
            url: "/views/em/emfileeval/emfileeva_eva_history.shtml"
        });
    }

    function setTerm() {
        var title_ = $.i18n.t('部件引进条件维护');
        ShowWindowIframe({
            width: "408",
            height: "276",
            title: title_,
            param: {evapkid: pkid},
            url: "/views/em/emfileeval/applic/addPnApplic.shtml"
        });
    }

    //刷新主页面
    function reload_(dg) {
        $(dg).datagrid("reload");
    }

    function reload_7() {
        InitDataGrid7(spkid, tpkid);
    }

    function reload_12() {
        $("#dg12").datagrid("reload");
    }

    function openTab(title) {
        $('#tt').tabs('select', title);
    }

    function checkNum() {
        var str = $(this).val();
        if (isNaN(Number(str))) {
            alert('请输入数字！');
            $(this).val('');

        }
    }

    function beforeSubmit(applyType, pkid) {
        var funcode = "EM_FILE_GET_SEG_TASK_OBJ";
        if (applyType == "ENG") {
            funcode = "EM_FILE_GET_SEG_TASK_OBJ_ENG";
        }
        result = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK_N'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var taskArray = jdata.data;
                                                    if (Array.isArray(taskArray)) {
                                                        if (taskArray.length > 0 && taskArray[0] != null) {
                                                            for (var j = 0; j < taskArray.length; j++) {
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: funcode
                                                                    }, async: false, successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                var objArray = jdata.data;
                                                                                if (Array.isArray(objArray)) {
                                                                                    if (objArray.length > 0 && objArray[0] != null) {
                                                                                        for (var k = 0; k < objArray.length; k++) {
                                                                                            result = result + "[" + segArray[i].SEG_SN + "-" + taskArray[j].TASK_NO + ":" + objArray[k].ACNO + "];";
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        } else {
                                                                            MsgAlert({
                                                                                content: jdata.msg ? jdata.msg : jdata.data,
                                                                                type: 'error'
                                                                            });
                                                                        }
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkTask() {
        InitFuncCodeRequest_({
            data: {
                evaId: pkid,
                FunctionCode: 'EM_FILE_CHECK_TASK'
            }, async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        groupname = jdata.data.GROUPNAME;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkTaskCfx(applyType) {
        var funcode = "EM_FILE_CHECK_TASK_CFX";
        if (applyType == "ENG") {
            funcode = "EM_FILE_CHECK_TASK_CFX_ENG";
        }
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK_CFX'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var taskArray = jdata.data;
                                                    if (Array.isArray(taskArray)) {
                                                        if (taskArray.length > 0 && taskArray[0] != null) {
                                                            for (var j = 0; j < taskArray.length; j++) {
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        groupId: taskArray[j].GROUPIDS,
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: funcode
                                                                    }, async: false, successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                var objArray = jdata.data;
                                                                                if (Array.isArray(objArray)) {
                                                                                    if (objArray.length > 0 && objArray[0] != null) {
                                                                                        for (var k = 0; k < objArray.length; k++) {
                                                                                            groupname = groupname + "[" + segArray[i].SEG_SN + "-" + taskArray[j].TASK_NO + ":" + objArray[k].ACNO + "];";
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        } else {
                                                                            MsgAlert({
                                                                                content: jdata.msg ? jdata.msg : jdata.data,
                                                                                type: 'error'
                                                                            });
                                                                        }
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }



    function checkTaskYcx(applyType) {
        var funcode = "EM_FILE_CHECK_TASK_YCX";
        if (applyType == "ENG") {
            funcode = "EM_FILE_CHECK_TASK_YCX_ENG";
        }
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK_YCX'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var taskArray = jdata.data;
                                                    if (Array.isArray(taskArray)) {
                                                        if (taskArray.length > 0 && taskArray[0] != null) {
                                                            for (var j = 0; j < taskArray.length; j++) {
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: funcode
                                                                    }, async: false, successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                var objArray = jdata.data.APP;
                                                                                if(objArray){
                                                                                    groupname = groupname + "[分段" + segArray[i].SEG_SN + "-任务" + taskArray[j].TASK_NO + "-适用性" + objArray + "];";
                                                                                }
                                                                            }
                                                                        } else {
                                                                            MsgAlert({
                                                                                content: jdata.msg ? jdata.msg : jdata.data,
                                                                                type: 'error'
                                                                            });
                                                                        }
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkTaskOp(applyType) {
        var funcode = "EM_FILE_CHECK_TASK_A";
        var funcode1 = "EM_FILE_CHECK_TASK_OP";
        if (applyType == "ENG") {
            funcode = "EM_FILE_CHECK_TASK_E";
            funcode1 = "EM_FILE_CHECK_TASK_OP_ENG";
        }
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: funcode}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {exePkid: segArray[i].PKID, FunctionCode: funcode1},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var cou = jdata.data.COU;
                                                    if(cou == 0){
                                                        groupname = groupname + "[" + segArray[i].EXE_NO+" R"+segArray[i].EXE_VER + "];";
                                                    }

                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkGz(pkid) {
        var funcode = "EM_FILE_CHECK_TASK_GZ";
        groupname = "";
        InitFuncCodeRequest_({
            data: {pkid: pkid, FunctionCode: funcode},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            for (var i = 0; i < segArray.length; i++) {
                                groupname = groupname + "[" + segArray[i].EXENO+ "];";
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkSegSour() {
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_SFILE'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var zxArray = jdata.data;
                                                    if (Array.isArray(zxArray)) {
                                                        if (zxArray.length > 0 && zxArray[0] != null) {

                                                        } else {
                                                            groupname = groupname + "[分段 " + segArray[i].SEG_SN + "];";
                                                        }
                                                    }

                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkSegTask() {
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var zxArray = jdata.data;
                                                    if (Array.isArray(zxArray)) {
                                                        if (zxArray.length > 0 && zxArray[0] != null) {

                                                        } else {
                                                            groupname = groupname + "[分段 " + segArray[i].SEG_SN + "];";
                                                        }
                                                    }

                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function checkSegTaskZx() {
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var taskArray = jdata.data;
                                                    if (Array.isArray(taskArray)) {
                                                        if (taskArray.length > 0 && taskArray[0] != null) {
                                                            for (var j = 0; j < taskArray.length; j++) {
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: 'EM_FILE_GET_SEG_ZX'
                                                                    },
                                                                    async: false,
                                                                    successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                var zxArray = jdata.data;
                                                                                if (Array.isArray(zxArray)) {
                                                                                    if (zxArray.length > 0 && zxArray[0] != null) {

                                                                                    } else {
                                                                                        groupname = groupname + "[分段 " + segArray[i].SEG_SN + "下的任务 " + taskArray[j].TASK_NO + "];";
                                                                                    }
                                                                                }
                                                                            }
                                                                        } else {
                                                                            MsgAlert({
                                                                                content: jdata.msg ? jdata.msg : jdata.data,
                                                                                type: 'error'
                                                                            });
                                                                        }
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }


    function checkTl() {
        groupname = "";
        InitFuncCodeRequest_({
            data: {evaId: pkid, FunctionCode: 'EM_FILE_GET_SEG'}, async: false, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        var segArray = jdata.data;
                        if (Array.isArray(segArray)) {
                            if (segArray.length > 0 && segArray[0] != null) {
                                for (var i = 0; i < segArray.length; i++) {
                                    InitFuncCodeRequest_({
                                        data: {segId: segArray[i].PKID, FunctionCode: 'EM_FILE_GET_SEG_TASK'},
                                        async: false,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                if (jdata.data != null) {
                                                    var taskArray = jdata.data;
                                                    if (Array.isArray(taskArray)) {
                                                        if (taskArray.length > 0 && taskArray[0] != null) {
                                                            for (var j = 0; j < taskArray.length; j++) {
                                                                var taskNature = taskArray[j].TASK_NATURE;
                                                                var fcNote = taskArray[j].FC_NOTE;
                                                                var rcNote = taskArray[j].RC_NOTE;
                                                                var fc = 0;
                                                                var rc = 0;
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: 'EM_FILE_GET_SEG_TASK_FC'
                                                                    },
                                                                    async: false,
                                                                    successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                fc = jdata.data.COU;
                                                                            }
                                                                        }
                                                                    }
                                                                });
                                                                InitFuncCodeRequest_({
                                                                    data: {
                                                                        taskId: taskArray[j].PKID,
                                                                        FunctionCode: 'EM_FILE_GET_SEG_TASK_RC'
                                                                    },
                                                                    async: false,
                                                                    successCallBack: function (jdata) {
                                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                            if (jdata.data != null) {
                                                                                rc = jdata.data.COU;
                                                                            }
                                                                        }
                                                                    }
                                                                });

                                                                if (taskNature == 'YCX') {
                                                                    //一次性任务（首检不可为空）
                                                                    if (!fcNote && fc == 0) {
                                                                        groupname = groupname + "[分段 " + segArray[i].SEG_SN + "下的任务 " + taskArray[j].TASK_NO + "首检不能为空];";
                                                                    }
                                                                } else if (taskNature == 'CFX') {
                                                                    //重复性任务（首检/重检都不可为空）
                                                                    if (!fcNote && fc == 0) {
                                                                        groupname = groupname + "[分段 " + segArray[i].SEG_SN + "下的任务 " + taskArray[j].TASK_NO + "首检不能为空];";
                                                                    }
                                                                    if (!rcNote && rc == 0) {
                                                                        groupname = groupname + "[分段 " + segArray[i].SEG_SN + "下的任务 " + taskArray[j].TASK_NO + "重检不能为空];";
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                }
                            }
                        }
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    //附件查看
    function econAttach() {
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: pkid,
                CATEGORY: "emFileEvalEcon",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            successCallBack: function (jdata) {
                //为0时提示没有上传附件，无法查看
                if (jdata.data.length == 0) {
                    MsgAlert({content: "请先上传附件", type: 'error'});

                } else {
                    //打开一个列表页面
                    ShowWindowIframe({
                        width: "515",
                        height: "285",
                        param: {pkid: pkid, category: "emFileEvalEcon",operation: operation},
                        url: "/views/data_manager/dm/upload/editAttach.shtml"
                    });
                }
            }
        });
    }

    //附件查看
    function neceAttach() {
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: pkid,
                CATEGORY: "emFileEvalNece",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            successCallBack: function (jdata) {
                //为0时提示没有上传附件，无法查看
                if (jdata.data.length == 0) {
                    MsgAlert({content: "请先上传附件", type: 'error'});

                } else {
                    //打开一个列表页面
                    ShowWindowIframe({
                        width: "515",
                        height: "285",
                        param: {pkid: pkid, category: "emFileEvalNece",operation: operation},
                        url: "/views/data_manager/dm/upload/editAttach.shtml"
                    });
                }
            }
        });
    }

    //附件查看
    //Add by Doreen,SF
    function viewEvaAttachment() {
        InitFuncCodeRequest_({
            data: {
                SOURCE_ID: pkid,
                CATEGORY: "emFileEvalSummary",
                FunctionCode: 'ATTACHMENT_RSPL_GET'
            },
            successCallBack: function (jdata) {
                //为0时提示没有上传附件，无法查看
                if (jdata.data.length == 0) {
                    MsgAlert({content: "请先上传附件", type: 'error'});

                } else {
                    //打开一个列表页面
                    ShowWindowIframe({
                        width: "515",
                        height: "285",
                        param: {pkid: pkid, category: "emFileEvalSummary",operation:operation},
                        url: "/views/data_manager/dm/upload/editAttach.shtml"
                    });
                }
            }
        });
    }

    function clearChoose() {
        reload_("#dg4");
        InitDataGrid5();
        $("#con").hide();
    }

    function editTaskSf(operation) {
        var dealOpinion = $("#dealOpinion").textbox('getValue');
        var applyType = $("#applyType").textbox('getValue');
        var applyModel = $("#applyModel").textbox('getValue');
        var ata = $("#evaAta").textbox('getValue');
        dealMeasure = "ADD";
        if (!tpkid) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var row = $("#dg7").datagrid('getSelected');
        var taskId = tpkid;
        var dealOpinion = row.DEAL_OPINION;
        var taskNature = "";
        InitFuncCodeRequest_({
            data: {pkid: taskId, FunctionCode: 'EM_FILE_GET_SEGTA'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        taskNature = jdata.data.TASK_NATURE;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        var title_ = $.i18n.t('编辑顺丰执行文件--' + dealOpinion);
        var params = {
            dealOpinion: dealOpinion,
            dealMeasure: dealMeasure,
            taskNature: taskNature,
            taskId: taskId,
            evapkid: pkid,
            applyType: applyType,
            applyModel: applyModel,
            ata: ata,
            operation: operation,
            exeFlag: exeFlag,
            pkid: row.PKID
        };
        ShowWindowIframe({
            url: "/views/em/emfileeval/emfileeva_seg_add_sf.shtml",
            title: title_,
            param: params,
            width: "800",
            height: "550"
        });
    }

    function cancelRef(rowData, dg) {
        var pkid = rowData.PKID;
        var dealOpinion = rowData.DEAL_OPINION;
        InitFuncCodeRequest_({
            data: {
                pkid: pkid,
                FunctionCode: "EM_FILE_TASK_REF_DEL"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: '操作成功'});
                    reload_("#" + dg);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        })
    }

    function stopSf(rowData, dg) {
        var eoPkid = rowData.EXE_PKID;
        var count = 0;
        InitFuncCodeRequest_({
            async: false,
            data: {FunctionCode: 'EM_FILE_STOP_COUNT', eoPkid: eoPkid},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    count = jdata.data.STOP_COUNT;
                }
            }
        });

        if (count != 0) {
            MsgAlert({content: '不可重复终止', type: 'error'});
            return;
        }
        ShowWindowIframe({
            width: 820,
            height: 270,
            title: $.i18n.t('终止申请'),
            param: {eoPkid: eoPkid, eoNo: rowData.EXE_NO, eoVer: rowData.EXE_VER, eoEa: rowData.DEAL_OPINION},
            url: '/views/em/emstop/em_eo_stop_add.shtml'
        });
    }


    //改版
    function revTaskSf() {
        //EM_FILE_EVAL_DEALMEASURE
        dealMeasure = "REV";
        if (!tpkid) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var row = $("#dg7").datagrid('getSelected');
        var taskId = tpkid;
        var dealOpinion = row.DEAL_OPINION;
        var recordId = row.EXE_PKID;
        var exeNo = row.EXE_NO;
        var status = row.STATUS;
        var sfPkid = row.PKID;

        var evaVer = '';
        InitFuncCodeRequest_({
            data: {evaPkid: pkid, FunctionCode: 'EM_FILE_CHECK_EVAVER'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        evaVer = jdata.data.EVA_VER;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        if (status != '生效' && status != '已完成' && status != '已发布') {
            MsgAlert({content: "只有评估单执行文件状态为生效或完成的才可以改版！", type: 'error'});
            return;
        }



        if (dealOpinion == "EO" || dealOpinion == "EA") {
            var stopCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {eoPkid: recordId, FunctionCode: 'EM_EOEA_STOP_EO_PKID_COUNT'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        stopCount = jdata.data.COUNT_DATA;
                    }
                }
            });
            if (stopCount != 0) {
                MsgAlert({content: "已终止或者终止中的" + dealOpinion + "不可改版！", type: 'error'});
                return;
            }

            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {eoNo: exeNo, FunctionCode: 'EM_FILE_CHECK_EO'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该" + dealOpinion + "已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        } else if (dealOpinion == "TB") {
            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {tbNo: exeNo, FunctionCode: 'EM_FILE_CHECK_TB'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该" + dealOpinion + "已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        } else if (dealOpinion == "JYD") {
            var iCount = 0;
            InitFuncCodeRequest_({
                async: false,
                data: {tbNo: exeNo, FunctionCode: 'EM_FILE_CHECK_JYD'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        iCount = jdata.data.COU;
                    }
                }
            });
            if (iCount != 0) {
                MsgAlert({content: "该建议单已经做过改版，不可重复操作！", type: 'error'});
                return;
            }
        }


        if (dealOpinion == "EO" || dealOpinion == "EA") {
            InitFuncCodeRequest_({
                data: {
                    eopkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_EO_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg7");
                        MsgAlert({content: '改版EO成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }
        //MP暂时不改版，因为没有版次
        /*else if (dealOpinion == "MP") {
            InitFuncCodeRequest_({
                data: {
                    evalNo: recordId,
                    dealOpinion: dealOpinion,
                    taskId: taskId,
                    FunctionCode: 'EM_FILE_TASK_SF_MP_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg7");
                        MsgAlert({content: '改版MP成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }*/ else if (dealOpinion == "TB") {
            InitFuncCodeRequest_({
                data: {
                    tbpkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_TB_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg7");
                        MsgAlert({content: '改版TB成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        } else if (dealOpinion == "JYD") {
            InitFuncCodeRequest_({
                data: {
                    pkid: recordId,
                    dealOpinion: dealOpinion,
                    dealMeasure: dealMeasure,
                    taskId: taskId,
                    sfPkid: sfPkid,
                    FunctionCode: 'EM_FILE_TASK_SF_JYD_REV'
                },
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        reload_("#dg7");
                        MsgAlert({content: '改版手册修改建议单成功。'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        } else if (dealOpinion == "SYBZX" || dealOpinion == "OTHERS" || dealOpinion == "MP") {
            MsgAlert({content: "此类文件不能改版！", type: 'error'});

        }
    }

    //关联
    function refTaskSf() {
        //EM_FILE_EVAL_DEALMEASURE
        var dealOpinion = $("#dealOpinion").combobox('getValue');
        var applyType = $("#applyType").textbox('getValue');
        if (dataType.indexOf("AD") != -1 || dataType.indexOf("CAD") != -1) {
            if (dealOpinion == "EA") {
                MsgAlert({content: 'AD/CAD类评估单不允许增加EA执行文件！', type: 'error'});
                return false;
            }
        }
        dealMeasure = "REF";
        if (!tpkid) {
            layer.msg($.i18n.t('请先选中一条任务'), {icon: 5});
            return;
        }
        var taskId = tpkid;
        if (dealOpinion) {
            if (dealOpinion == "EO") {

                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        exeFlag: exeFlag,
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        applyType: applyType,
                        segpkid: spkid,
                        workType: '-1',
                        evaId: pkid
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfeo.shtml"
                });
            } else if (dealOpinion == "EA") {

                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        exeFlag: exeFlag,
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        applyType: applyType,
                        workType: '-1',
                        evaId: pkid
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfea.shtml"
                });
            } else if (dealOpinion == "MP") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                var fleet = '';
                if(applyType == 'APL'){
                    InitFuncCodeRequest_({
                        data: {taskId: taskId, FunctionCode: 'EM_FILE_REF_MP_FLEET'},
                        async: false,
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                if (jdata.data != null) {
                                    fleet = jdata.data.FLEET;
                                }
                            } else {
                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                            }
                        }
                    });
                }
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        exeFlag: exeFlag,
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: pkid,
                        fleet:fleet,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfmp.shtml"
                });
            } else if (dealOpinion == "TB") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        exeFlag: exeFlag,
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: pkid,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sftb.shtml"
                });
            }  else if (dealOpinion == "JYD") {
                var title_ = $.i18n.t('关联顺丰执行文件--' + dealOpinion);
                ShowWindowIframe({
                    width: "852",
                    height: "488",
                    title: title_,
                    param: {
                        dealOpinion: dealOpinion,
                        dealMeasure: dealMeasure,
                        taskId: taskId,
                        evaId: pkid,
                        exeFlag: exeFlag,
                        applyType: applyType
                    },
                    url: "/views/em/emfileeval/emfileeva_seg_revref_sfjyd.shtml"
                });
            }else if (dealOpinion == "SYBZX" || dealOpinion == "OTHERS") {
                MsgAlert({content: "此类文件不能关联！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选择处理意见！", type: 'error'});
        }
    }


    //打开资料类型详细页面
    function openDetai(flag, operation, rowData) {
        var pkid = rowData.PKID;
        var epkid = rowData.EPKID;
        var evaNo = rowData.EVA_NO;
        var evaVer = rowData.EVA_VER;
        var applyType = rowData.APPLY_TYPE;
        var dataType = rowData.DATA_TYPE;
        var ifInit = "N";
        var evaCou = 0;
        InitFuncCodeRequest_({
            data: {evaNo: evaNo, FunctionCode: 'EM_FILE_GET_COU'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        evaCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
        if (evaCou > 1) {
            MsgAlert({content: "该评估单不是初始版本，不允许编辑源文件！", type: 'error'});
            return;
        }else if(evaCou == 1){
            ifInit = 'Y';
        }
        var title_ = $.i18n.t('外部文件接收');
        var eeflag = "EE";
        if (flag == "A") {
            ShowWindowIframe({
                width: "850",
                height: "500",
                title: title_,
                param: {operation: operation, pkid: pkid, applyType: applyType,dataType:dataType},
                url: "/views/data_manager/technology_data/adother/dmExterDetail.shtml"
            });
        } else {
            var rowData = getDG('dg1').datagrid('getSelected');
            if (dataType == "SB") {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/sbsl/sbAdd.shtml"
                });
            } else if (dataType == "CAD") {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/cad/cadAdd.shtml"
                });
            } else if (dataType == "AD") {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/ad/adAdd.shtml"
                });
            } else if (dataType == "AMOC") {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/amoc/amocAdd.shtml"
                });
            } else if (dataType == 'IN' || dataType == 'NSC') {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/nsc/nscAdd.shtml"
                });
            } else {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {
                        operation: operation,
                        pkid: pkid,
                        applyType: applyType,
                        dataType: dataType,
                        eeflag: eeflag,
                        ifInit: ifInit,
                        epkid: epkid,dataType:dataType
                    },
                    url: "/views/data_manager/technology_data/adother/dmExterDetail.shtml"
                });
            }
        }
        //刷新结构信息
        queryStructure(emFileId);
    }

    function viewDetail(pkid,applyType,dataType) {
        var operation = 'view';
        var title_ = $.i18n.t('技术资料接收');
        var flag = 'E';
        if(flag == "A"){
            ShowWindowIframe({
                width: "850",
                height: "500",
                title: title_,
                param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                url: "/views/data_manager/technology_data/adother/dmExterDetail.shtml"
            });
        }else{
            if(dataType == "SB"){
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/sbsl/sbAdd.shtml"
                });
            }else if(dataType == "CAD"){
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/cad/cadAdd.shtml"
                });
            }else if(dataType == "AD"){
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/ad/adAdd.shtml"
                });
            }else if(dataType == "AMOC"){
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/amoc/amocAdd.shtml"
                });
            } else if (dataType == 'IN'||dataType == 'NSC') {
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/nsc/nscAdd.shtml"
                });
            }else{
                ShowWindowIframe({
                    width: "850",
                    height: "500",
                    title: title_,
                    param: {operation: operation, pkid: pkid, applyType: applyType, dataType: dataType},
                    url: "/views/data_manager/technology_data/adother/dmExterDetail.shtml"
                });
            }
        }
    }

    //新增源文件
    function addSourceFile() {
        var applyType = $("#applyType").combobox('getValue');
        var title_ = $.i18n.t('新增源文件');
        ShowWindowIframe({
            width: 774,
            height: 412,
            title: title_,
            param: {evaPkid : pkid, dataType: dataType,applyType:applyType},
            url: "/views/em/emfileeval/emfileeva_add_source_file.shtml"
        });
    }

    //换行
    function newLine(str, n) {
        if (str.length > n) {
            return str.substring(0, n) + '</br>' + newLine(str.substring(n), n);
        } else {
            return str;
        }
    }

    function getAtaAndModel(applyType, applyModel, ata2) {
        if (ata2.indexOf(",") != -1) {
            var array = ata2.split(",");
            minAta = array[0];//定义最小值为该数组的第一个数
            for (var i = 0; i < array.length; i++) {
                if (minAta > array[i]) {
                    minAta = array[i];
                }
            }
        } else {
            minAta = ata2;
        }

        if (applyType == 'APL') {
            if (applyModel.indexOf(",") != -1) {
                var array = applyModel.split(",");
                minFleet = array[0];//定义最小值为该数组的第一个数
                for (var i = 0; i < array.length; i++) {
                    if (minFleet > array[i]) {
                        minFleet = array[i];
                    }
                }
            } else {
                minFleet = applyModel;
            }
        } else if (applyType == 'ENG') {
            if (applyModel.indexOf("CFM56") != -1) {
                minFleet = 'CFM56';
            } else if (applyModel.indexOf("CF6") != -1) {
                minFleet = 'CF6';
            } else if (applyModel.indexOf("RB211") != -1) {
                minFleet = 'RB211';
            } else if (applyModel.indexOf("PW4000") != -1) {
                minFleet = 'PW4000';
            }
        } else {
            minFleet = applyModel;
        }
    }

    // 校验是否存在适航评估信息
    function isExitEvaluateAirworthiness(){
        var rst = "N";
        if (!groupPkid) {
            return rst;
        }
        $.ajax({
            url: '/mo/emFileEvaluateAirworthiness/isExitEvaluateAirworthiness/'+groupPkid,
            type: 'get',
            async:false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                rst = data.data;
            }
        });
        return rst;
    }

    // 请求成功返回msg信息
    function validateEvaAirworthinessApl(){
        var msg = "";
        if (!pkid) {
            return msg;
        }
        $.ajax({
            url: '/mo/emFileEvaluateAirworthiness/validateEvaAirworthinessApl/'+pkid,
            type: 'get',
            async:false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.msg === 'success') {
                    msg = data.data
                }
            }
        });
        return msg;
    }

</script>
</html>