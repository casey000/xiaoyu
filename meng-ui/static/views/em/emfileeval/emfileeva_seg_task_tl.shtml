<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>

<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title>设置时限</title>
</head>

<body>
<div style="">
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <form class="form-horizontal m-t" id="mform">
                <input type="hidden" class="easyui-textbox" id="pkid" name="pkid"/>
                <table class="table table-bordered table-info">
                    <tr style="height: 40px">
                        <th>
                            首检：
                        </th>
                        <td style="width: 80px">
                            <legend><input type="checkbox" id="ifSpark" name="ifSpark" value="N">是否触发类</legend>
                        </td>
                        <td>
                            <legend>首检说明：<input type="checkbox" id="ifFcNote" name="ifFcNote" value="N">NOTE</legend>
                        </td>
                    </tr>
                </table>
                <fieldset id="fcbg" class="fieldset_eui" style="float:left;width:17%;height:250px">
                    <p>首检大组：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg1'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="fcsg" class="fieldset_eui" style="float:left;width:17%;height:250px">
                    <p>首检小组：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg2'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="fcv" class="fieldset_eui" style="float:left;width:39%;height:250px">
                    <p>首检值：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg3'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="fcno" class="fieldset_eui" style="float:left;width:21%;height:250px">
                    <input id="fcvBtn" class="btn btn-primary" type="button" onclick="fcvSave()" value="保存"
                           style="width: 50px;margin:10px;"/>
                    <table style="width:100%;height:83%">
                        <td>
                            <input class="easyui-textbox easyui-validatebox" id="fcNote" name="fcNote"
                                   style="width:100%;height:100%;border: 1px solid #ddd;border-radius: 5px;"
                                   data-options="multiline:true,editable:false,onlyview:true"/>
                        </td>
                    </table>
                </fieldset>
            </form>
            <form class="form-horizontal m-t" id="mform2">
                <table class="table table-bordered table-info">
                    <tr style="height: 40px">
                        <th>
                            重检：
                        </th>
                        <td>
                            <legend>重检说明：<input type="checkbox" id="ifRcNote" name="ifRcNote" value="N">NOTE</legend>
                        </td>
                    </tr>
                </table>
                <fieldset id="rcbg" class="fieldset_eui" style="float:left;width:17%;height:250px">
                    <p>重检大组：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg4'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="rcsg" class="fieldset_eui" style="float:left;width:17%;height:250px">
                    <p>重检小组：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg5'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="rcv" class="fieldset_eui" style="float:left;width:39%;height:250px">
                    <p>重检值：</p>
                    <table style="width:100%;height:100%">
                        <tr>
                            <td>
                                <table id='dg6'>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
                <fieldset id="rcno" class="fieldset_eui" style="float:left;width:21%;height:250px">
                    <input id="rcvBtn" class="btn btn-primary" type="button" onclick="rcvSave()" value="保存"
                           style="width: 50px;margin:10px;"/>
                    <table style="width:100%;height:83%">
                        <td>
                            <input class="easyui-textbox easyui-validatebox" id="rcNote" name="rcNote"
                                   style="width:100%;height:100%;border: 1px solid #ddd;border-radius: 5px;"
                                   data-options="multiline:true,editable:false,onlyview:true"/>
                        </td>
                    </table>
                </fieldset>
            </form>
        </div>
    </div>
</div>
</body>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript">
    var PAGE_DATA = {};
    var param;
    var operation;
    var taskid;
    var ifSpark;
    var ifFcNote;
    var ifRcNote;
    var fcbgid;
    var fcsgid;
    var rcbgid;
    var rcsgid;
    var evapkid;
    var structured = true;
    var rcstructured = true;

    function i18nCallBack() {
        param = getParentParam_();
        operation = param.operation;
        taskid = param.taskid;
        ifSpark = param.ifSpark;
        ifFcNote = param.ifFcNote;
        ifRcNote = param.ifRcNote;
        evapkid = param.evapkid;
        if (operation == "view") {
            $("#view").hide();
        }
        if (ifSpark == "Y") {
            $("#ifSpark").attr("checked", true);
            $("#ifSpark").val("Y");
        } else {
            $("#ifSpark").attr("checked", false);
            $("#ifSpark").val("N");
        }
        if (ifFcNote == "Y") {
            $("#ifFcNote").attr("checked", true);
            $("#ifFcNote").val("Y");
            $("#fcNote").textbox({editable: true, onlyview: false, multiline: true});
            $("#fcvBtn").prop("disabled", false);
        } else {
            $("#ifFcNote").attr("checked", false);
            $("#ifFcNote").val("N");
            $("#fcNote").textbox({editable: false, onlyview: true, multiline: true});
            $("#fcvBtn").prop("disabled", true);
        }

        if (ifRcNote == "Y") {
            $("#ifRcNote").attr("checked", true);
            $("#ifRcNote").val("Y");
            $("#rcNote").textbox({editable: true, onlyview: false, multiline: true});
            $("#rcvBtn").prop("disabled", false);
        } else {
            $("#ifRcNote").attr("checked", false);
            $("#ifRcNote").val("N");
            $("#rcNote").textbox({editable: false, onlyview: true, multiline: true});
            $("#rcvBtn").prop("disabled", true);
        }
        InitFuncCodeRequest_({
            data: {
                domainCode: "EM_EVAL_WORK_TYPE,EM_SEG_TASK_NATURE,YESORNO,EM_SEG_TASK_TL_RULE",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    getFcNote();
                    getRcNote();

                    $('#workType').combobox({
                        panelHeight: '50px',
                        data: jdata.data.EM_EVAL_WORK_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });

                    PAGE_DATA['fcBgPrinciple'] = DomainCodeToMap_(jdata.data["EM_SEG_TASK_TL_RULE"]);
                    PAGE_DATA['yeorno'] = DomainCodeToMap_(jdata.data["YESORNO"]);
                    if (taskid) {
                        InitDataGrid1();
                        InitDataGrid2("");
                        InitDataGrid3("");
                        InitDataGrid4();
                        InitDataGrid5("");
                        InitDataGrid6("");
                    }
                }
            }
        })
    }


    // 保存
    function save() {
        var isValidate = $("#mform").form('validate');
        if (!isValidate)
            return;
        var $form = $("#mform");
        var datas = $form.serializeObject();
        datas = $.extend({segpkid: segpkid}, datas, {FunctionCode: 'EM_FILE_SEG_TASK_ADD'});
        InitFuncCodeRequest_({
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_("#dg1");
                    $("#pkid").textbox('setValue', jdata.data.pkid);
                    param.OWindow.MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    CloseWindowIframe();
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function reload_(dg) {
        $(dg).datagrid("reload");
    }

    $("#ifSpark").change(function () {
        var ifSpark = $("#ifSpark").is(":checked");
        if (ifSpark) {
            if (!confirm("选择触发类将清空时限以及NOTE数据，是否确认？")) {
                $("#ifSpark").val("N");
                $("#ifSpark").prop("checked", false);

            } else {
                $("#ifSpark").val("Y");
                $("#ifFcNote").val("N");
                $("#ifFcNote").prop("checked", false);
                $("#fcvBtn").prop("disabled", true);
                $("#ifRcNote").val("N");
                $("#ifRcNote").prop("checked", false);
                $("#rcvBtn").prop("disabled", true);
                $("#fcNote").textbox('setValue', '');
                $("#rcNote").textbox('setValue', '');
                $("#fcNote").textbox({editable: false, onlyview: true, multiline: true});
                $("#rcNote").textbox({editable: false, onlyview: true, multiline: true});
                updateEval($("#ifSpark").val());
            }
        } else {
            //结构化
            $("#ifSpark").val("N");
            $("#fcvBtn").prop("disabled", false);
            $("#rcvBtn").prop("disabled", false);
            updateSpa();
        }
    });



    $("#ifFcNote").change(function () {
        var ifFcNote = $("#ifFcNote").is(":checked");
        if (ifFcNote) {
            //删除结构化数据
            if (!confirm("切换将清空结构化数据，是否确认？")) {
                $("#ifFcNote").val("N");
                $("#ifFcNote").prop("checked", false);
                return;
            } else {
                $("#ifFcNote").val("Y");
                //允许编辑首检说明
                $("#fcNote").textbox({editable: true, onlyview: false, multiline: true});
                $("#fcvBtn").prop("disabled", false);
                structured = false;
                InitFuncCodeRequest_({
                    data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_FC_STR_DEL"},
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            reload_("#dg1");
                            reload_("#dg2");
                            reload_("#dg3");
                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
            }

            $("#ifSpark").val("N");
            $("#ifSpark").prop("checked", false);
        } else {
            //删除note
            if (!confirm("切换将清空非结构化NOTE数据，是否确认？")) {
                $("#ifFcNote").val("Y");
                $("#ifFcNote").prop("checked", true);
                return;
            } else {
                //结构化
                $("#ifFcNote").val("N");
                $("#fcNote").textbox({editable: false, onlyview: true, multiline: true});
                $("#fcNote").textbox('setValue', '');
                $("#fcvBtn").prop("disabled", true);
                structured = true;
                InitFuncCodeRequest_({
                    data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_FC_NOTE_DEL"},
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
            }
        }
        fcNotesave();

        updateEval($("#ifSpark").val());
    });

    $("#ifRcNote").change(function () {
        var ifRcNote = $("#ifRcNote").is(":checked");
        if (ifRcNote) {
            //删除结构化数据
            if (!confirm("切换将清空结构化数据，是否确认？")) {
                $("#ifRcNote").val("N");
                $("#ifRcNote").prop("checked", false);
                return;
            } else {
                $("#ifRcNote").val("Y");
                //允许编辑首检说明
                $("#rcNote").textbox({editable: true, onlyview: false, multiline: true});
                $("#rcvBtn").prop("disabled", false);
                rcstructured = false;
                InitFuncCodeRequest_({
                    data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_RC_STR_DEL"},
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            reload_("#dg4");
                            reload_("#dg5");
                            reload_("#dg6");
                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
            }
            $("#ifSpark").val("N");
            $("#ifSpark").prop("checked", false);
        } else {
            //删除note
            if (!confirm("切换将清空非结构化数据，是否确认？")) {
                $("#ifRcNote").val("Y");
                $("#ifRcNote").prop("checked", true);
                return;
            } else {
                //结构化
                $("#ifRcNote").val("N");
                $("#rcNote").textbox({editable: false, onlyview: true, multiline: true});
                $("#rcNote").textbox('setValue', '');
                $("#rcvBtn").prop("disabled", true);
                rcstructured = true;
                InitFuncCodeRequest_({
                    data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_RC_NOTE_DEL"},
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
            }
        }
        rcNotesave();

        updateEval($("#ifSpark").val());
    });


    function updateEval(ifSpark) {
        InitFuncCodeRequest_({
            data: {
                ifSpark: ifSpark,
                taskId: taskid,
                FunctionCode: "EM_FILE_EVAL_UPDATE_SPARK"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_("#dg1");
                    reload_("#dg1");
                    reload_("#dg2");
                    reload_("#dg3");
                    reload_("#dg4");
                    reload_("#dg5");
                    reload_("#dg6");
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }
    function InitDataGrid1() {
        var identity = 'dg1';
        $("#dg1").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {taskid: taskid},
                resize: function () {
                    return tabs_standard_resize($("#fcbg"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_FC_BG'
                    },
                    alter: {
                        FC_BG_PRINCIPLE: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '50px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_SEG_TASK_TL_RULE"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_SEG_TASK_TL_RULE");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return PAGE_DATA['fcBgPrinciple'][value];
                            }
                        },
                        FC_BG_NO: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        TASK_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },

                onBeginEdit: function (index, row) {
                },
            onEndEdit: function (index, row, changes) {
                saveFcBg(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            if (!confirm("将会删除对应的首检小组和值，确认删除该记录？")) {
                                return;
                            }
                            var row = $('#dg1').datagrid('getSelected');
                            var rowIndex = $('#dg1').datagrid('getRowIndex', row);
                            if (!row.PKID) {
                                //如果没有保存，直接在datagrid移除该行
                                $('#dg1').datagrid('deleteRow', rowIndex);
                            } else {
                                InitFuncCodeRequest_({
                                    data: {pkid: row.PKID, FunctionCode: 'EM_FILE_SEG_FC_BG_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            $('#dg1').datagrid('deleteRow', rowIndex);
                                            MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg1");
                                            reload_("#dg2");
                                            reload_("#dg3");
                                        } else {
                                            MsgAlert({content: jdata.msg, type: 'error'});
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            var text = $("#ifSpark").val();
                            if (text == "Y") {
                                MsgAlert({content: "选择触发类不能增加时限！", type: 'error'});
                            } else {
                                addFcBg('add');
                            }
                        }
                    }/*, {
                        id: 'btnSave',
                        text: $.i18n.t('保存'),
                        iconCls: 'icon-save',
                        handler: function () {
                            saveFcBg();
                        }
                    }*/
                ],
                onClickRow: function (rowIndex, rowData) {
                    if (rowData.PKID) {
                        fcbgid = rowData.PKID;
                        InitDataGrid2(fcbgid);
                    }
                }
            }
        )
    }

    function InitDataGrid2(fcbgid) {
        var identity = 'dg2';
        $("#dg2").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {fcbgid: fcbgid},
                resize: function () {
                    return tabs_standard_resize($("#fcsg"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_FC_SG'
                    },
                    alter: {
                        FC_SG_PRINCIPLE: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '50px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_SEG_TASK_TL_RULE"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_SEG_TASK_TL_RULE");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return PAGE_DATA['fcBgPrinciple'][value];
                            }
                        },
                        FC_SG_NO: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        FC_BGROUP_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
            onEndEdit: function (index, row, changes) {
                saveFcSg(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            if (!confirm("将会删除对应的首检值，确认删除该记录？")) {
                                return;
                            }
                            var row = $('#dg2').datagrid('getSelected');
                            var rowIndex = $('#dg2').datagrid('getRowIndex', row);
                            if (!row.PKID) {
                                //如果没有保存，直接在datagrid移除该行
                                $('#dg2').datagrid('deleteRow', rowIndex);
                            } else {
                                InitFuncCodeRequest_({
                                    data: {pkid: row.PKID, FunctionCode: 'EM_FILE_SEG_FC_SG_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            $('#dg2').datagrid('deleteRow', rowIndex);
                                            MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg2");
                                            reload_("#dg3");
                                        } else {
                                            MsgAlert({content: jdata.msg, type: 'error'});
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            addFcSg('add');
                        }
                    }/*, {
                        id: 'btnSave',
                        text: $.i18n.t('保存'),
                        iconCls: 'icon-save',
                        handler: function () {
                            saveFcSg();
                        }
                    }*/
                ],
                onClickRow: function (rowIndex, rowData) {
                    if (rowData.PKID) {
                        fcsgid = rowData.PKID;
                        InitDataGrid3(fcsgid);
                    }
                }
            }
        )
    }

    function InitDataGrid3(fcsgid) {
        var identity = 'dg3';
        $("#dg3").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {fcsgid: fcsgid},
                resize: function () {
                    return tabs_standard_resize($("#fcv"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_FC_V'
                    },
                    alter: {
                        FC_UNIT: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '120px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_FILE_EVA_FC_UNIT"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_FILE_EVA_FC_UNIT");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return value;
                            }
                        },
                        IF_POST: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '50px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "YESORNO"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "YESORNO");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return PAGE_DATA['yeorno'][value];
                            }
                        },
                        POST_DATE: {
                            editor: {
                                type: 'datebox',
                            }
                        },
                        FC_VALUE: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        FC_SGROUP_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
            onEndEdit: function (index, row, changes) {
                saveFcV(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            if (!confirm("确认删除该记录？")) {
                                return;
                            }
                            var row = $('#dg3').datagrid('getSelected');
                            var rowIndex = $('#dg3').datagrid('getRowIndex', row);
                            if (!row.PKID) {
                                //如果没有保存，直接在datagrid移除该行
                                $('#dg3').datagrid('deleteRow', rowIndex);
                            } else {
                                InitFuncCodeRequest_({
                                    data: {pkid: row.PKID, FunctionCode: 'EM_FILE_SEG_FC_V_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            $('#dg3').datagrid('deleteRow', rowIndex);
                                            MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg3");
                                        } else {
                                            MsgAlert({content: jdata.msg, type: 'error'});
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            addFcV('add');
                        }
                    }
                ]
            }
        )
    }

    //首检大组
    function addFcBg() {
        if (ifFcNote == "Y") {
            MsgAlert({content: "选中NOTE不允许增加首检结构化数据！", type: 'error'});
            return;
        }
        var curCou = 0;
        InitFuncCodeRequest_({
            data: {taskId: taskid, FunctionCode: 'EM_FILE_CHECK_FCBG'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        curCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        if (curCou != 0) {
            MsgAlert({content: "首检大组已经存在，只允许增加一组！", type: 'error'});
            return;
        }

        if (structured) {
            $('#dg1').datagrid('appendRow', {TASK_ID: taskid});
        } else {
            MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
        }
    }


    //行编辑事件
    function saveFcBg(index, row, changes) {
        row = toCamelCase(row);
        var url = $.extend({}, {taskid: taskid}, row, {FunctionCode: 'EM_FILE_SEG_FC_BG_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg1");
                }
            }
        });
    }

    //首检小组
    function addFcSg() {
        if (fcbgid) {
            if (structured) {
                $('#dg2').datagrid('appendRow', {FC_BGROUP_PKID: fcbgid});
            } else {
                MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选中大组数据！", type: 'error'});
        }
    }


    function saveFcSg(index, row, changes) {
        row = toCamelCase(row);
        var url = $.extend({}, {fcbgid: fcbgid}, row, {FunctionCode: 'EM_FILE_SEG_FC_SG_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg2");
                }
            }
        });
    }

    //首检值
    function addFcV() {
        if (fcsgid) {
            if (structured) {
                $('#dg3').datagrid('appendRow', {FC_SGROUP_PKID: fcsgid});
            } else {
                MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选中小组数据！", type: 'error'});
        }
    }


    function saveFcV(index, row, changes) {
        var ifPost = row.IF_POST;
        var postDate = row.POST_DATE;
        if (ifPost == "Y") {
            if (!postDate) {
                MsgAlert({content: "是POST，则POST日期不能为空！", type: 'error'});
                return;
            }
        } else {
            $("#dg3").datagrid("updateRow", {
                index: index,
                row: {
                    POST_DATE: "",
                }

            });
        }
        row = toCamelCase(row);
        var url = $.extend({}, {fcsgid: fcsgid}, row, {FunctionCode: 'EM_FILE_SEG_FC_V_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg3");
                }
            }
        });
    }

    //---------------------重检--------------------------------

    function InitDataGrid4() {
        var identity = 'dg4';
        $("#dg4").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {taskid: taskid},
                resize: function () {
                    return tabs_standard_resize($("#rcbg"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_RC_BG'
                    },
                    alter: {
                        RC_BG_NO: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        RC_BG_PRINCIPLE: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '50px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_SEG_TASK_TL_RULE"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_SEG_TASK_TL_RULE");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return PAGE_DATA['fcBgPrinciple'][value];
                            }
                        },
                        TASK_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },

                onBeginEdit: function (index, row) {
                },
            onEndEdit: function (index, row, changes) {
                saveRcBg(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "m-delete", i18nText: "删除", auth: "",
                        onclick: function () {
                            if (!confirm("将会删除对应的重检小组和值，确认删除该记录？")) {
                                return;
                            }
                            var row = $('#dg4').datagrid('getSelected');
                            var rowIndex = $('#dg4').datagrid('getRowIndex', row);
                            if (!row.PKID) {
                                //如果没有保存，直接在datagrid移除该行
                                $('#dg4').datagrid('deleteRow', rowIndex);
                            } else {
                                InitFuncCodeRequest_({
                                    data: {pkid: row.PKID, FunctionCode: 'EM_FILE_SEG_RC_BG_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            $('#dg4').datagrid('deleteRow', rowIndex);
                                            MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg4");
                                            reload_("#dg5");
                                            reload_("#dg6");
                                        } else {
                                            MsgAlert({content: jdata.msg, type: 'error'});
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            var text = $("#ifSpark").val();
                            if (text == "Y") {
                                MsgAlert({content: "选择触发类不能增加时限！", type: 'error'});
                            } else {
                                addRcBg('add');
                            }
                        }
                    }
                ],
                onClickRow: function (rowIndex, rowData) {
                    if (rowData.PKID) {
                        rcbgid = rowData.PKID;
                        InitDataGrid5(rcbgid);
                    }
                }
            }
        )
    }

    function InitDataGrid5(rcbgid) {
        var identity = 'dg5';
        $("#dg5").MyDataGrid({
                identity: identity,
                pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {rcbgid: rcbgid},
                resize: function () {
                    return tabs_standard_resize($("#rcsg"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_RC_SG'
                    },
                    alter: {
                        RC_SG_NO: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        RC_SG_PRINCIPLE: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '50px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_SEG_TASK_TL_RULE"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_SEG_TASK_TL_RULE");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return PAGE_DATA['fcBgPrinciple'][value];
                            }
                        },
                        RC_BGROUP_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
            onEndEdit: function (index, row, changes) {
                saveRcSg(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "", i18nText: "删除", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg5').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            if (confirm("将会删除对应的重检值，是否确认删除？")) {
                                InitFuncCodeRequest_({
                                    data: {pkid: rowData.PKID, FunctionCode: 'EM_FILE_SEG_RC_SG_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg5");
                                            reload_("#dg6");
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            addRcSg('add');
                        }
                    }
                ],
                onClickRow: function (rowIndex, rowData) {
                    if (rowData.PKID) {
                        rcsgid = rowData.PKID;
                        InitDataGrid6(rcsgid);
                    }
                }
            }
        )
    }

    function InitDataGrid6(rcsgid) {
        var identity = 'dg6';
        $("#dg6").MyDataGrid({
                identity: identity,
            pagination: false,
                singleSelect: true,
                allowPaging: true,
                enableLineEdit: true,
                sortable: true,
                queryParams: {rcsgid: rcsgid},
                resize: function () {
                    return tabs_standard_resize($("#rcv"), -10, 0.01, 0.01, 5);
                },
                columns: {
                    param: {
                        FunctionCode: 'EM_FILE_SEG_RC_V'
                    },
                    alter: {
                        RC_UNIT: {
                            editor: {
                                type: 'combobox',
                                options: {
                                    editable: false,
                                    panelHeight: '120px',
                                    valueField: 'VALUE',
                                    textField: 'TEXT',
                                    queryParams: {domainCode: "EM_FILE_EVA_FC_UNIT"},
                                    url: Constant.API_URL + 'ANALYSIS_DOMAIN_BYCODE',
                                    required: true,
                                    loadFilter: function (jdata) {
                                        var v = eval("jdata.data." + "EM_FILE_EVA_FC_UNIT");
                                        return v;
                                    },
                                    tipPosition: 'top'
                                }
                            }, formatter: function (value) {
                                return value;
                            }
                        },
                        RC_VALUE: {
                            editor: {
                                type: 'textbox',
                            }
                        },
                        RC_SGROUP_PKID: {
                            formatter: function (value) {
                                return pkid;
                            }
                        }
                    }
                },
                onLoadSuccess: function () {
                },
            onEndEdit: function (index, row, changes) {
                saveRcV(index, row, changes);
            },
                contextMenus: [
                    {
                        id: "", i18nText: "删除", auth: "",
                        onclick: function () {
                            var rowData = getDG('dg6').datagrid('getSelected');
                            if (!rowData.PKID) {
                                MsgAlert({content: "请选择数据！", type: 'error'});
                                return;
                            }
                            if (confirm("是否确认删除？")) {
                                InitFuncCodeRequest_({
                                    data: {pkid: rowData.PKID, FunctionCode: 'EM_FILE_SEG_RC_V_DEL'},
                                    successCallBack: function (jdata) {
                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                            MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                            reload_("#dg6");
                                        }
                                    }
                                });
                            }
                        }
                    }
                ],
                toolbar: [
                    {
                        id: 'btnAdd',
                        text: $.i18n.t('增加'),
                        iconCls: 'icon-add',
                        handler: function () {
                            addRcV('add');
                        }
                    }
                ]
            }
        )
    }

    //重检大组
    function addRcBg() {
        if (ifRcNote == "Y") {
            MsgAlert({content: "选中NOTE不允许增加重检结构化数据！", type: 'error'});
            return;
        }
        var curCou = 0;
        InitFuncCodeRequest_({
            data: {taskId: taskid, FunctionCode: 'EM_FILE_CHECK_RCBG'},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        curCou = jdata.data.COU;
                    }
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });

        if (curCou != 0) {
            MsgAlert({content: "重检大组已经存在，只允许增加一组！", type: 'error'});
            return;
        }
        if (rcstructured) {
            $('#dg4').datagrid('appendRow', {TASK_ID: taskid});
        } else {
            MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
        }
    }


    function saveRcBg(index, row, changes) {
        row = toCamelCase(row);
        var url = $.extend({}, {taskid: taskid}, row, {FunctionCode: 'EM_FILE_SEG_RC_BG_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg4");
                }
            }
        });
    }

    //重检小组
    function addRcSg() {
        if (rcbgid) {
            if (rcstructured) {
                $('#dg5').datagrid('appendRow', {RC_BGROUP_PKID: rcbgid});
            } else {
                MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选中大组数据！", type: 'error'});
        }
    }


    function saveRcSg(index, row, changes) {
        row = toCamelCase(row);
        var url = $.extend({}, {rcbgid: rcbgid}, row, {FunctionCode: 'EM_FILE_SEG_RC_SG_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg5");
                }
            }
        });
    }
    //重检值
    function addRcV() {
        if (rcsgid) {
            if (rcstructured) {
                $('#dg6').datagrid('appendRow', {RC_BGROUP_PKID: rcsgid});
            } else {
                MsgAlert({content: "选的NOTE只能添加非结构化数据！", type: 'error'});
            }
        } else {
            MsgAlert({content: "请先选中小组数据！", type: 'error'});
        }
    }


    function saveRcV(index, row, changes) {
        row = toCamelCase(row);
        var url = $.extend({}, {rcsgid: rcsgid}, row, {FunctionCode: 'EM_FILE_SEG_RC_V_ADD'});
        InitFuncCodeRequest_({
            data: url,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_("#dg6");
                }
            }
        });
    }

    function fcvSave() {
        var note = $("#fcNote").textbox('getValue');
        InitFuncCodeRequest_({
            data: {note: note, taskid: taskid, flag: "fc", FunctionCode: "EM_FILE_SEG_NOTE_ADD"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function getFcNote() {
        var fcnote = "";
        InitFuncCodeRequest_({
            data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_FC_NOTE_LIST"},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        fcnote = jdata.data.FC_NOTE;
                        $("#fcNote").textbox('setValue', jdata.data.FC_NOTE);
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function fcNotesave() {
        var ifFcNote = $("#ifFcNote").val();
        InitFuncCodeRequest_({
            data: {ifFcNote: ifFcNote, taskid: taskid, FunctionCode: "EM_FILE_SEG_FC_TL_UPDATE"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_("#dg1");
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function updateSpa() {
        InitFuncCodeRequest_({
            data: {taskid: taskid, FunctionCode: "EM_FILE_SEG_TL_SPA"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_("#dg1");
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function rcvSave() {
        var note = $("#rcNote").textbox('getValue');
        InitFuncCodeRequest_({
            data: {note: note, taskid: taskid, flag: "rc", FunctionCode: "EM_FILE_SEG_NOTE_ADD"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function getRcNote() {
        var rcnote = "";
        InitFuncCodeRequest_({
            data: {taskid: taskid, FunctionCode: "EM_FILE_EVA_RC_NOTE_LIST"},
            async: false,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data != null) {
                        rcnote = jdata.data.RC_NOTE;
                        $("#rcNote").textbox('setValue', jdata.data.RC_NOTE);
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function rcNotesave() {
        var ifRcNote = $("#ifRcNote").val();
        InitFuncCodeRequest_({
            data: {ifRcNote: ifRcNote, taskid: taskid, FunctionCode: "EM_FILE_SEG_RC_TL_UPDATE"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_("#dg1");
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

</script>
</html>