<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/html" xmlns="http://www.w3.org/1999/html">
<style>
    .butt_1 {
        margin: 20px auto 2%  auto;
    }
    .input_b{
        width:100px;
        height:25px;
        line-height:30px;
        border-radius:4px;
    }
    .input_a{
        width:50px;
        height:25px;
        line-height:30px;
        border-radius:4px;
    }

    .th{
        width: 80px;
        padding-right: 5px;
        font-family: 微软雅黑;
        font-size: 11px;
        color: rgb(50, 64, 75);
        text-align: right;
        font-weight: bold;
    }

    .table_f{
        text-align:center;
        width:95px;
        height:30px;


    }


    .three-assist .accordion  .accordion-header-selected {
         background: #b5b5b5 !important;
    }
</style>
<head id="sanwei_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
</head>



<body>

<div class="three-assist">
<!--三维辅助-->
    <div  class="easyui-accordion" style="width:90%;margin-left:5%;">
    <!--位置信息-->
        <div  title="位置信息"    style="height:280px;width:90%;">
            <table style="margin-left:2% ; margin-top:20px;width:90%; margin:30px auto;">
                <form id="tmodleForm">
                    <!--STA-->
                    <tr>
                        <td style="margin-left:5% ;width:5%">STA:</td>
                        <td style="text-align:center;"><input  class="input_b" id="sta_min"/></td>
                        <td style="text-align:center;width:4%;"><input type="radio" name="sta_min_offset_symbol"  value="1" checked/>&nbsp;+</td>
                        <td style="text-align:center;width:4%;"><input type="radio" name="sta_min_offset_symbol"  value="0" />&nbsp;-</td>
                        <td colspan="2"><input   class="input_a" id="sta_min_offset"/></td>

                        <td style="width:20%"><td>

                        <td style="margin-left:5% ;"> <span >TO:</span></td>
                        <td><input  class="input_b" id="sta_max"/></td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="sta_max_offset_symbol" value="1" checked />+</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="sta_max_offset_symbol" value="0" />-</td>

                        <td colspan="2"><input class="input_a" id="sta_max_offset"/></td>

                    </tr>

                    <!--STR-->
                    <tr>
                        <td style="margin-left:5% ;">STR:</td>
                        <td style="text-align:center;"><input  class="input_b" id="str_min"/></td>
                        <td style="text-align:center;"> <input type="radio" name="str_min_rl" value="l" checked />LH</td>
                        <td style="text-align:center;"> <input type="radio" name="str_min_rl" value="r"  />RH</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="str_min_offset_symbol" value="1" checked />+</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="str_min_offset_symbol" value="0"/>-&nbsp;</td>
                        <td style="width:15%;"><input class="input_a" id="str_min_offset"/></td>


                        <td style="width:5%"></td>
                        <td style="margin-left:5% ;"> <span >TO:</span></td>
                        <td><input  class="input_b" id="str_max"/></td>
                        <td style="text-align:center;"> <input type="radio" name="str_max_rl" value="l" checked />LH</td>
                        <td style="text-align:center;"> <input type="radio" name="str_max_rl" value="r"/>RH</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="str_max_offset_symbol" value="1" checked />+</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="str_max_offset_symbol" value="0"/>-&nbsp;</td>
                        <td style="width:15%;"><input class="input_a" id="str_max_offset"/></td>
                    </tr>

                    <!--BL-->
                    <tr>
                        <td style="margin-left:5% ;width:5%">&nbsp;&nbsp;BL:</td>
                        <td style="text-align:center;"><input  class="input_b" id="bl_min"/></td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="bl_min_rl" value="l" checked />LH</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="bl_min_rl" value="r" />RH</td>
                        <td colspan="2"></td>



                        <td style="width:20%"><td>

                        <td style="margin-left:5% ;"> <span >TO:</span></td>
                        <td><input  class="input_b" id="bl_max"/></td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="bl_max_rl" value="l"  checked />LH</td>
                        <td style="text-align:center;width:4%;"> <input type="radio" name="bl_max_rl" value="r"/>RH</td>
                        <td colspan="2"></td>

                    </tr>


                    <!--WL-->
                    <tr>
                        <td style="margin-left:5% ;width:5%">&nbsp;WL:</td>
                        <td style="text-align:center;"><input  class="input_b" id="wl_min"/></td>
                        <td colspan="4"></td>
                        <td style="width:20%"><td>
                        <td style="margin-left:5% ;"> <span >TO:</span></td>
                        <td><input  class="input_b" id="wl_max"/></td>
                        <td colspan="4"></td>

                    </tr>
                </form>
            </table>

            <!--清空按钮-->
            <div  style="margin-top:20px;">
                <input  class="btn btn-primary" id="wipeDataId" type="button"
                        onclick="wipeData()" style="float:left;margin-left:20px;width: 50px" value="清空"/>

                <span class="th"  style="margin-left:38%;">选择机身段：</span>

                <input class="easyui-combobox"  class="inpt_d1"   id="section" name="section" data-options="editable:false"/>

                <input  class="btn btn-primary" id="coordinateViewId" type="button"
                        onclick="coordinateView()" style="float:right;margin-right:20px;width: 80px" value="坐标视图"/>

                <input  class="btn btn-primary" id="shiftToViewerId" type="button"
                        onclick="shiftToViewer()" style="float:right;margin-right:20px;width: 80px" value="三维拾取"/>
            </div>
        </div>
    </div>

    <div  class="easyui-accordion"  style="width:90%;margin-left:5%;">
    <!--模块--标记信息-->
        <div title="标记信息"  class="" style="height:300px;width:90%; border:1px solid #CCC;">

            <div style="margin-top:20px;margin-left:2%;">
                <span class="th" >分类：</span>
                <input class="easyui-combobox" id="strPartID"  class="inpta" name="relativeFile" data-options="editable:false"/>
                <span class="th">代号：</span>
                <select class="easyui-combobox"  class="inpt_d"  style="width: 120px;" id="markerID" name="markerID" data-options="editable:false"/>
                    <option value=""></option>
                    <option value="8001">AD</option>
                    <option value="8002">CAD</option>
                    <option value="8003">AMOC</option>
                    <option value="8004">SB</option>
                    <option value="8005">SL</option>
                    <option value="8006">FTD</option>
                    <option value="8007">STC</option>
                    <option value="8008">MDA</option>
                    <option value="8009">RLB</option>
                    <option value="8010">DAMAGE</option>
                    <option value="8011">INSPECTION</option>
                </select>
                <span  class="th" style="height:20%;">适用性：</span>
                <input  class="easyui-textbox"  style="width:130px;" id="openAppliance" disabled/>
                <input  class="btn btn-primary" id="loadMarkerId" type="button"
                        onclick="loadMarker()" style="float:right;margin-right:20px;width: 80px" value="加载标记"/>
            </div>

            <!--创建标记-->
            <div  style="width: 100%;" >

                <div title="标记列表" style="width: 100%;height:150px;margin-top: 10px">
                    <table id='markerList'>
                    </table>
                </div>

                <input  class="btn btn-primary" id="createAllMarker"  type="button"
                        onclick="createMarker()" style="float:right;margin-right:20px;margin-top:10px;width: 80px" value="创建标记"/>
            </div>
        </div>
    </div>

    <!--部件信息-->
    <div  class="easyui-accordion" style="width:90%;margin-left:5%;">
        <div title="部件信息"   class="" style="height:280px;width:90%; border:1px solid #CCC;">

            <!--次级结构件-->
            <div style="margin-top:20px;margin-left:2%;">
                <span class="th" >次级结构件：</span>
                <input class="easyui-combobox" id="componentprotype"  class="inpta" name="relativeFile" data-options="editable:false"/>
                <span class="th"  style="height:20%;">部件名称：</span>
                <input  class="easyui-textbox"  style="width:90px;"  id="prodetail" />
                <span class="th"  style="height:20%;">厂家：</span>
                <input  class="easyui-textbox"  style="width:90px;" id="manufacturers"/>

                <input  class="btn btn-primary" id="showIDS3D" type="button"
                         onclick="RE_GetObjectsByIDs()" style="float:right;margin-right:20px;width: 80px" value="构建拾取"/>

                <input  class="btn btn-primary" id="queryObjectByBox" type="button"
                        onclick="buliQueryZone()" style="float:right;margin-right:20px;width: 80px" value="坐标拾取"/>

                <input  class="btn btn-primary" id="devareModelTable" type="button"
                        onclick="devareMultiple()" style="float:right;margin-right:20px;width: 50px;" value="删除"/>
            </div>

            <div title="部件列表" style="width: 100%;height:150px;margin-top: 10px">
                <table id='modelTable'>
                </table>
            </div>
        </div>
    </div>

    <!--保存按-->
    <div  style="height:100px;width:1000px;">
            <input  class="btn btn-primary" type="button"   id="saveBotton"   style="width:50px;float: right;"   value="保存" onclick="handleSave()"/>
    </div>
    <div id="saveDialog" class="easyui-dialog" title="提示" style="width:400px;height:120px;padding:10px"
         data-options="
         closed:true,
                buttons: [{
                    text:'确定',
                    handler:function(){
                       handleSubmit()
                    }
                },{
                    text:'取消',
                    handler:function(){
                       $('#saveDialog').dialog('close')
                    }
                }]" >
        请确认是否已经创建完成动态标记?
    </div>

</div>
</body>



<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript" src="/js/modelIndex.js"></script>
<script type="text/javascript" src="/js/qwebchannel.js"></script>
<script type="text/javascript" src="/js/qt.chrome.js"></script>
<script type="text/javascript" src="/js/bridgeBusiness.js"></script>
<script type="text/javascript" src="/js/ASMS3DObject.js"></script>
<script type="text/javascript" src="/js/sta-parser.js"></script>

<script type="text/javascript">

    var param;
    var asmsPro;
    var asmsModuleType;
    /*页面初始化方法*/
    function i18nCallBack() {
        initDataGrid6();
        initDataGrid7();

        param = getParentParam_();
        asmsPro = param.asmsPro;
        asmsModuleType = param.asmsModuleType ? param.asmsModuleType : "EE";
        buildAircraftInfo();
        showLocationMsg(param.businessData.subBusinessId);
        getCategoryType();

        var appliance = param.businessData.model +"_"+ param.businessData.aircraft
        $("#openAppliance").textbox('setValue',appliance);


    }
    function getCategoryType() {
        // console.log(asmsPro)
        $.ajax({
            url:asmsPro+ '/categoryType/list',
            dataType: 'json',
            method: 'get',
            async:false,
            success: function(data){
                $('#strPartID').combobox({
                    panelHeight: '250px',
                    valueField: 'categoryCode',
                    textField: 'categoryType',
                    groupField:'assembly',
                    data: data.result,
                });
                $('#componentprotype').combobox({
                        panelHeight: '250px',
                        valueField: 'categoryCode',
                        textField: 'categoryType',
                        groupField:'assembly',
                        data: data.result,
                });

            },
            error: function (data) {
                //alert("查询失败！");
            }
        })
    }
    function initDataGrid7(){
        $("#modelTable").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'机型',field:'subtype',width:"100",checkbox:true,},
                {title:'飞机号',field:'appliance',width:"100",hidden:true},
                {title:'次级结构件',field:'categoryType',width:"100"},
                {title:'部件名称',field:'categorySubType',width:"100"},
                {title:'部件属性',field:'prodetail',width:"120",
                    formatter: function(value,row,index){
                        return formatterPro(row)
                    } },
                {title:'厂家',field:'manufacturers',width:"100"},

                {title:'STA',field:'sta',width:"150",
                    formatter: function(value,row,index){
                        return formatterPosition(row.stamax,"sta")+" TO "+formatterPosition(row.stamin,"sta");
                    } },
                {title:'BL',field:'bl',width:"100",
                    formatter: function(value,row,index){
                        return formatterPosition(row.blmin,"bl")+" TO "+formatterPosition(row.blmax,"bl");
                    } },
                {title:'WL',field:'wl',width:"100",
                    formatter: function(value,row,index){
                        return formatterPosition(row.wlmin,"wl")+" TO "+formatterPosition(row.wlmax,"wl");
                    } },
                {title:'STR',field:'str',width:"100"},
                {title:'备注',field:'remark',width:"100"}
            ]],
            rownumbers:true,

        });
    }
    function formatterPosition(val, type){
        if(val == null){
            return "";
        }

        val = roundValue(val, 1);

        if (type == 'bl') {
            return Math.abs(val)+(val < 0 ? "R" : "L") ;
        }

        if(type == 'sta'){
            val = Math.abs(val);
            STAParser.init(param.businessData.model);
            var obj = STAParser.getSrcLength(val);
            if (obj.nOffset == 0) {
                return obj.nPos;
            }
            return obj.nPos + "+" + obj.nOffset;
        }

        return val;
    }
    /**
     * 格式化部件属性
     * @param obj
     */
    function formatterPro(obj){
        var list = [];

        if(obj.pse == 1){
            list.push("PSE");
        }
        if(obj.fcbs == 1){
            list.push("FCBS");
        }
        if(obj.ssi == 1){
            list.push("SSI");
        }
        if(obj.pneumaticArea == 1){
            list.push("PneumaticArea");
        }
        if(obj.wetArea == 1){
            list.push("wetArea");
        }
        if(obj.rsc == 1){
            list.push("RSC");
        }
        if(obj.apb == 1){
            list.push("APB");
        }
        if(obj.pressurizedRegion == 1){
            list.push("pressurizedRegion");
        }

        return list.join(",");
    }
    function initDataGrid6(){
        $("#markerList").datagrid({
            //定义标题行所有的列
            columns:[[
                {title:'机型',field:'modelType',width:"100",checkbox:true,},
                {title:'飞机',field:'aircraft',width:"100"},
                {title:'分类',field:'strPartName',width:"100",},
                {title:'代号',field:'markerName',width:"100"},
                {title:'STA',field:'STA',width:"100"},
                {title:'BL',field:'BL',width:"100"},
                {title:'WL',field:'WL',width:"100"},

            ]],
            rownumbers:true,
            singleSelect:true,

        });
    }


    /*
     * Add by Doreen
     */
    //获取分类信息
    //获取飞机信息
    function buildAircraftInfo(){

        return {
            Type: param.businessData.model.split("-")[0],
            SubType: param.businessData.model.split("-")[1],
            Name:  param.businessData.aircraft,
            Appliance:  param.businessData.aircraft
        }
    }
    //三维拾取
    function shiftToViewer(){
        var params = {
            aircraftInfo: buildAircraftInfo(),
            hiddenItems : []
        }
        ReloadModel(params);
    }
    //坐标视图
    function coordinateView(){
        var box = buildBoxWithStr();
        if (box) {
            console.log(box, 401);
            getObjectsByBox(box);
        }

    }
    function buildBoxWithStr(){
        var box =buildBox();

        if (box.sta.min == "" || box.sta.max == "" || !box.sta.min) {
            MsgAlert({content: "请输入完整的STA", type: 'error'});
            return false;
        }

        if (box.str.min == "" && box.str.max == "") {
            if (box.bl.min == "" || box.bl.max == "") {
                MsgAlert({content: "请输入完整的BL", type: 'error'});
                return false;
            }
            if (box.wl.min == "" || box.wl.max == "") {
                MsgAlert({content: "请输入完整的WL", type: 'error'});
                return false;
            }
        }
        return box;
    }
    function buildBox(){
        var box = {};

        box.sta = processOption("sta");
        box.str = processOption("str");
        box.bl = processOption("bl");
        box.wl = processOption("wl");
        return box;
    }
    /**
     * 处理最大和最小值
     * @param type "sta","wl","bl","str"
     * @param options   {min:0,max:100}
     */
    function processOption(type, location) {
        var options = {};
        var symbolmin,symbolmax,rlmin,rlmax;

        if(typeof(location) != "undefined"){
            options.min = location.min;
            options.max = location.max;
            options.minOffset = location.minOffset;
            options.maxOffset = location.maxOffset;

            symbolmin =  location.symbolmin;
            symbolmax =  location.symbolmax;
            rlmin =  location.rlmin;
            rlmax =  location.rlmax;
        }else{
            options.min = $.trim($("#" + type + "_min").val());
            options.max = $.trim($("#" + type + "_max").val());
            options.minOffset = $.trim($("#" + type + "_min_offset").val());
            options.maxOffset = $.trim($("#" + type + "_max_offset").val());
            symbolmin = $("input:checked[name='" + type + "_min_offset_symbol']").val();
            symbolmax = $("input:checked[name='" + type + "_max_offset_symbol']").val();
            rlmin = $("input:checked[name='" + type + "_min_rl']").val();
            rlmax = $("input:checked[name='" + type + "_max_rl']").val();
        }
        /**
         * 比较大小
         */
        function compareValue(val1, val2){
            if(parseFloat(val1) > parseFloat(val2)){
                return 1;
            }

            if(parseFloat(val1) < parseFloat(val2)){
                return -1;
            }

            if(val1 > val2){
                return 1;
            }

            if(val1 == val2){
                return 0;
            }

            if(val1 < val2){
                return -1;
            }
        }

        //将字符串转为数字, STA可能会包含偏移量字符, 不能转换为数字表示
        if(options.min != "" && type != "sta"){
            options.min = parseFloat(options.min,10);
        }

        if(options.max != "" && type != "sta"){
            options.max = parseFloat(options.max,10);
        }

        if(options.minOffset != ""){
            options.minOffset = parseFloat(options.minOffset,10);
        }

        if(options.maxOffset != ""){
            options.maxOffset = parseFloat(options.maxOffset,10);
        }

        //处理左右
        if (options.min != "" && rlmin == 'r') {
            options.min = -options.min;
        }

        if (options.max != "" && rlmax == 'r') {
            options.max = -options.max;
        }

        //处理加减
        if(options.minOffset != "" && symbolmin == "0") {
            options.minOffset = -options.minOffset;
        }

        if(options.maxOffset != "" && symbolmax == "0") {
            options.maxOffset = -options.maxOffset;
        }

        //处理桁条位
        if(type == "str" && options.min != ""){
            var model = param.businessData.model;
            if(model.indexOf("757_200") >= 0 || model.indexOf("737_300") >= 0 || model.indexOf("737_400") >= 0){
                if(options.min <= 1 && options.min >= -1){
                    options.min = 1;
                }
                if(options.max != "" && (options.max <= 1 && options.max >= -1)){
                    options.max = 1;
                }
            }

            if(model.indexOf("757_200") >= 0){
                if(options.min >= 30 || options.min <= -30){
                    options.min = 30;
                }
                if(options.max != "" && (options.max >= 30 || options.max <= -30)){
                    options.max = 30;
                }
            }
        }

        //更换最大最小值,STA大小比较需要先比较数字再比较符号
        if(options.min != "" && options.max != "" && compareValue(options.min, options.max) == 1){
            //debugger;
            var tmp = options.min;
            options.min = options.max;
            options.max = tmp;

            var tmpoffset = options.minOffset;
            options.minOffset = options.maxOffset;
            options.maxOffset = tmpoffset;
        }

        return options;
    }

    function getObjectsByBox(boxOption) {
        var aircraft = {
            aircraftInfo:buildAircraftInfo() ,
            hiddenItems : []
        };
        CreateCircumcuboid({
            aircraftInfo: aircraft,
            strOptions: boxOption
        });

        return false;
    }
    //清空
    function wipeData(){
        $("#tmodleForm").form('reset');
    }

    //加载标记
    function loadMarker() {

        var strPartID= $('#strPartID').combobox('getValue');
        var markerID=  $('#markerID').combobox('getValue');
        
        if (strPartID == '' || strPartID == null) {
            MsgAlert({content: "请选择分类", type: 'error'});
            return false;
        }
        if (markerID == '' || markerID == null) {
            MsgAlert({content: "请选择代号", type: 'error'});
            return false;
        }

        var box4Viewer = buildBoxWithStr();
        if (!box4Viewer) {
            return false;
        }
        // resetViewListeners('loadMarker');
        markerLoad(box4Viewer);

        var aircraft = {
            aircraftInfo:buildAircraftInfo() ,
            hiddenItems : []
        };
        CreateCircumcuboid({
            aircraftInfo: aircraft,
            strOptions: box4Viewer
        });
    }
    //加载标记列表数据
    function markerLoad(box){
        var strPartID= $('#strPartID').combobox('getValue');
        var markerID=  $('#markerID').combobox('getValue');
        var strPartName= $('#strPartID').combobox('getText');
        var markerName=  $('#markerID').combobox('getText');

        var stamin = STAParser.getFixLength(box.sta.max, box.sta.maxOffset);
        var stamax = STAParser.getFixLength(box.sta.min, box.sta.minOffset);

        var marker = {
            modelType : param.businessData.model,
            aircraft : param.businessData.aircraft,
            strPartID : strPartID,
            strPartName : strPartName,
            markerID : markerID,
            markerName : markerName,
            WL : box.wl.min + " &nbsp;TO&nbsp;" + box.wl.max,
            BL : box.bl.min + " &nbsp;TO&nbsp;" + box.bl.max,
            STA : stamin + " &nbsp;TO&nbsp;" + stamax,
        };

        $('#markerList').datagrid('insertRow', {
            index : 0, // 索引从0开始
            row : marker
        });
    }
    //创建标记
    function createMarker() {
        // resetViewListeners();

        var markers = buildMarkerAll();
        var partIDs = getPartIDs();

        clearMarker();

        if (markers == null) {
            MsgAlert({content: "请勾选要生成的标记", type: 'error'});
            return false;
        }

        var aircraft = {
            aircraftInfo: buildAircraftInfo(),
            hiddenItems : []
        }

        GenerateDynamicMarkers( {
            aircraftInfo: aircraft,
            strOptions: {
                markers:markers,
                categories:partIDs
            }
        });
    }
     function buildMarkerAll() {
        var rows = $('#markerList').datagrid('getSelections');
        if (rows == '' || rows == null) {
            return null;
        }

        var strOption = {
            //757
            "ModelType" : rows[0].modelType.split("-")[0].replace("B",""),
            //200
            "SubType" : rows[0].modelType.split("-")[1],
            "Appliance" :rows[0].aircraft,
            "Markers" : []
        };

        for ( var i = 0; i < rows.length; i++) {
            strOption.Markers.push({
                "Type" : rows[i].markerID,
                "STA" : rows[i].STA,
                "WL" : rows[i].WL,
                "BL" : rows[i].BL,
                "Location" : rows[i].strPartID
            });
        }
        return strOption;
    }
    function getPartIDs(){
        var rows = $('#markerList').datagrid('getSelections');
        var part='';
        if (rows == '' || rows == null) {
            return '0';
        }
        for ( var i = 0; i < rows.length; i++) {
            part+=rows[i].strPartID+' ';
        }
        part = part.substring(0, part.length - 1);
        return  part;
    }

    //清除分类、代号字段信息
    function clearMarker() {
        $('#strPartID').combobox('setValue',[]);
        $('#markerID').combobox('setValue',[]);
    }


    //坐标拾取
    function buliQueryZone(){

        // resetViewListeners();
        var box = buildBox();

        if (box.sta.min == "" && box.sta.max == "") {
            MsgAlert({content: "请输入完整的STA", type: 'error'});
            return false;
        }

        if (box.bl.min == "" || box.bl.max == "") {
            MsgAlert({content: "请输入完整的BL", type: 'error'});
            return false;
        }

        if (box.wl.min == "" || box.wl.max == "") {
            MsgAlert({content: "请输入完整的WL", type: 'error'});
            return false;
        }

        var staActualMin = STAParser.getFixLength(box.sta.min, box.sta.minOffset);
        var staActualMax = STAParser.getFixLength(box.sta.max, box.sta.maxOffset);

        var categoryCode= $('#componentprotype').combobox('getValue');
        var categorySubType=  $('#prodetail').val();
        var manufacturers= $('#manufacturers').val();
        var section=  $('#section').combobox('getValue');

        var queryParam = {
            "applianceList": [param.businessData.aircraft],
            "subTypeList":[param.businessData.model],
            "categorySubType": categorySubType,
            "categoryCode": categoryCode,
            "manufacturers": manufacturers,
            "section": section,
            "staActualMin": Math.min(staActualMin, staActualMax),
            "staActualMax": Math.max(staActualMin, staActualMax),
            "blMin": Math.min(box.bl.min, box.bl.max),
            "blMax": Math.max(box.bl.min, box.bl.max),
            "wlMin": Math.min(box.wl.min, box.wl.max),
            "wlMax": Math.max(box.wl.min, box.wl.max)
        };
        console.log(queryParam)
        $.ajax({
            type: "post",
            url:asmsPro+"/structureModelInfo/queryProByBox",
            data:JSON.stringify(queryParam),
            async:false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                $('#modelTable').datagrid( {
                    data:result.result,
                });
            },
            error: function (err) {
                MsgAlert({content: "坐标拾取失败", type: 'error'});
            }
        });
    }

    //构建拾取
    function RE_GetObjectsByIDs(){
        var rows = $('#modelTable').datagrid('getSelections');
        if(rows.length<=0){
            MsgAlert({content: "请勾选要加载的构件", type: 'error'});
            return false;
        }
        var param="";
        var marker="";
        var patch="";
        var structure="";
        var ids="";
        for (var i = 0; i < rows.length; i++) {
            ids.push(rows[i].id);
        }
        param=ids.join(",");
        var aircraft = {
            aircraftInfo: buildAircraftInfo(),
            hiddenItems : []
        };

        SelectionStrucutreMarkerPatchRelation(param,aircraft,asmsPro);
    }
    //删除部件信息
    function devareMultiple() {
        var rows = $('#modelTable').datagrid('getSelections');
        if (rows == '' || rows == null) {
            MsgAlert({content: "请勾选要删除的行", type: 'error'});
            return false;
        }
        for ( var i = rows.length - 1; i >= 0; i--) {
            var rowIndex = $('#modelTable').datagrid('getRowIndex', rows[i].elementId);
            if(rowIndex >= 0){
                $('#modelTable').datagrid('deleteRow', rowIndex);
                $('#modelTable').datagrid('reload');
            }
        }
    }

    //保存
    function handleSave() {
            $('#saveDialog').dialog('open');
    }
    function handleSubmit() {
        saveLocation();

        var rows = $('#modelTable').datagrid('getSelections');
        if (rows.length > 0) {
            saveStructure();
        } else {
            MsgAlert({content: "三维操作未选择结构件", type: 'error'});
            $('#saveDialog').dialog('close')
        }
    }
    //保存包围盒接口
    function saveLocation() {

        var box = buildBox();

        if (box.sta.min == "" || box.sta.max == "" || !box.sta.min) {
            return false;
        }

        var staActualMin = STAParser.getFixLength(box.sta.min, box.sta.minOffset);
        var staActualMax = STAParser.getFixLength(box.sta.max, box.sta.maxOffset);

        var boxParams = {
            "staActualMin": staActualMin,
            "staActualMax": staActualMax,
            "staMin": box.sta.min,
            "staMinOffset": box.sta.minOffset,
            "staMax": box.sta.max,
            "staMaxOffset": box.sta.maxOffset,
            "strMin": box.str.min,
            "strMinOffset": box.str.minOffset,
            "strMax": box.str.max,
            "strMaxOffset": box.str.maxOffset,
            "blMin": box.bl.min,
            "blMax": box.bl.max,
            "wlMin": box.wl.min,
            "wlMax": box.wl.max,
            "id":param.businessData.subBusinessId,
        };
        $.ajax({
            type: "post",
            url: asmsPro+"/relation/locationMsg/save",
            contentType: "application/json;charset=utf-8",
            async:false,
            data:JSON.stringify(boxParams),
            dataType: "json",
            success: function (result) {
                $('#saveDialog').dialog('close')
                param.OWindow.reload_("#partList");
                param.OWindow.getLocationInfo(param.businessData.subBusinessId);
            },
            error: function (err) {
                MsgAlert({content: "保存失败", type: 'error'});
            }
        });
    }
    //保存结构件接口
    function saveStructure() {
        var strctureArray = [];
        var rows = $('#modelTable').datagrid('getSelections');
        for (var i = 0; i < rows.length; i++) {
            var obj = {
                "businessNo": param.businessData.businessNo,
                "businessId": param.businessData.businessId,
                "businessType": asmsModuleType,
                "subBusinessNo": param.businessData.subBusinessNo,
                "subBusinessId":param.businessData.subBusinessId,
                "subBusinessType": "PARA",
                "categoryCode": rows[i].categoryCode,
                "categoryName": rows[i].categoryType,
                "modelId": rows[i].id,
                "relationType": rows[i].type,
                "subType": "",
                "zone":""
            }

            // console.log(obj)
            strctureArray.push(obj);
            var parent = {
                "businessNo": param.businessData.businessNo,
                "businessId": param.businessData.businessId,
                "businessType": asmsModuleType,
                "categoryCode": rows[i].categoryCode,
                "categoryName": rows[i].categoryType,
                "modelId": rows[i].id,
                "relationType": rows[i].type,
                "subType": "",
                "zone":"",
            }
            strctureArray.push(parent)
        }


        // console.log(strctureArray)
        $.ajax({
            type: "post",
            url:asmsPro+ "/relation/business/insert",
            contentType: "application/json;charset=utf-8",
            async:false,
            data:JSON.stringify(strctureArray),
            dataType: "json",
            success: function (result) {
                MsgAlert({content: "保存成功!"});
                $('#saveDialog').dialog('close');
                CloseWindowIframe();
                // console.log(param.OWindow)
                param.OWindow.getPartInfoList(param.businessData.subBusinessId);
                param.OWindow.getRelationList(param.businessData.subBusinessId);
                param.OWindow.getModelStructureInfo("PARA",param.businessData.subBusinessId);
                param.OWindow.getStructureInfo(param.businessData.subBusinessId);


            },
            error: function (err) {
                MsgAlert({content: "保存失败", type: 'error'});
                $('#saveDialog').dialog('close')

            }
        });

    }

//三维数据回填

    //包围盒
    function backToBox(strOptions){
        var box = buildBoxWith3dMsg(strOptions);
        renderBoxContent("sta", box.sta);
        renderBoxContent("str", box.str);
        renderBoxContent("bl", box.bl);
        renderBoxContent("wl", box.wl);
    }

    function buildBoxWith3dMsg(strOptions){
        var jsonObj = eval(strOptions)[0];
        var staArr = jsonObj.STA.split(" ");
        var strArr = (jsonObj.STR || " ").split(" ");

        var wlArr = jsonObj.WL.split(" ");
        var blArr = jsonObj.BL.split(" ");
        var box = {
            sta : {
                min : staArr[1].replace("-",""),
                max : staArr[0].replace("-",""),
            },
            str : {
                min: strArr[0],
                max: strArr[1]
            },
            bl : {
                min: blArr[0],
                max: blArr[1]
            },
            wl : {
                min: wlArr[0],
                max: wlArr[1]
            }
        };

        if(jsonObj.STAOffSet != null && jsonObj.STAOffSet != ""){
            var staOffsetArr = jsonObj.STAOffSet.split(" ");
            box.sta.minOffset = staOffsetArr[1],
                box.sta.maxOffset = staOffsetArr[0]
        }
        return box;
    }
    /**
     * 填充包围盒内容(wl,bl)
     * @param type "sta","wl","bl","str"
     * @param options   {min:0,max:100}
     */
    function renderBoxContent(type, options){
        if(type == 'sta'){
            $("#" + type + "_min").val(options.min == "" ? "" : roundValue(options.min, 1));
            $("#" + type + "_max").val(options.max == "" ? "" : roundValue(options.max, 1));
        }else{
            $("#" + type + "_min").val(options.min == "" ? "" : Math.abs(roundValue(options.min, 1)));
            $("#" + type + "_max").val(options.max == "" ? "" : Math.abs(roundValue(options.max, 1)));
        }

        if(options.min < 0){
            $("input[name='" + type + "_min_rl'][value='r']").attr("checked", true);
        }else{
            $("input[name='" + type + "_min_rl'][value='l']").attr("checked", true);
        }

        if(options.max < 0){
            $("input[name='" + type + "_max_rl'][value='r']").attr("checked", true);
        }else{
            $("input[name='" + type + "_max_rl'][value='l']").attr("checked", true);
        }

        if(options.minOffset != "" && options.minOffset != "undefined"){
            if(options.minOffset < 0){
                $("input[name='" + type + "_min_offset_symbol'][value='0']").attr("checked", true);
            }else{
                $("input[name='" + type + "_min_offset_symbol'][value='1']").attr("checked", true);
            }

            $("#" + type + "_min_offset").val(Math.abs(roundValue(options.minOffset, 1)));
        }else{
            $("#" + type + "_min_offset").val("");
        }

        if(options.maxOffset != "" && options.minOffset != "undefined"){
            if(options.maxOffset < 0){
                $("input[name='" + type + "_max_offset_symbol'][value='0']").attr("checked", true);
            }else{
                $("input[name='" + type + "_max_offset_symbol'][value='1']").attr("checked", true);
            }

            $("#" + type + "_max_offset").val(Math.abs(roundValue(options.maxOffset, 1)));
        }else{
            $("#" + type + "_max_offset").val("");
        }
    }

    /**
     * 取两位精度
     * @param val
     * @returns
     */
    function roundValue(val, precision){

        if(val == null){
            return "";
        }

        if(!val.toString().match(/^[-+.0-9]+$/)){
            return val;
        }

        if(isNaN(val)){
            return "";
        }

        if(precision == null){
            precision = 2;
        }

        if(typeof (val) == "string"){
            val = parseFloat(val);
        }
        return val.toFixed(precision);
    }


    //结构件回填
    function backToPartList(structures,largeSquareStructures){

        var uuidArray = structures.map(function (element) {
            return element.uuid
        });
        // var fd = new FormData();
        // fd.append("uuids", uuidArray);
        // fd.append("subType", param.businessData.model);
        // fd.append("aircraft", param.businessData.aircraft);
        var fd={
            uuids: uuidArray,
            subType:param.businessData.model,
            aircraft: param.businessData.aircraft,

        }
        //
        $.ajax({
            type: "post",
            url:asmsPro+"/structureModelInfo/selectByUuidSubTypeAndAircraft",
            data:JSON.stringify(fd),
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            async:false,
            success: function (result) {
                $('#modelTable').datagrid( {
                    data:result.result,
                });
            },
            error: function (err) {
                MsgAlert({content: "部件查询失败", type: 'error'});
            }
        });

    }

    //查询信息
    function showLocationMsg(damageId) {
        $.ajax({
            type: "get",
            url: asmsPro+"/relation/locationMsg/queryByBusinessId/" + damageId,
            contentType: "application/json;charset=utf-8",
            async: false,
            success: function (data) {
                var obj = data.result;
                console.log(obj)
                if(!obj || obj==null){
                    return
                }
                if (typeof obj === "object") {
                    var box = buildBoxWithLocationMsg(obj);
                    renderBoxContent("sta", box.sta);
                    renderBoxContent("str", box.str);
                    renderBoxContent("bl", box.bl);
                    renderBoxContent("wl", box.wl);
                }
                return false;

            },
            error: function (err) {
                // alert("部件查询失败:   " + err.msg);
            }
        });
    }
    function buildBoxWithLocationMsg(locationMsg) {
        var box = {
            airplane : param.businessData.model
        };

        box.sta = processOption("sta",{
            "min" : locationMsg.staMin,
            "symbolmin" : locationMsg.staMinOffset < 0 ? "0" : "1",
            "minOffset" : Math.abs(locationMsg.staMinOffset),
            "max" : locationMsg.staMax,
            "symbolmax" : locationMsg.staMaxOffset < 0 ? "0" : "1",
            "maxOffset" : Math.abs(locationMsg.staMaxOffset)
        });

        box.str = processOption("str",{
            "min" : Math.abs(locationMsg.strMin),
            "rlmin" : locationMsg.strMin < 0 ? "r" : "l",
            "symbolmin" : locationMsg.strMinOffset < 0 ? "0" : "1",
            "minOffset" : Math.abs(locationMsg.strMinOffset),

            "max" : Math.abs(locationMsg.strMax),
            "rlmax" : locationMsg.strMax < 0 ? "r" : "l",
            "symbolmax" : locationMsg.strMaxOffset < 0 ? "0" : "1",
            "maxOffset" : Math.abs(locationMsg.strMaxOffset),
        });

        box.bl = processOption("bl",{
            "min" : Math.abs(locationMsg.blMin),
            "rlmin" : locationMsg.blMin < 0 ? "r" : "l",
            "max" : Math.abs(locationMsg.blMax),
            "rlmax" : locationMsg.blMax < 0 ? "r" : "l",
        });
        box.wl = processOption("wl",{
            "min" : locationMsg.wlMin,
            "max" : locationMsg.wlMax
        });
        return box;
    }





</script>
</html>