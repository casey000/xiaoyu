<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>

<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title>适用性类型</title>
</head>

<body class="ibody">
<div id="tt" class="easyui-tabs" style="width:100%; height: 100%">
    <fieldset class="fieldset_eui">
        <form class="form-horizontal m-t" id="mform">
            <input type="hidden" id="pkid" name="pkid"/>
            <input type="hidden" id="evalNo" name="evalNo"/>
            <table class="table table-bordered table-info">
                <tr id="view">
                    <td colspan="4" align="right">
                        <input class="btn btn-primary" id="saveBtn" type="button" onclick="save()" value="保存"
                               style="width: 50px;margin:5px;"/>
                        <input class="btn btn-primary" type="button" onclick="CloseWindowIframe();" value="关闭"
                               style="width: 50px;margin:5px;"/>
                    </td>
                </tr>
                <tr>
                    <th class="th" align="left" style="width: 80px;">范围类型：</th>
                    <td class="tdr" style="width: 150px">
                        <input class="easyui-combobox" id="rangeType" name="rangeType" data-options="required:true,editable:false"
                               style="width: 150px;"/>
                    </td>

                    <th class="th" align="left" style="width: 80px;">分组：</th>
                    <td class="tdr" style="width: 150px">
                        <input class="easyui-numberbox" id="groups" name="groups"
                               data-options="required:true,editable:true"
                               style="width: 50px;"/>
                    </td>
                </tr>
                <tr>
                    <th class="th" align="left" style="width: 80px;text-align: left">EXCEPT：</th>
                </tr>
            </table>
        </form>
    </fieldset>
    <table id="dg"></table>
</div>
</body>
<script type="text/javascript" src="/views/em/emmpdeval/applic/commonApplic.js"></script>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>

<script type="text/javascript">
    var param;
    var operation;
    var evalNo;
    var applType;
    var pkid;
    var spkid;//子表id
    var rangeType;
    var fleet = "";
    var type;
    function i18nCallBack() {
        param = getParentParam_();
        operation = param.operation;
        type = param.type;
        evalNo = param.evalNo;
        pkid = param.pkid;
        fleet = param.fleet;
        if (pkid == undefined) {
            pkid = "";
        }
        applType = param.applType;
        rangeType = getUrlParam("rangeType");
        //当适用性是发动机时，挑战发动机的all页面
        if (applType == 'ENG') {
            window.location.href = '/views/em/emmpdeval/applic/addDescApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("670", "630");
            return;
        }
        $("#evalNo").val(evalNo);
        if (operation == "view") {
            $("#view").hide();
        }
        if (type == "view") {
            $("#saveBtn").hide();
        }
        if (operation == "edit") {
            spkid = param.spkid;
            $("#spkid").val(spkid);
        }
        InitFuncCodeRequest_({
            data: {
                domainCode: "EM_RANGE_TYPE,YESORNO",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    $("#rangeType").combobox({
                        panelHeight: '135px',
                        data: jdata.data.EM_RANGE_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT',

                    });
                }
                if (param.pkid) {
                    InitDataForm(param.pkid);
                } else {
                    InitDataGrid();
                    changeRangeType();
                }

            }
        });
    }

    function InitDataGrid() {
        $("#dg").MyDataGrid({
            identity: 'dg',
            sortable: true,
            // singleSelect: true,
            // pageSize: 15,
            fitcolumn: true,
            enableLineEdit: true,
            enableCellEdit: true,
            queryParams: {fleet: fleet},
            pagination: false,
            // resize: function () {
            //     return tabs_standard_resize($('#tt'), 0, 1, 0, 0);
            // },
            columns: {
                param: {FunctionCode: "EM_ACNO_LIST"},
                alter: {
                    AIR_CATEGORY: {
                        formatter: function (value) {
                            return PAGE_DATA['airCategory'][value];
                        }
                    },
                }
            },
            onLoadSuccess: function (data) {
                if (data) {
                    $.each(data.rows, function (index, item) {
                        for (var j = 0, len = rangValues.length; j < len; j++) {
                            if (rangValues[j] == item.ACID) {
                                $('#dg').datagrid('checkRow', index);
                            }
                        }
                    });
                }
            },
            onBeforeLoad: function (data) {
            },
            onBeforeLoad: function (data) {
            },
            onEndEdit: function (index, row, changes) {
            },
            onBeginEdit: function (index, row) {
            }
        });
    }
    function changeRangeType() {
        var type;
        if (applType == "APL") {
            type = "A";
        } else if (applType == "PART") {
            type = "B";
        } else if (applType == "ENG") {
            type = "C";
        }
        InitFuncCodeRequest_({
            data: {mark: type, FunctionCode: "EM_RANGE_DOMAIN_TYPE"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    $('#rangeType').combobox({
                        panelHeight: '100px',
                        data: jdata.data,
                        onSelect: function (row) {
                            setPages(row.VALUE)
                        },
                        valueField: 'VALUE',
                        textField: 'TEXT',
                    });
                    $('#rangeType').combobox('setValue', rangeType);
                    if (rangeType == "ALL") {
                        //当范围类型为ALL时，禁用范围值控件
                        $("#rangeValue").attr("disabled", true);
                    }
                }
            }
        });

    }

    var rangValues = [];
    function InitDataForm(pkid) {
        InitFuncCodeRequest_({
            data: {pkid: pkid, FunctionCode: "EM_MPD_EVAL_APPLICABILITY_PKID"}, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    ParseFormField_(jdata.data, $("#mform"), Constant.CAMEL_CASE);
                    $('#rangeType').combobox({value: jdata.data.RANGE_TYPE, editable: false, onlyview: true});
                    rangeType = jdata.data.RANGE_TYPE;
                    //初始化范围值
                    InitFuncCodeRequest_({
                        data: {refPkid: pkid, FunctionCode: "EM_MPD_RANGE_VALUE_REF_PKID"},
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                for (var i = 0; i < jdata.data.length; i++) {
                                    rangValues[i] = jdata.data[i].VALUE;
                                }
                                // $("#spkid").val(jdata.data.PKID);
                                // $("#rangeValue").textbox({value: jdata.data.VALUE});
                                // $("#rangeValue").textbox('setValue',jdata.data.VALUE);
                                InitDataGrid();
                            } else {
                                MsgAlert({content: jdata.msg, type: 'error'});
                            }
                        }
                    });
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    // 保存
    function save() {
        //序列化列表数据
        var rows = $('#dg').datagrid('getChecked');
        for (i = 0; i < rows.length; i++) {
            rows[i] = toCamelCase(rows[i]);
        }
        var detailData = JSON.stringify(rows);

        var isValidate = $("#mform").form('validate');
        if (!isValidate)
            return;
        var $form = $("#mform");
        var mainData = JSON.stringify($('#mform').serializeObject());
        InitFuncCodeRequest_({
            data: {
                detailData: detailData,
                mainData: mainData,
                FunctionCode: "EM_MPD_EVAL_APPLIC_ALL_SAVE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    // param.OWindow.MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    param.OWindow.reloadg3();
                    CloseWindowIframe();
                } else {
                    if (jdata.msg.indexOf("EM_RANGE_TYPE_UNIQUE") != -1) {
                        MsgAlert({content: "已添加该类型适用性", type: 'error'});
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            }
        });
    }

    /*//页面重新加载
    function setPages(rangeType) {
        if (rangeType == "") {
        } else if (rangeType == 'ALL') {
            window.location.href = '/views/em/emmpdeval/applic/addAllApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("420", "470");
        } else if (rangeType == 'DESC') {
            window.location.href = '/views/em/emmpdeval/applic/addDescApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("670", "630");
        } else if (rangeType == 'PRE' || rangeType == 'POST') {
            window.location.href = '/views/em/emmpdeval/applic/addPostApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("400", "470");
        } else if (rangeType == 'PN') {
            window.location.href = '/views/em/emmpdeval/applic/addPnApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("900", "700");
        } else if (rangeType == 'SN') {
            window.location.href = '/views/em/emmpdeval/applic/addSnApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("900", "700");
        } else if (rangeType == 'LINENO') {
            window.location.href = '/views/em/emmpdeval/applic/addLineNoApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("670", "600");
        } else if (rangeType == 'SYS') {
            window.location.href = '/views/em/emmpdeval/applic/addConfigApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("820", "600");
        } else if (rangeType == 'ENGSERI') {
            window.location.href = '/views/em/emmpdeval/applic/addEngSeriApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("1060", "700");
        } else {
            window.location.href = '/views/em/emmpdeval/applic/addFleetApplic.shtml?rangeType=' + rangeType + '&evalNo=' + evalNo + '&applType=' + applType;
            window.resizeTo("420", "470");
        }
    }*/

    //paraName 等找参数的名称
    function getUrlParam(paraName) {
        var url = document.location.toString();
        var arrObj = url.split("?");
        if (arrObj.length > 1) {
            var arrPara = arrObj[1].split("&");
            var arr;
            for (var i = 0; i < arrPara.length; i++) {
                arr = arrPara[i].split("=");
                if (arr != null && arr[0] == paraName) {
                    return arr[1];
                }
            }
            return "";
        }
        else {
            return "";
        }
    }
</script>
</html>