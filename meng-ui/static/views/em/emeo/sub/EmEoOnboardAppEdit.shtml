<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="">
    <title>影响到的机载软件</title>
    <!--#include virtual="/views/items/resource_.shtml"-->
    <!--<link rel="stylesheet" href="/css/table.css">-->

    <script type="text/javascript" src="/views/ws/dict/pinyin_dict_firstletter.js"></script>
    <script type="text/javascript" src="/views/ws/dict/pinyinUtil.js"></script>

</head>
<body>

<div style="">
    <h5>适用性：</h5>
    <ul id="tt"></ul>
    <div class="ibox float-e-margins">
        <div class="ibox-content">
            <form class="form-horizontal m-t" id="mform">
                <input type="hidden" id="orgName" name="orgName"/>
                <table cellspacing="0" cellpadding="2" class="table table-bordered table-info">

                    <input style="display:none;" name="pkid" id="pkid"/>
                    <input style="display:none;" name="eoPkid" id="eoPkid"/>
                    <!--构型pkid-->
                    <input style="display:none;" name="configNo2" id="configNo2"/>
                    <!--变更后软件pkid-->
                    <input style="display:none;" name="afterSwPkid" id="afterSwPkid"/>
                    <tr>


                        <th class="tdl">
                            <a href="#" onclick="choose('befor')" style="text-decoration:underline;">软件构型号:</a>
                        </th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="configNo" id="configNo"
                                   data-options="onlyview:true,editable:false" />
                            <!--<input class="btn btn-primary" type="button" onclick="choose('befor')"
                                   value="选取"
                                   style="width: 40px;"/>-->
                        </td>
                        <th class="tdl">软件构型名称:</th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="configName" id="configName"
                                   data-options="onlyview:true,editable:false" />
                            <!--<input class="btn btn-primary" type="button" onclick="choose('after')"
                                   value="选取"
                                   style="width: 40px;"/>-->
                        </td>


                    </tr>
                    <tr>
                        <th class="tdl"><a href="#" onclick="chooseSw('before')" style="text-decoration:underline;">变更前软件件号:</a></th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="beforSwPn" id="beforSwPn"
                                   data-options="onlyview:true,editable:false"/>
                        </td>
                        <th class="tdl"><a href="#" onclick="chooseSw('after')" style="text-decoration:underline;">变更后软件件号:</a></th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="afterSwPn" id="afterSwPn"
                                   data-options="onlyview:true,editable:false"/>
                        </td>


                    </tr>
                    <tr>


                        <th class="tdl">变更前磁盘件号:</th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="beforDescPn" id="beforDescPn"
                                   data-options="onlyview:true,editable:false"/>
                        </td>

                        <th class="tdl">变更后磁盘件号:</th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="afterDescPn" id="afterDescPn"
                                   data-options="onlyview:true,editable:false"/>
                        </td>


                    </tr>

                    <tr>

                        <th class="tdl">变更前版本号:</th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="beforSwVer" id="beforSwVer"
                                   data-options="onlyview:true,editable:false"/>
                        </td>
                        <th class="tdl">变更后版本号:</th>
                        <td class="tdr">
                            <input class="easyui-textbox" name="afterSwVer" id="afterSwVer"
                                   data-options="onlyview:true,editable:false"/>
                        </td>
                    </tr>
                    <tr>
                        <th class="tdl">备注:</th>
                        <td colspan="3" class="tdr">
                          <textarea id="memo" name="memo"
                                    style="width: 98%;height:50px"></textarea>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="8" align="center">
                            <input class="btn btn-primary" id="save" onclick="InitSaveForm_();" type="submit" value="保存"
                                   style="margin:5px;"/>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
</div>

</body>
<script type="text/javascript">

    var param = {};
    var datan;
    var otherData;
    var otherDatan = [];
    var pkid;

    function i18nCallBack() {
        window.resizeTo("700", "500");
        window.moveTo(400, 150);
        param = getParentParam_();
        pkid = param.pkid;
        InitFuncCodeRequest_({
            data: {
                domainCode: "WS_SYS_ACCOUNT_STATE,WS_SYS_ACCOUNT_TYPE,HR_SEX,HR_ORG",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    /* $("#appGroup").MyComboGrid({
                         panelWidth: '200',
                         idField: 'VALUE',  //实际选择值
                         textField: 'TEXT', //文本显示值
                         editable: true,
                         required: true,
                         pagination: true,
                         tipPosition: 'top',
                         multiple: true,
                         mode: 'remote',
                         params: {eoPkid: param.eoPkid, FunctionCode: 'EM_EO_APP_SHOW'},
                         url: Constant.API_URL + 'EM_EO_APP_SHOW',
                         columns: [[
                             {field: 'VALUE', title: 'CODE', width: 100, sortable: true},
                             {field: 'TEXT', title: 'NAME', width: 100, sortable: true}
                         ]]
                     });*/
                    initData();
                    if (param.pkid) {
                        InitDataForm(param.pkid);
                    }
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        //InitSaveForm_();
    }

    /**
     * 初始化数据
     * @param pkid
     * @constructor
     */
    function InitDataForm(pkid) {
        InitFuncCodeRequest_({
            async : false,
            data: {pkid: pkid, FunctionCode: "EM_EO_ONBOARD_APP_PKID"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    ParseFormField_(jdata.data, $("#mform"), Constant.CAMEL_CASE);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function InitSaveForm_() {
        $('#eoPkid').val(param.eoPkid);
        var $form = $("#mform");
        $form.form({
            onSubmit: function () {
                var isValidate = $(this).form('validate');
                if (!isValidate) {
                    return false;
                }
                var data = $form.serializeObject();
                var configNo2 = $("#configNo2").val();
                var afterSwPkid = $("#afterSwPkid").val();

                if(!configNo2){
                    MsgAlert({content: "请选择软件构型", type: 'error'});
                    return;
                }
                if(!afterSwPkid){
                    MsgAlert({content: "请选取变更后软件", type: 'error'});
                    return;
                }

                var beforSwPn = $('#beforSwPn').textbox('getValue');
                var afterSwPn = $('#afterSwPn').textbox('getValue');
                var beforSwVer = $('#beforSwVer').textbox('getValue');
                var afterSwVer = $('#afterSwVer').textbox('getValue');
                if(!beforSwVer){
                    beforSwVer = '-1';
                }
                if(!afterSwVer){
                    afterSwVer = '-1';
                }

                if(beforSwPn){
                    if(beforSwPn == afterSwPn && beforSwVer == afterSwVer){
                        MsgAlert({content: "变更前和变更后软件不可相同", type: 'error'});
                        return;
                    }
                }

                var memo = $('#memo').val();
                if(memo && memo.length >= 1000){
                    MsgAlert({content: "备注不能超过1000个字符", type: 'error'});
                    return;
                }

                data = $.extend({}, data, {FunctionCode: "EM_EO_ONBOARD_APP_ADD"});
                InitFuncCodeRequest_({
                    data: data,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            //param.OWindow.reload_();
                            //MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_err:ERRMSG.COMMON.SUCCESS_CODE')});
                            //$form.form('clear');
                            pkid = jdata.data.pkid;
                            $('#pkid').val(pkid);
                            saveApp();
                        } else {
                            MsgAlert({content: jdata.msg, type: 'error'});
                        }
                    }
                });
                return false;
            }
        });
    }

    var objname = "";

    function choose(name) {
        objname = name;
        var title_ = $.i18n.t('选取软件构型');
        ShowWindowIframe({
            width: 774,
            height: 412,
            title: title_,
            param: {},
            url: "/views/em/emeo/sub/APP_LIST.shtml"
        });
    }

    function chooseSw(name) {
        var configNo2 = $('#configNo2').val();
        if(!configNo2){
            MsgAlert({content: '请先选择软件构型', type: 'error'});
            return;
        }
        var title_ = $.i18n.t('选取软件');
        ShowWindowIframe({
            width: 774,
            height: 412,
            title: title_,
            param: {configNo2 : configNo2, name: name},
            url: "/views/em/emeo/sub/SOFTWARE_LIST.shtml"
        });
    }

    //回显构型
    function setPn(obj) {
        $("#configNo2").val(obj.PKID);
        $("#configNo").textbox("setValue", obj.CONFIG_NO);
        $("#configName").textbox("setValue", obj.CONFIG_NAME);
    }

    //回显软件
    function setSoftWare(obj, name) {
        if(name == 'before'){
            $('#beforSwPn').textbox('setValue', obj.SW_PN);
            $('#beforDescPn').textbox('setValue', obj.DISK_PN);
            $('#beforSwVer').textbox('setValue', obj.SW_VER);
        }else if(name == 'after'){
            $('#afterSwPn').textbox('setValue', obj.SW_PN);
            $('#afterDescPn').textbox('setValue', obj.DISK_PN);
            $('#afterSwVer').textbox('setValue', obj.SW_VER);
            $('#afterSwPkid').val(obj.PKID);
        }
    }
    //适用性--start
    function initData() {
        InitFuncCodeRequest_({
            async : false,
            data: {
                pkid: pkid,
                eoPkid: param.eoPkid,
                FunctionCode: 'EM_EO_ONBOARD_APP_APP_LIST'
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {

                    InitTreegrid(jdata.data);
                }
                else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }

    function InitTreegrid(data) {
        if (!data) return;
        let otherDatan1 = [];
        if(otherData){
            for (let i = 0; i < data.length; i++) {
                otherDatan.push(toCamelCase(otherData[i]));
                if (otherDatan[i].checked == 1) {
                    otherDatan[i].checked = true;
                }

            }

            for (let i = 0; i < otherDatan.length; i++) {
                if (!otherDatan[i].appConfig) {

                    let id = otherDatan[i].id;
                    for (let l = 0; l < otherDatan.length; l++) {
                        if (otherDatan[l].appGroupPkid == id && otherDatan[l].appConfig) {
                            if (!otherDatan[i].children) {
                                let children = [];
                                otherDatan[i].children = children;
                            }
                            otherDatan[i].children.push(otherDatan[l])
                        }
                    }
                    otherDatan1.push(otherDatan[i]);
                }
            }

        }


        //找出已选中的适用性
        let selectedIds = [];
        if(otherDatan1.length > 0){
            for(let i = 0; i<otherDatan1.length; i++){
                if(otherDatan1[i].checked){ //父级被选中
                    selectedIds.push(otherDatan1[i].id);
                    if(otherDatan1[i].children && otherDatan1[i].children.length > 0){
                        for(let j = 0; j<otherDatan1[i].children.length; j++){
                            selectedIds.push(otherDatan1[i].children[j].id);
                        }
                    }
                }else{//父级未选中
                    let isChildren = false; //标识子级是否被选中
                    if(otherDatan1[i].children && otherDatan1[i].children.length > 0){
                        for(let j = 0; j<otherDatan1[i].children.length; j++){
                            if(otherDatan1[i].children[j].checked){
                                isChildren = true;
                                selectedIds.push(otherDatan1[i].children[j].id);
                            }
                        }
                        if(isChildren){//子级至少有一个选中时
                            selectedIds.push(otherDatan1[i].id);
                        }

                    }
                }
            }
        }

        datan = [];
        for (let i = 0; i < data.length; i++) {
            datan.push(toCamelCase(data[i]));
            if (datan[i].checked == 1) {
                datan[i].checked = true;
            }

        }
        let datan1 = [];
        for (let i = 0; i < datan.length; i++) {
            if (!datan[i].appConfig) {

                let id = datan[i].id;
                for (let l = 0; l < datan.length; l++) {
                    if (datan[l].appGroupPkid == id && datan[l].appConfig) {
                        if (!datan[i].children) {
                            let children = [];
                            datan[i].children = children;
                        }
                        datan[i].children.push(datan[l])
                    }
                }
                datan1.push(datan[i]);
            }
        }
        console.log(datan1);
        console.log(otherDatan1);
        console.log(selectedIds);


        $('#tt').tree({
            data: datan1,
            checkbox: true,
            idField: 'id',
            treeField: 'groupName',
            columns: [[
                {title: 'Task Name', field: 'groupName', width: 180},
                {field: 'persons', title: 'Persons', width: 60, align: 'right'},
                {field: 'begin', title: 'Begin Date', width: 80},
                {field: 'end', title: 'End Date', width: 80}
            ]],
            onCheck:function(node, checked){
                console.log(node);
                if (checked) {
                    /*if(node.id == 2218 || node.id == '2218_Config2'){
                        $('#tt').tree('uncheck', node.target);
                    }*/
                    if(selectedIds.length != 0 && selectedIds.indexOf(node.id) > -1){
                        $('#tt').tree('uncheck', node.target);
                    }
                }
            }
        });

    }

    function saveApp() {
        var data = {};
        var node = $('#tt').tree('getChecked');
        var appGroup = JSON.stringify(node);
        data = $.extend(data, {
            pkid: pkid,
            eoPkid: param.eoPkid,
            appGroup: appGroup
        }, {FunctionCode: 'EM_EO_ONBOARD_APP_APP_ADD'});

        InitFuncCodeRequest_({
            async: false,
            data: data,
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    param.OWindow.reload_();
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_err:ERRMSG.COMMON.SUCCESS_CODE')});
                    CloseWindowIframe();
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }
</script>
</html>