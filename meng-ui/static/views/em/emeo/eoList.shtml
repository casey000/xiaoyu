<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title data-i18n="">EO</title>
</head>
<body class="ibody">
<div id="tt" class="title" style="width:100%; height: 100%">
    <fieldset class="fieldset_eui">
        <legend data-i18n="common:COMMON_OPERATION.SEARCH">搜索</legend>
        <div id="searchBar">
            <form id="ffSearch" class="form-horizontal">
                <table class="table table-bordered table-info">
                    <tr>
                        <th style="width:60px;" align="right">EO编号：</th>
                        <td style="width:120px">
                            <input class="easyui-textbox" id="eoNo" name="eoNo" style="width: 120px"/>
                        </td>
                        <th style="width:60px;" align="right">适用类型：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="applyType" name="applyType" style="width:120px;"/>
                        </td>
                        <th style="width:60px;" align="right">状态：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="status" name="status" style="width:120px;"/>
                        </td>
                        <th style="width:60px;" align="right">当前操作人：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="writeMan" name="writeMan" style="width:120px;"/>
                        </td>
                        <th style="width:60px;" align="right">OWNER：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="quaMan" name="quaMan" style="width:120px;"/>
                        </td>
                        <td>
                            <a class="searchBtn" onclick="sendSap()" data-options="iconCls:'icon-clear'" auth="EM_EO_SEND">
                                <span data-i18n="">推送</span></a>
                            <a class="searchBtn" type="button" onclick="searchData()"
                               data-options="iconCls:'icon-search'">
                                <span data-i18n="common:COMMON_OPERATION.QUERY">查询</span></a>
                            <a class="clearBtn" onclick="doClear_()" data-options="iconCls:'icon-clear'">
                                <span data-i18n="common:COMMON_OPERATION.RESET">重置</span></a>
                            <a class="searchBtn" onclick="editDetailData('add')" data-options="iconCls:'icon-clear'" auth="EM_EO_ADD">
                                <span data-i18n="">增加</span></a>

                        </td>
                    </tr>
                    <tr>
                        <th style="width:60px;" align="right">旧EO编号：</th>
                        <td style="width:120px">
                            <input class="easyui-textbox" id="oldEoNo" name="oldEoNo" style="width:120px;"/>
                        </td>
                        <th  style="width:60px;" align="right">章节：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="ata" name="ata" style="width:120px;"/>
                        </td>

                        <th style="width:60px;" align="right">适用型号：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="applyModel" name="applyModel" style="width:120px;"/>
                        </td>

                        <th style="width:60px;" align="right">工作性质：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="jobCategory" name="jobCategory" style="width:120px;"/>
                        </td>
                        <th style="width:60px;" align="right">评估产生：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="ifEvaProduce" name="ifEvaProduce" style="width:120px;"/>
                        </td>
                        <td colspan="1">
                            <a class="ridoBtn"  data-options=""
                               onclick="helpQuery('dg', 'EM_EO_LIST_ADMIN');"><span
                                    data-i18n="">高级查询</span></a>
                            <a class="excelBtn" data-options="iconCls:'icon-page_excel'" auth="EM_EO_EXCEPT"
                               onclick="excelExport('dg','EO','EM_EO_LIST_ADMIN')"><span>导出</span></a>
                            <!--<a class="excelBtn"  data-options="iconCls:'icon-page_excel'"
                               onclick="coefficient()"><span>工时系数</span></a>-->
                            <!--<a class="excelBtn" style="width:80px;" data-options="iconCls:'icon-page_excel'"
                               onclick="test()"><span>test</span></a>-->
                        </td>
                    </tr>
                    <tr>
                        <th  style="width:60px;" align="right">禁限装：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="eoType" name="eoType" style="width:120px;"/>
                        </td>

                        <th style="width:60px;" align="right">执行方式：</th>
                        <td style="width:120px">
                            <input class="easyui-combobox" id="exeMode" name="exeMode" style="width:120px;"/>
                        </td>
                        <th style="width:60px;" align="right">部件号：</th>
                        <td style="width:120px">
                            <input class="easyui-textbox" id="pn" name="pn" style="width:120px;"/>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </fieldset>
    <table id="dg"></table>
</div>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript">
    var PAGE_DATA = {};
    var COMBOBOX_DATA = {};
    var flag = "";
    var companyCode;
    var name = getLoginInfo().userName;
    var accountId = getLoginInfo().accountId;
    var executionId = ""; //流程实例ID
    var user;
    var checkQua; //提交资质
    var evalStaus; //EO关联的评估单状态
    var flag = true;
    var eoNoCount;
    function i18nCallBack() {
        //绑定回车查询事件
        bindFormonSearch_('#ffSearch', function () {
            searchData()
        });
        InitFuncCodeRequest_({
            data: {
                domainCode: "EM_APPL_TYPE,EM_EO_STATUS,EMTB_ATA,EM_MPD_REPAIR_LEVAL,EM_LIMIT_TYPE,EO_APPLY_MODEL,EM_EO_MONITOR_STATUS," +
                "EM_EO_NUMBER_WORK_TYPE,YESORNO,EM_EO_WRITE_MAN,EM_EO_CHECK_MARK,EM_EO_QUA_MAN,EO_TYPE,EM_EO_EXE_MODE",
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE"
            },
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    //适用类型
                    $('#applyType').combobox({
                        panelHeight: '100px',
                        data: jdata.data.EM_APPL_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });
                    // 状态status
                    $('#status').combobox({
                        panelHeight: '150px',
                        data: jdata.data.EM_EO_STATUS,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        value: '00'
                    });
                    //章节
                    $('#ata').combobox({
                        panelHeight: '100px',
                        data: jdata.data.EMTB_ATA,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });

                    var APPLYMODEL = [];
                    $('#applyModel').combobox({
                        panelHeight: '100px',
                        data: jdata.data.EO_APPLY_MODEL,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });
                    //工作性质
                    $('#jobCategory').combobox({
                        panelHeight: '60px',
                        data: jdata.data.EM_EO_NUMBER_WORK_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT'
                    });

                    $('#writeMan').combobox({
                        panelHeight: '140px',
                        data: jdata.data.EM_EO_WRITE_MAN,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                        value: name,
                    });

                    $('#quaMan').combobox({
                        panelHeight: '140px',
                        data: jdata.data.EM_EO_QUA_MAN,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                    });

                    $('#ifEvaProduce').combobox({
                        panelHeight: '140px',
                        data: jdata.data.YESORNO,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                    });

                    //EO类型
                    $('#eoType').combobox({
                        panelHeight: '60px',
                        data: jdata.data.EO_TYPE,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                    });
                    //执行方式
                    $('#exeMode').combobox({
                        panelHeight: '60px',
                        data: jdata.data.EM_EO_EXE_MODE,
                        valueField: 'VALUE',
                        textField: 'TEXT',
                    });

                    PAGE_DATA['status'] = DomainCodeToMap_(jdata.data["EM_EO_STATUS"]);
                    PAGE_DATA['applyType'] = DomainCodeToMap_(jdata.data["EM_APPL_TYPE"]);
                    PAGE_DATA['jobCategory'] = DomainCodeToMap_(jdata.data["EM_EO_NUMBER_WORK_TYPE"]);
                    PAGE_DATA['yesorno'] = DomainCodeToMap_(jdata.data["YESORNO"]);
                    PAGE_DATA['monitorState'] = DomainCodeToMap_(jdata.data["EM_EO_MONITOR_STATUS"]);
                    PAGE_DATA['repairLevel'] = DomainCodeToMap_(jdata.data["EM_MPD_REPAIR_LEVAL"]);
                    PAGE_DATA['tlimitType'] = DomainCodeToMap_(jdata.data["EM_LIMIT_TYPE"]);
                    PAGE_DATA['EM_EO_CHECK_MARK'] = DomainCodeToMap_(jdata.data["EM_EO_CHECK_MARK"]);

                    //获取CompanyCode
                    /*InitFuncCodeRequest_({
                        async: false,
                        data: {FunctionCode: "COMMON_COMPANY_CODE"},
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                companyCode = jdata.data;
                                $("#writeMan").textbox("setValue", name);
                                $("#status").combobox("setValue", "00");
                                var fromId = fromId || "#ffSearch";
                                var queryParams = $(fromId).serializeObject();
                                let radis = {};
                                $(":radio").each(function () {
                                    let radioName = $(this).attr('name');
                                    radis[radioName] = $("input[name='" + radioName + "']:checked").val();
                                });

                                $(":checkbox").each(function () {
                                    radis[$(this).attr('name')] = $(this).is(':checked') ? "Y" : "";
                                });
                                companyCode = $.extend({}, queryParams, radis);
                            }
                        }
                    });*/

                    $("#status").combobox('setValue','00');
                    $("#writeMan").combobox('setValue',name);
                    InitDataGrid();
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }

            }
        });
    }

    function InitDataGrid() {
        var pageSize = Math.floor(($(document.body).height() - $("fieldset").height() - 50) / 20);
        $("#dg").MyDataGrid({
            identity: 'dg',
            firstLoad:false,
            sortable: true,
            singleSelect: true,
            queryParams: {},
            pageSize: pageSize,
            pageList: [pageSize],
            resize: function () {
                return tabs_standard_resize($("#tt"), 0.1, 0.0001, 0, 0);
            },
            columns: {
                param: {FunctionCode: 'EM_EO_LIST_ADMIN'},
                alter: {
                    IF_WEIGHT_BALANCING: {
                        formatter: function (value) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    IF_ELECTRICAL_LOAD: {
                        formatter: function (value) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    IF_INFLUENCE_EO: {
                        formatter: function (value) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    IF_EVA_PRODUCE: {
                        formatter: function (value) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    STATUS: {
                        formatter: function (value) {
                            return PAGE_DATA['status'][value];
                        }
                    },
                    APPLY_TYPE: {
                        formatter: function (value) {
                            return PAGE_DATA['applyType'][value];
                        }
                    },
                    JOB_CATEGORY: {
                        formatter: function (value) {
                            return PAGE_DATA['jobCategory'][value];
                        }
                    },
                    IF_INFLUENCE_EO: {
                        formatter: function (value) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    MONITOR_STATE: {
                        formatter: function (value) {
                            return PAGE_DATA['monitorState'][value];
                        }
                    },
                    REPAIR_LEVEL: {
                        formatter: function (value) {
                            return PAGE_DATA['repairLevel'][value];
                        }
                    },
                    TLIMIT_TYPE: {
                        formatter: function (value) {
                            return PAGE_DATA['tlimitType'][value];
                        }
                    },
                    WRITE_DEADLINE: {
                        type: 'date'
                    },
                    WRITE_DATE: {
                        type: 'date'
                    },
                    QUA_DATE: {
                        type: 'date'
                    },
                    NEW_WRITE_DATE: {
                        type: 'date'
                    },
                    AUDIT_DATE: {
                        type: 'date'
                    },
                    APPROVAL_DATE: {
                        type: 'date'
                    },
                    OPPORTUNITY_CHECK_FLAG: {
                        formatter: function (value) {
                            return PAGE_DATA['EM_EO_CHECK_MARK'][value];
                        }
                    }
                }
            },
            onDblClickRow: function (index, field, value) {
                openDetai("view", value.PKID,value.IF_EVA_PRODUCE, value.EVAL_APPLY_TYPE, value.EO_VER, value.JOB_CATEGORY, value.APPLY_TYPE);
            },
            onLoadSuccess: function () {
                InitSuspend('a.attach', {
                    'onmouseover': function (thiz, event, callback) {
                        var index = $(thiz).attr("rowindex");
                        var row = $("#dg").datagrid('getRows')[index];
                        InitFuncCodeRequest_({
                            data: {
                                SOURCE_ID: row.PKID,
                                CATEGORY: "dmDataRecExter",
                                FunctionCode: 'ATTACHMENT_RSPL_GET'
                            },
                            successCallBack: function (jdata) {
                                if (jdata.code === RESULT_CODE.SUCCESS_CODE) {

                                }
                                var html = "";
                                for (var i = 0; i < jdata.data.length; i++) {
                                    html += '<li><a target="_blank" onclick="downFileLocal(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a><span onclick="deleteFile(\'' + jdata.data[i].PKID + '\');return false;" class="icon-cross"></span></li>';
                                }
                                callback(html);
                            }
                        });
                    }
                });
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编写", auth: "EM_EO_EDIT",
                    onclick: function () {
                        var rowData = getDG('dg').datagrid('getSelected');
                        var cou = rowData.COU;
                        var couzh = rowData.COUZH;
                        var ifEvaProduce = rowData.IF_EVA_PRODUCE;
                        var evalApplyType = rowData.EVAL_APPLY_TYPE;
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }

                        if(rowData.QUA_MAN_ID != accountId){
                            MsgAlert({content: "不是当前操作人无法编写！", type: 'error'});
                            return;
                        }

                        /*if (!(cou == 0 || couzh > 0)) {
                            MsgAlert({content: '已经转发，且未转回，不能编写！', type: 'error'});
                            return;
                        }*/

                        flag = "E";
                        openDetai('edit', rowData.PKID, ifEvaProduce, evalApplyType, rowData.EO_VER, rowData.JOB_CATEGORY, rowData.APPLY_TYPE);
                    }
                },

                {
                    id: "m-issue", i18nText: "改版", auth: "EM_EO_GB",
                    onclick: function () {
                        var rowData = getDG('dg').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        var evalProuceCount = rowData.EVAL_APPLY_TYPE;
                        /*if(evalProuceCount && evalProuceCount > 0){
                            MsgAlert({content: "评估单产生的EO不可改版！", type: 'error'});
                            return;
                        }*/
                        var stopCount = 0;
                        InitFuncCodeRequest_({
                            async: false,
                            data: {eoPkid: rowData.PKID, FunctionCode: 'EM_EOEA_STOP_EO_PKID_COUNT'},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    stopCount = jdata.data.COUNT_DATA;
                                }
                            }
                        });
                        if(stopCount != 0){
                            MsgAlert({content: "已终止或者终止中的EO不可改版！", type: 'error'});
                            return;
                        }
                        //只有当前操作人才可改版
                        if (rowData.QUA_MAN_ID != accountId) {
                            MsgAlert({content: "只有当前操作人才可改版", type: 'error'});
                            return;
                        }
                        copy(rowData.PKID, evalProuceCount);
                    }
                },
                {
                    id: "m-edit", i18nText: "转发", auth: "EM_EO_TRANSMIT",
                    onclick: function () {
                        var rowData = getDG('dg').datagrid('getSelected');
                        var cou = rowData.COU;
                        var couzh = rowData.COUZH;
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        if (rowData.QUA_MAN_ID != accountId) {
                            MsgAlert({content: "只有当前操作人才能转发", type: 'error'});
                            return;
                        }
                        //初始转发只能对状态为评估中且未有转发或转发已经转回的记录进行此操作
                        /*if ('00' != rowData.STATUS) {
                            MsgAlert({content: '状态不是编写中，不允许转发！', type: 'error'});
                            return;
                        }*/
                        /*if (!(cou == 0 || couzh > 0)) {
                            MsgAlert({content: '已经转发，且未转回，不能再次转发！', type: 'error'});
                            return;
                        }*/
                        ShowWindowIframe({
                            width: 550,
                            height: 250,
                            title: "转发",
                            param: {accId: rowData.QUA_MAN_ID, pkid: rowData.PKID},
                            url: '/views/em/emeo/emEo_filetrans.shtml'
                        });

                        //  openDetai('edit', rowData.PKID);
                    }
                },
                {
                    id: "m-edit", i18nText: "办理轨迹", auth: "",
                    onclick: function () {
                        var row = $('#dg').datagrid('getSelected');
                        var cou = row.COU;
                        var couzh = row.COUZH;
                        if (cou == 0) {
                            MsgAlert({content: '没有办理轨迹！', type: 'error'});
                            return;
                        }
                        tranHis(row.PKID);
                    }
                },
                {
                    id: "m-delete", i18nText: "删除", auth: "EM_EO_DEL",
                    onclick: function () {

                        var rowData = getDG('dg').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        /*var cou = rowData.COU;
                        var couzh = rowData.COUZH;*/

                        if(rowData.EVAL_APPLY_TYPE > 0){
                            MsgAlert({content: "评估产生的EO不可在此处删除！", type: 'error'});
                            return;
                        }

                        if (rowData.QUA_MAN_ID != accountId) {
                            MsgAlert({content: "只有当前操作人才能删除", type: 'error'});
                            return;
                        }

                        /* if (!(cou == 0 || couzh > 0)) {
                             MsgAlert({content: '已经转发，且未转回，不能删除！', type: 'error'});
                             return;
                         }*/
                        if (!confirm("确认删除该记录？")) {
                            return;
                        }

                        /*InitFuncCodeRequest_({
                            async : false,
                            data: {FunctionCode: 'EM_EO_JC_RELATE_DEL_COU', eoPkid: rowData.PKID},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    InitFuncCodeRequest_({
                                        async : false,
                                        data: {FunctionCode: 'EM_EO_JC_RELATE_DELALL', eoPkid: rowData.PKID},
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                InitFuncCodeRequest_({
                                                    async : false,
                                                    data: {pkid: rowData.PKID, FunctionCode: 'EM_EO_DEL'},
                                                    successCallBack: function (jdata) {
                                                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                            MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                                            reload_();
                                                        } else {
                                                            MsgAlert({content: jdata.msg, type: 'error'});
                                                        }
                                                    }
                                                });
                                            }
                                            else {
                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                            }
                                        }
                                    });
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });*/

                        InitFuncCodeRequest_({
                            async : false,
                            data: {pkid: rowData.PKID, FunctionCode: 'EM_EO_DEL'},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                                    reload_();
                                } else {
                                    MsgAlert({content: jdata.msg, type: 'error'});
                                }
                            }
                        });
                    }
                },
                {
                    id: "m-submit", i18nText: "提交", auth: "EM_EO_SUBMIT",
                    onclick: function () {
                        var rowData = getDG('dg').datagrid('getSelected');
                        var evalApplyType = rowData.EVAL_APPLY_TYPE;
                        var applyType = rowData.APPLY_TYPE;
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }

                        //评估单产生的，EE必须提交了工作流后才可提交
                        if(evalApplyType > 0){
                            checkEvalStaus(rowData.PKID, rowData.APPLY_TYPE);
                            if(evalStaus && evalStaus == 'PGZ'){
                                MsgAlert({content: "关联的评估单状态为评估中不能提交该EO！", type: 'error'});
                                return;
                            }
                        }

                        /*var cou = rowData.COU;
                        var couzh = rowData.COUZH;

                        if (!(cou == 0 || couzh > 0)) {
                            MsgAlert({content: '已经转发，且未转回，不能提交！', type: 'error'});
                            return;
                        }*/
                        //1.处理人才能提交
                        if (rowData.QUA_MAN_ID != accountId) {
                            MsgAlert({content: "只有当前操作人才可提交", type: 'error'});
                            return;
                        }

                        var pkid = rowData.PKID;
                        var eoNoCount = rowData.EO_COU;

                        var app = '';
                        InitFuncCodeRequest_({
                            data: {eoPkid: pkid, FunctionCode: 'EM_EO_TLIMIT_DETAIL_CHECK'},
                            async: false,
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    if (jdata.data != null) {
                                        app = jdata.data.APP;
                                    }
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });
                        if (app && applyType == 'APL') {
                            MsgAlert({content: "时限引用的以下适用性["+app+"]在EO适用性里不存在，请先在时限位置重新保存再提交！", type: 'error'});
                            return;
                        }

                        //EM_EO_STATUS
                        var datass = $.extend({}, {}, {FunctionCode: 'EM_EO_STATUS', pkid: rowData.PKID});
                        InitFuncCodeRequest_({
                            data: datass,
                            successCallBack: function (jdata) {
                                if (jdata.code != null) {
                                    ajaxLoading();
                                    var datas = $.extend({}, {}, {FunctionCode: 'EM_EO_CHECKDATA', pkid: rowData.PKID, list:'Y'});
                                    InitFuncCodeRequest_({
                                        data: datas,
                                        successCallBack: function (jdata) {
                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                //2.资质检查
                                                var model = '';
                                                if(rowData.APPLY_TYPE != 'PART'){//部件资质检查不需要适用型号
                                                    model = rowData.APPLY_MODEL;
                                                }else{
                                                    model = 'CM';
                                                }
                                                checkSumitQua(model, rowData.ATA);
                                                //3.没有资质选择一个有资质的人
                                                if(!checkQua){
                                                    if(!confirm('当前用户无提资质，请选择资质人?')){
                                                        ajaxLoadEnd();
                                                        return;
                                                    }
                                                    chooseQua(model, rowData.ATA, rowData.PKID, '');
                                                }else{
                                                    //EO/EA含有对应的EO/EA工卡 且 EO/EA非初始版本(给出提醒，但是不拦截)
                                                    var jcCou = 0;
                                                    InitFuncCodeRequest_({
                                                        data: {eoPkid: pkid, FunctionCode: 'EM_EO_JC_COU'},
                                                        async: false,
                                                        successCallBack: function (jdata) {
                                                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                                                if (jdata.data != null) {
                                                                    jcCou = jdata.data.COU;
                                                                }
                                                            } else {
                                                                MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                                            }
                                                        }
                                                    });
                                                    if (jcCou > 0 && eoNoCount > 1) {
                                                        alert("注意：改版此EO/EA请关注对应工卡是否同步修改，如需修改请到工卡模块手动发起改版");
                                                    }
                                                    common_add_edit_({
                                                        identity: '',
                                                        isEdit: '',
                                                        width: 520,
                                                        height: 300,
                                                        title: $.i18n.t('选择审批人'),
                                                        param: {
                                                            roleId: '',
                                                            otherParam: rowData.PKID,
                                                            FunctionCode_: 'EM_EO_START',
                                                            successCallback: reload_,
                                                            flowKey:"eoshenhe"
                                                        },
                                                        url: "/views/flow/work_flow_account_select.shtml"
                                                    });
                                                }

                                            } else {
                                                hints(jdata.msgData[0]);
                                            }
                                            ajaxLoadEnd();
                                        }
                                    });
                                } else {
                                    MsgAlert({content: "该数据已被提交过了。", type: 'error'});
                                }
                            }
                        });

                    }
                },
                {
                    id: "m-view", i18nText: "执行记录",
                    onclick: function () {
                        var rowData = $("#dg").datagrid('getSelected');
                        var pkid = rowData.PKID;
                        if(!pkid){
                            MsgAlert({content: '请选择记录', type: 'warn'});
                            return;
                        }
                        ShowWindowIframe({
                            width: 1100,
                            height: 600,
                            title: $.i18n.t('执行记录'),
                            param: {eoNo : rowData.EO_NO, eoEa: rowData.EO_EA, eoPkid: pkid, eoVer : rowData.EO_VER, applyType: rowData.APPLY_TYPE},
                            url: '/views/em/emeo/eo_execute_list.shtml'
                        });

                    }
                },

                {
                    id: "m-stop", i18nText: "终结", auth:"EM_EO_STOP",
                    onclick: function () {
                        var rowData = $("#dg").datagrid('getSelected');
                        var pkid = rowData.PKID;
                        if(!pkid){
                            MsgAlert({content: '请选择记录', type: 'error'});
                            return;
                        }

                        var count = 0;
                        InitFuncCodeRequest_({
                            async : false,
                            data: {FunctionCode: 'EM_EOEA_STOP_COUNT', eoPkid: rowData.PKID},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    count = jdata.data.STOP_COUNT;
                                }
                            }
                        });

                        if(count != 0){
                            MsgAlert({content: '不可重复终止', type: 'error'});
                            return;
                        }

                        var sta = '';
                        var eoNo = rowData.EO_NO;
                        InitFuncCodeRequest_({
                            data: {eoNo: eoNo, FunctionCode: 'EM_EO_CHECK_ZJ'},
                            async: false,
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    if (jdata.data != null) {
                                        sta = jdata.data.STATUS;
                                    }
                                } else {
                                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                }
                            }
                        });
                        if (sta != '03') {
                            MsgAlert({content: "该文件存在高版数据，请先处理高版数据再提交终结流程！", type: 'error'});
                            return;
                        }

                        ShowWindowIframe({
                            width: 820,
                            height: 270,
                            title: $.i18n.t('终止申请'),
                            param: {eoPkid : pkid,eoNo: rowData.EO_NO, eoVer: rowData.EO_VER, eoEa: rowData.EO_EA},
                            url: '/views/em/emstop/em_eo_stop_add.shtml'
                        });

                    }
                },

                {
                    id: "m-print", i18nText: "打印", auth: "EM_EO_PRINT",
                    onclick: function () {
                        var rowData = getDG('dg').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        ajaxLoading();
                        InitFuncCodeRequest_({
                            data: {pkid: rowData.PKID, FunctionCode: 'EM_EO_PRINT'},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    var urls = jdata.data;
                                    if (urls.indexOf(":") != -1) {
                                        urls = urls.substring(urls.indexOf(":") + 1).replace("//", "/");
                                    }
                                    jcPreview(urls);
                                } else {
                                    MsgAlert({content: jdata.msg, type: "error"});
                                }
                                ajaxLoadEnd();
                            }
                        });
                    }
                },

                {
                    id: "m-turn-act", i18nText: "流程退回", auth: "",
                    onclick: function () {
                        var row = $('#dg').datagrid('getSelected');
                        var evapkid = row.PKID;
                        if (row.WRITE_MAN_ID != accountId && row.NEW_WRITE_MAN != name) {
                            MsgAlert({content: "您不是此条记录的OWNER或者处理人，不允许驳回！", type: 'error'});
                            return;
                        }
                        if (row.STATUS != '01' && row.STATUS != '02') {
                            MsgAlert({content: '只有流程中状态的数据才能退回！', type: 'error'});
                            return;
                        }
                        turnEoAct(row);
                    }
                }

            ],
            validAuth: function (row, items) {
                if (row.STATUS == '-1') { //终止只能查看可打印
                    items['编写'].enable = false;
                    items['改版'].enable = false;
                    items['转发'].enable = false;
                    items['删除'].enable = false;
                    items['提交'].enable = false;
                    items['终结'].enable = false;
                    items['流程退回'].enable = false;
                }

                //只有编写状态中才能编写、提交、转发
                if(row.STATUS != "00"){
                    items['编写'].enable = false;
                    items['提交'].enable = false;
                    items['转发'].enable = false;
                }

                //只有生效状态才能改版
                if(row.STATUS != "03"){
                    items['改版'].enable = false;
                }
                //只有编写状态或退回状态才能删除
                if (row.STATUS != "00" && row.STATUS != '05') {
                    items['删除'].enable = false;
                }

                //非评估单产生且生效状态
                if(row.IF_EVA_PRODUCE != 'N' || row.STATUS != '03'){
                    items['终结'].enable = false;
                }

                return items;
            },
        });
    }

    /**
     * 校验工作流是否已经存在
     *
     **/
    function validWorkFlow(objKey, objNo) {
        InitFuncCodeRequest_({
            async: false,
            data: {objKey: objKey, objNo: objNo, FunctionCode: 'VALID_WORK_FLOW'},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if (jdata.data) {
                        executionId = jdata.data.EXECUTION_ID;
                    }
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
        return executionId;
    }
    //改版
    function copy(mpkid, evalProuceCount) {
        if (!confirm("确定要改版")) {
            return;
        }

        var datas = $.extend({}, {pkid: mpkid, evalProuceCount:evalProuceCount, FunctionCode: 'EM_EO_COPY'});
        InitFuncCodeRequest_({
            async: false,
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    reload_()
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    //发布
    function issue(mpkid) {
        var $form = $("#mform");
        var datas = $form.serializeObject();
        datas = $.extend({}, datas, {mpkid: mpkid, FunctionCode: 'DM_DATA_REC_EXTER_ISS'});
        //发布前，需先验证是否上传附件，如果没有，则不能发布
        InitFuncCodeRequest_({
            data: datas, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    searchData();
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }

    function tranHis(eoPkid) {
        var title_ = $.i18n.t('转发记录列表');
        ShowWindowIframe({
            width: "790",
            height: "519",
            title: title_,
            param: {eoPkid: eoPkid},
            url: "/views/em/emeo/emEo_tran_list.shtml"
        });
    }


    //刷新
    function reload_() {
        $("#dg").datagrid("reload");
    }

    //新增
    function editDetailData(operation) {
        flag = "A";
        openDetai(operation, '');
    }

    //打开资料类型详细页面
    function openDetai(operation, pkid, ifEvaProduce, evalApplyType, eoVer, jobCategory, applyType) {
        var title_ = $.i18n.t('EO详细页');
        ShowWindowIframe({
            width: "1248",
            height: "720",
            title: title_,
            param: {operation: operation, pkid: pkid, ifEvaProduce: ifEvaProduce, evalApplyType: evalApplyType, eoVer: eoVer, jobCategory:jobCategory,applyType:applyType},
            url: "/views/em/emeo/eoEdit.shtml"
        });
    }

    //查询
    /*function searchData() {
        var fromId = fromId || "#ffSearch";
        var dgopt = getDgOpts('dg');
        var $dg = $(dgopt.owner);
        var url = dgopt.url;
        if ($dg && url) {
            var queryParams = $(fromId).serializeObject();
            let radis = {};
            $(":radio").each(function () {
                let radioName = $(this).attr('name');
                radis[radioName] = $("input[name='" + radioName + "']:checked").val();
            });

            $(":checkbox").each(function () {
                radis[$(this).attr('name')] = $(this).is(':checked') ? "Y" : "";
            });
            queryParams = $.extend({}, dgopt.queryParams, dgopt._params, queryParams, radis);
            if (typeof(breforSearch) == 'function') {
                breforSearch(queryParams);
            }
            clearAdvancedQueryData(queryParams);
            if (dgopt.treeField) {
                $dg.treegrid('load', queryParams);
            } else {
                $dg.datagrid('load', queryParams);
            }
        }
    }
*/
    //重置
    function doClear_() {
        $("#ffSearch").form('clear');
        searchData();
    }

    //上传
    function common_uploadFile(edopt) {
        var title_ = $.i18n.t('common:COMMON_OPERATION.UPLOAD');
        ShowWindowIframe({
            width: 575,
            height: 200,
            title: title_,
            param: $.extend({}, edopt.param),
            url: "/views/data_manager/dm/upload/attachment_add.shtml"
        });
    }

    //工时系数维护
    function coefficient() {
        var title_ = $.i18n.t('工时系数维护');
        ShowWindowIframe({
            width: 575,
            height: 200,
            title: title_,
            url: "/views/em/emeo/EmEoCoefficientEdit.shtml"
        });
    }

    function jcPreview(url) {
        ShowWindowIframe({
            width: 1200,
            height: 650,
            param: {url: url},
            title: "EO预览PDF",
            url: "/views/em/emeo/emeo_add_pdf.shtml"
        });
    }

    function hints(mgs) {
        ShowWindowIframe({
            width: 300,
            height: 300,
            param: {mgs: mgs},
            title: "EO提示",
            url: "/views/em/emeo/eoHints.shtml"
        });

    }

    //查询
    function searchData() {
        var writeManT = $('#writeMan').combobox('getText');
        if(!writeManT){
            $('#writeMan').combobox('setValue', '');
        }
        onSearch_('dg', '#ffSearch');
    }
    /*function test() {
        InitFuncCodeRequest_({
            data: {FunctionCode : 'EM_EO_VI_FOR_ME'}, successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    MsgAlert({content: jdata.msg ? jdata.msg : $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    searchData();
                } else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                }
            }
        });
    }*/

    //EO提交资质检查
    function checkSumitQua(applyModel, ata) {
        InitFuncCodeRequest_({
            async : false,
            data: {FunctionCode: 'EM_EO_SUBMIT_QUA_CHECK',
                applyModel: applyModel, ata: ata, taskType:'EMFILEEVAL', divisionQua: 'QUA', accountId : accountId},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    if(jdata.data.CHECK_COUNT && jdata.data.CHECK_COUNT > 0){
                        checkQua = true;
                    }else{
                        checkQua = false;
                    }
                }
                else {
                    MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    checkQua = false;
                }
            }
        });
    }

    //选择有资质的人
    function chooseQua(applyModel, ata, eoPkid, type) {
        var title_ = '资质人选择';
        ShowWindowIframe({
            width: 600,
            height: 500,
            title: title_,
            param: {applyModel: applyModel, ata: ata, taskType:'EMFILEEVAL', divisionQua: 'QUA', eoPkid: eoPkid, type: type},
            url: "/views/em/emeo/em_eo_qua_list.shtml"
        });
    }


    //查询评估单状态
    function checkEvalStaus(pkid, applyType) {
        InitFuncCodeRequest_({
            async: false,
            data: {eoPkid: pkid, eoEa: 'EO', applyType: applyType ,FunctionCode: 'EM_EO_EVAL_FILE_STATUS'},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    evalStaus = jdata.data.STATUS;
                }
            }
        });
    }


    function turnEoAct(row) {
        var pkid = row.PKID;
        var objNo = pkid;
        var objKey = "EM_EO";
        var taskId = "";
        var procInstId = "";
        $.messager.confirm('提示?', "是否确认退回?", function (r) {
            if (r) {
                MaskUtil.mask("请求处理中...");
                InitFuncCodeRequest_({
                    data: {
                        FunctionCode: 'WS_FLOW_EXECUTION_QUERY',
                        objNo: objNo,
                        objKey: objKey
                    },
                    async: false,
                    successCallBack: function (jdata) {
                        if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                            taskId = jdata.data["TASK_ID"];
                            procInstId = jdata.data["PROC_INST_ID_"];
                            InitFuncCodeRequest_({
                                data: {pkid: pkid, procInstId: procInstId, FunctionCode: 'EM_EO_TURN_ACT'},
                                async: false,
                                successCallBack: function (jdata) {
                                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                        MaskUtil.unmask();
                                        reload_();
                                        MsgAlert({content: '操作成功。'});
                                    } else {
                                        MaskUtil.unmask();
                                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                                    }
                                }
                            });
                        }
                    }
                });
            }
        });
    }

    //查询方法
    function onSearchFor(identity, fromId, breforSearch) {
        fromId = fromId || "#ffSearch";
        var dgopt = getDgOpts(identity);
        var $dg = $(dgopt.owner);
        var url = dgopt.url;
        if ($dg && url) {
            var queryParams = $(fromId).serializeObject();
            queryParams = $.extend({}, dgopt.queryParams, dgopt._params, queryParams);
            if (typeof(breforSearch) == 'function') {
                breforSearch(queryParams);
            }
            clearAdvancedQueryData(queryParams);
            if (dgopt.treeField) {
                $dg.treegrid('load', queryParams);
            } else {
                $dg.datagrid('load', queryParams);
            }
        }
    }


    function sendSap(){
        var applyType = $("#applyType").combobox('getValue');
        if(!applyType){
            alert("请先选择适用类型。");
            return;
        }
        InitFuncCodeRequest_({
            async: false,
            data: {applyType: applyType ,FunctionCode: 'EM_EO_SEND_SAP'},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    alert("操作成功");
                }
            }
        });
    }


</script>
</body>
</html>