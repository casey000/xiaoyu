<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="tm_hrarchive">
    <!--#include virtual="/views/items/resource_.shtml"-->
    <title>MCC交接班维护页面</title>
    <style>
        .datagrid-wrap {
            height: 280px !important;
            width: 93.8% !important;
        }
    </style>
</head>
<body class="ibody">
<div style="width:95%;margin:0 auto;">
<fieldset class="fieldset_eui">
    <!--<legend>搜索</legend>-->
    <form id="ffSearch" method="post">
        <div id="searchBar">
            <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
                <caption id="hoCaption" style="padding-bottom: 7px;font-weight:bold;"></caption>
                <tr>
                    <td style="align-items: center;height: 25px" align="right">
                        <a class="addBtn" id="mccHo" data-options="iconCls:'icon-search'"
                           onclick="mccHo()"><span>交班</span></a>
                        <a class="searchBtn" data-options="iconCls:'icon-search'"
                           onclick="closeAdd()"><span>关闭</span></a>
                    </td>
                </tr>
            </table>
        </div>
    </form>
</fieldset>
<div id="aa" class="easyui-accordion" data-options="" style="width:100%;height:550px;">
    <div id="aogDiv" title="停场不适航项目" align="right" data-options="selected:true,iconCls:'icon-ok'" style="width: 100%">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" onclick="add('aog')"><span
                        style="font-size: small">add</span></a>
                    <span>&nbsp;</span></td>
            </tr>
        </table>
        <table id="aog"></table>
    </div>
    <div id="todayTodoDiv" title="今日待办" align="right" data-options="selected:true,iconCls:'icon-ok'">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" id="todayTodoAdd" onclick="add('todo')"><span
                style="font-size: small">add</span></a>
            <a class="addBtn" id="todayTodoClose" onclick="batch('todayTodo','CLOSE')"><span style="font-size: small">close</span></a>
            <a class="addBtn" id="todayTodoHandover" data-options="iconCls:'icon-search'"
               onclick="batch('todayTodo','HANDOVER')"><span style="font-size: small">handover</span></a>
                    <span>&nbsp;</span></td>
            </tr>
        </table>
        <table id="todayTodo"></table>
    </div>
    <div id="todoDiv" title="待激活" align="right" data-options="iconCls:'icon-ok'">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" id="todoAdd" onclick="add('todo')"><span style="font-size: small">add</span></a>
            <a class="addBtn" id="todoClose" onclick="batch('todo','CLOSE')"><span style="font-size: small">close</span></a>
            <a class="addBtn" id="todoHandover" data-options="iconCls:'icon-search'"
               onclick="batch('todo','HANDOVER')"><span style="font-size: small">handover</span></a>
                    <span>&nbsp;</span></td>
            </tr>
        </table>
        <table id="todo"></table>
    </div>
    <div id="bigDiv" title="大项工作" align="right" data-options="iconCls:'icon-ok'">
        <form id="fbig" method="post">
            <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
                <tr>
                    <th style="width: 80px;" align="right">机型：</th>
                    <td class="tdr hs">
                        <input class="easyui-combobox" id="bigActype" name="actype" data-options=""
                               style="width:120px"/>
                    </td>
                    <th style="width: 80px;" align="right">机号：</th>
                    <td class="tdr hs">
                        <input class="easyui-combobox" id="bigAcno" name="acno" data-options=""
                               style="width:100px"/>
                    </td>
                    <th style="width: 80px;" align="right">需求源：</th>
                    <td class="tdr hs">
                        <input class="easyui-combobox" id="bigSource" name="source" data-options=""
                               style="width:120px"/>
                    </td>
                    <th style="width: 80px;" align="right">工作内容：</th>
                    <td class="tdr hs">
                        <input class="easyui-textbox" name="des" data-options=""
                               style="width:120px"/>
                    </td>
                    <td style="align-items: center;height: 25px" align="right">
                        <a class="searchBtn" data-options="iconCls:'icon-search'" onclick="searchBigData()" ><span>查询</span></a>
                        <a class="addBtn" onclick="add('big')"><span style="font-size: small">add</span></a>
                <span>&nbsp;</span></td>
                </tr>
                <tr>
                    <th style="width: 80px;" align="right"> 开始日期从：</th>
                    <td colspan="2" class="tdr">
                        <input class="easyui-datebox" name="beginDate1" style="width:90px;"
                               data-options="editable:false"/> 至 <input class="easyui-datebox" name="beginDate2"
                                                                        style="width:90px;"
                                                                        data-options="editable:false"/>
                    </td>
                    <th style="width: 80px;" align="right"> 结束日期从：</th>
                    <td colspan="2" class="tdr">
                        <input class="easyui-datebox" name="endDate1" style="width:90px;"
                               data-options="editable:false"/>至<input class="easyui-datebox" name="endDate2"
                                                                      style="width:90px;"
                                                                      data-options="editable:false"/>
                    </td>
                    <th style="width: 60px;"> 状态：</th>
                    <td class="tdr">
                        <input class="easyui-combobox" id="bigStatus" name="status" data-options=""
                               style="width:120px"/>
                    </td>
                </tr>
            </table>
        </form>
        <table id="big"></table>
    </div>
    <div id="toolDiv" title="外单位工具/设备借还" align="right" data-options="iconCls:'icon-ok'">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" onclick="add('tool')"><span style="font-size: small">add</span></a>
            <span>&nbsp;</span> </td>
            </tr>
        </table>
        <table id="tool"></table>
    </div>
    <div id="limitDiv" title="运行限制" align="right" data-options="iconCls:'icon-ok'">
        <form id="flimit" method="post">
            <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
                <tr>
                    <th style="width: 70px;" align="right">机号/航班号/航站：</th>
                    <td class="tdr hs">
                        <input class="easyui-textbox" name="item" data-options=""
                               style="width:90px"/>
                    </td>
                    <th style="width: 60px;" align="right">限制原因：</th>
                    <td class="tdr hs">
                        <input class="easyui-textbox" name="reason" data-options=""
                               style="width:90px"/>
                    </td>
                    <th style="width: 60px;" align="right">限制说明：</th>
                    <td class="tdr hs">
                        <input class="easyui-textbox" name="des" data-options=""
                               style="width:90px"/>
                    </td>
                    <th style="width: 50px;" align="right">状态：</th>
                    <td class="tdr hs">
                        <input class="easyui-combobox" id="limitStatus" name="status" data-options=""
                               style="width:90px"/>
                    </td>

                    <td style="align-items: center;height: 25px" align="right">
                        <a class="searchBtn" data-options="iconCls:'icon-search'" onclick="onSearch_('limit','#flimit')" ><span>查询</span></a>
                        <a class="addBtn" onclick="add('limit')"><span style="font-size: small">add</span></a>
                        <span>&nbsp;</span>
                   </td>
                </tr>
                <tr>
                    <th style="width: 80px;" align="right"> 开始日期从：</th>
                    <td class="tdr">
                        <input class="easyui-datebox" id="beginDate1" name="beginDate1" style="width:90px;"
                               data-options="editable:false"/>
                    </td>
                    <th style="width: 80px;" > 至：</th>
                    <td class="tdr">
                        <input class="easyui-datebox" id="beginDate2" name="beginDate2" style="width:90px;"
                               data-options="editable:false"/>
                    </td>
                    <th style="width: 80px;" align="right"> 结束日期从：</th>
                    <td class="tdr">
                        <input class="easyui-datebox" id="endDate1" name="endDate1" style="width:90px;"
                               data-options="editable:false"/>
                    </td>
                    <th style="width: 60px;" > 至：</th>
                    <td class="tdr">
                        <input class="easyui-datebox" id="endDate2" name="endDate2" style="width:90px;"
                               data-options="editable:false"/>
                    </td>
                </tr>
            </table>
        </form>
        <table id="limit"></table>
    </div>
    <div id="checkListDiv" title="例行工作检查单" align="right" data-options="iconCls:'icon-ok'">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" id="checkListClose" onclick="batch('checkList','CLOSE')"><span
                style="font-size: small">close</span></a><a><span>&nbsp;</span></a> </td>
            </tr>
        </table>
        <table id="checkList"></table>
    </div>
    <div id="noticeDiv" title="通知" align="right" data-options="iconCls:'icon-ok'">
        <table class="table table-bordered table-info" cellspacing="0" cellpadding="2">
            <tr>
                <td style="align-items: center;height: 25px" align="right"><a class="addBtn" id="noticeClose" onclick="batch('notice','CLOSE')"><span
                style="font-size: small">close</span></a><span>&nbsp;</span></td>
            </tr>
        </table>
        <table id="notice"></table>
    </div>
</div>
</div>
<script type="text/javascript" src="/views/pm/mc/js/datagrid_utils.js"></script>
<script type="text/javascript">
    var param;
    var identity = 'dg';
    var PAGE_DATA = {};
    var selectRow;
    var hoPkid;
    var hoDate;
    var byWho;
    var viewFlag;
    var banci;
    function i18nCallBack() {
        param = getParentParam_();
        if (param.hoPkid) {
            hoPkid = param.hoPkid;
        }
        if (param.hoDate) {
            hoDate = param.hoDate;
        }
        if (param.byWho) {
            byWho = param.byWho;
        }
        if (param.type) {
            banci = param.type;
        }
        if (param.viewFlag) {
            viewFlag = param.viewFlag;
        }
        InitFuncCodeRequest_({
            data: {
                FunctionCode: "ANALYSIS_DOMAIN_BYCODE",
                domainCode: "YESORNO_NUMBER,YESORNO,PM_MC_SEAT,PM_MC_TOOL_TYPE,PM_MC_BIG_STATUS,PM_MC_NOTICE_TYPE,MCC_TODO_MAJOR,MSGRP,PM_MC_HOTOOL_STATUS," +
                "DA_ACREG_MP_ACTYPE,PM_MC_BIG_SOURCE,PM_MC_HOLIMIT_STATUS"
            },
            successCallBack: function (jdata) {
                PAGE_DATA['yesorno'] = DomainCodeToMap_(jdata.data.YESORNO_NUMBER);
                PAGE_DATA['YORN'] = DomainCodeToMap_(jdata.data.YESORNO);
                PAGE_DATA['seat'] = DomainCodeToMap_(jdata.data.PM_MC_SEAT);
                PAGE_DATA['toolType'] = DomainCodeToMap_(jdata.data.PM_MC_TOOL_TYPE);
                PAGE_DATA['bigStatus'] = DomainCodeToMap_(jdata.data.PM_MC_BIG_STATUS);
                PAGE_DATA['noticeType'] = DomainCodeToMap_(jdata.data.PM_MC_NOTICE_TYPE);
                PAGE_DATA['major'] = DomainCodeToMap_(jdata.data.MCC_TODO_MAJOR);
                PAGE_DATA['toolStatus'] = DomainCodeToMap_(jdata.data.PM_MC_HOTOOL_STATUS);
                PAGE_DATA['limitStatus'] = DomainCodeToMap_(jdata.data.PM_MC_HOLIMIT_STATUS);
                //机型
                $("#bigActype").combobox({
                    panelHeight: '160px',
                    valueField: 'VALUE',
                    textField: 'TEXT',
                    data: jdata.data.DA_ACREG_MP_ACTYPE
                });
                $("#limitStatus").combobox({
                    panelHeight: '160px',
                    valueField: 'VALUE',
                    textField: 'TEXT',
                    data: jdata.data.PM_MC_HOLIMIT_STATUS
                });
                //机号
                $("#bigAcno").combobox({
                    panelHeight: '160px',
                    multiple: true, //是否可多选
                    valueField: 'VALUE',
                    textField: 'TEXT',
                    data: jdata.data.MSGRP
                });
                //需求源
                $('#bigSource').combobox({
                    panelHeight: '160px',
                    valueField: 'VALUE',
                    textField: 'TEXT',
                    data: jdata.data.PM_MC_BIG_SOURCE
                });
                //状态（大项工作）
                $('#bigStatus').combobox({
                    panelHeight: '160px',
                    valueField: 'VALUE',
                    textField: 'TEXT',
                    data: jdata.data.PM_MC_BIG_STATUS
                });
                selectLastHo(hoPkid);

                if (viewFlag == "view(N)" || viewFlag == "view(Y)") {
                    $(".addBtn").hide();
                } else if (byWho != 'CONTROL') {
                    $(".addBtn").hide();
                    $("#mccHo").show();
                    $("#todayTodoAdd").show();
                    $("#todoAdd").show();
                    $("#todayTodoClose").show();
                    $("#todayTodoHandover").show();
                    $("#todoClose").show();
                    $("#todoHandover").show();
                    $("#checkListClose").show();
                    $("#noticeClose").show();
                }
                InitDataGridAog();
                InitDataGridTodayTodo();
                InitDataGridTodo();
                InitDataGridBig();
                InitDataGridTool();
                InitDataGridLimit();
                InitDataGridCheckList();
                InitDataGridNotice();
            }
        });
    }
    //查询上一班次信息
    function selectLastHo(pkid) {
        InitFuncCodeRequest_({
            data: {pkid: pkid, FunctionCode: "MCC_SELECT_LASTHO_BY_PKID"},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    var lastHo = "&nbsp;&nbsp;" + "提交者：";
                    var title;
                    if ("ONDUTY" == byWho) {
                        lastHo += jdata.data.A_ONDUTY_NAME + "&nbsp;" + jdata.data.A_ONDUTY_DATE;
                        title = "MCC值班席值班工作日志_" + (banci == "BB" ? "白班" : "晚班") + "(" + hoDate.substring(0, 10) + ")" + lastHo;
                    }
                    if ("SUPPORT" == byWho) {
                        lastHo += jdata.data.A_SUPPORT_NAME + "&nbsp;" + jdata.data.A_SUPPORT_DATE;
                        title = "MCC技术支援值班工作日志_" + (banci == "BB" ? "白班" : "晚班") + "(" + hoDate.substring(0, 10) + ")" + lastHo;
                    }
                    if ("CONTROL" == byWho) {
                        lastHo += jdata.data.A_CONTROL_NAME + "&nbsp;" + jdata.data.A_CONTROL_DATE;
                        title = "MCC控制席值班工作日志_" + (banci == "BB" ? "白班" : "晚班") + "(" + hoDate.substring(0, 10) + ")" + lastHo;
                    }
                    $("#hoCaption").html(title);
                } else {
                    MsgAlert({content: jdata.msg, type: 'error'});
                }
            }
        });
    }
    function InitDataGridAog() {
        $("#aog").MyDataGrid({
            identity: 'aog',
            queryParams: {},
            columns: {
                param: {FunctionCode: 'PM_MC_HOAOG_LIST'},
                alter: {
                    BEGIN_DATE: {
                        formatter: function (value, row, index) {
                            return value == undefined ? "" : value.substring(0, 16);
                        }
                    },
                    RELIEVE_DATE: {
                        formatter: function (value, row, index) {
                            return value == undefined ? "" : value.substring(0, 16);
                        }
                    },
                    GOON_DATE: {
                        formatter: function (value, row, index) {
                            return value == undefined ? "" : value.substring(0, 16);
                        }
                    },
                    IF_RELIEVE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    IF_GOON: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['yesorno'][value];
                        }
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },

                }
            },
            onLoadSuccess: function (data) {
                $("#aogDiv").prev().children(":first").html("停场不适航项目<font color='red'>(" + data.total + ")</font>");
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || byWho != 'CONTROL') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                    items['结束'].enable = false;
                    //items['过程事项'].enable = false;
                    items['编辑跟进项'].enable = false;
                    items['结束跟进项'].enable = false;
                }
                if (row.REF_PKID != hoPkid) {
                    items['删除'].enable = false;
                }
                //【是否继续跟进】为‘是’，且实际跟进结束日期为空的才可以编辑或者结束
                if (row.IF_GOON != 1 || row.GOON_DATE != undefined) {
                    items['编辑跟进项'].enable = false;
                    items['结束跟进项'].enable = false;
                }
                //当是否解除为‘是’时，编辑AOG和解除菜单灰显
                if (row.IF_RELIEVE == 1) {
                    items['编辑'].enable = false;
                    items['结束'].enable = false;
                    items['删除'].enable = false;
                }

                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'aog', isEdit: 1, width: 1000, height: 600,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_aog.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#aog").datagrid('getSelected');
                        common_delete_({
                            identity: 'aog',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOAOG_DEL"
                        })
                    }
                },
                {
                    id: "m-edit", i18nText: "结束",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'aog', isEdit: 1, width: 650, height: 450,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_aog_relieve.shtml"
                        })
                    }
                },
                {
                    id: "m-edit", i18nText: "编辑跟进项",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'aog', isEdit: 1, width: 650, height: 400,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_aog_goon.shtml"
                        })
                    }
                },
                {
                    id: "m-edit", i18nText: "结束跟进项",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'aog', isEdit: 1, width: 650, height: 450,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_aog_goon_end.shtml"
                        })
                    }
                },
                /*{
                 id: "m-edit", i18nText: "过程事项",
                 onclick: function () {
                 var rowData = $("#aog").datagrid('getSelected');
                 common_add_edit_({
                 identity: 'aog', isEdit: 1, width: 850, height: 600,
                 param: {refPkid: rowData.PKID2},
                 url: "/views/pm/mc/handover/mcc_ho_edit_aog_detail_list.shtml"
                 })
                 }
                 },*/
                {
                    id: "m-view", i18nText: "浏览",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'aog', isEdit: 1, width: 1150, height: 750,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_aog_view.shtml"
                        })
                    }
                },
                {
                    id: "m-view", i18nText: "打印",
                    onclick: function () {
                        var rowData = getDG('aog').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }

                        ajaxLoading();
                        doPost(Constant.API_URL + 'PM_MCC_HOAOG_PRINT', {pkid: rowData.PKID});
                        ajaxLoadEnd()
                    }
                },
            ]
        });
    }
    function InitDataGridTodayTodo() {
        $("#todayTodo").MyDataGrid({
            identity: 'todayTodo',
            queryParams: {refPkid: hoPkid, type: byWho, isToday: 'Y'},
            columns: {
                param: {FunctionCode: 'PM_MC_HOTODO_LIST'},
                alter: {
                    UPLOAD: {
                        formatter: function (value, row, index) {
                            if (row.UPLOAD) {
                                return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach">' +
                                    '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                            }
                        }
                    },
                    BEGIN_DATE: {
                        type: 'date'
                    },
                    TYPE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['seat'][value];
                        }
                    },
                    MAJOR: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['major'][value];
                        }
                    },
                    TO_NO: {
                        formatter: function (value, row, index) {
                            var html = "";
                            if (value) {
                                var nos = value.split(",");
                                var ids = row.TO_ID.split(",");
                                var types = row.TO_TYPE.split(",");
                                for (var i = 0; i < nos.length; i++) {
                                    html += "<a href='javascript:void(0)' onclick='showToDetail(" + ids[i] + "," + types[i] + ");'>" + nos[i] + "<a/>" + ","
                                }

                            }
                            return html;
                        }
                    },
                    DEFECT_NO: {
                        formatter: function (value, row, index) {
                            var html = "";
                            if (value) {
                                var nos = value.split(",");
                                var ids = row.DEFECT_ID.split(",");
                                for (var i = 0; i < nos.length; i++) {
                                    html += "<a href='javascript:void(0)' onclick='showDefectDetail(" + ids[i] + "," + nos[i] + ");'>" + nos[i] + "<a/>" + ","
                                }

                            }
                            return html;
                        }
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },
                    LSRZ: {
                        formatter: function (value, row, index) {
                            return "<a class='ridoBtn' onclick=\"history('" + row.PKID2 + "','" + row.DES + "');\"  value='history'>history<a/>";
                        }
                    },
                    IF_IMP: {
                        formatter: function (value, row, index) {
                            if (value == '0') {
                                return "否";
                            } else if(value == '1'){
                                return "是";
                            }
                        }
                    },

                }
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || row.STATUS != "OPEN") {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                    items['上传附件'].enable = false;
                }
                if(viewFlag == "view(N)" || viewFlag == "view(Y)" || (row.STATUS != "OPEN" && row.STATUS != "HANDOVER")){
                    items['标记重点项目'].enable = false;
                    items['取消重点项目标记'].enable = false;
                }
                if(row.IF_IMP == 1){
                    items['标记重点项目'].enable = false;
                }else if(row.IF_IMP == 0){
                    items['取消重点项目标记'].enable = false;
                }
                if (row.PKID != row.PKID2 || row.STATUS != "OPEN") {
                    items['删除'].enable = false;
                }
                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        var rowData = $("#todayTodo").datagrid('getSelected');
                        var ifLast;
                        if (rowData.PKID == rowData.PKID2) {
                            ifLast = "N";
                        } else {
                            ifLast = "Y";
                        }
                        common_add_edit_({
                            identity: 'todayTodo', isEdit: 1, width: 650, height: 400,
                            param: {hoPkid: hoPkid, byWho: byWho, ifLast: ifLast},
                            url: "/views/pm/mc/handover/mcc_ho_edit_todo.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#todayTodo").datagrid('getSelected');
                        common_delete_({
                            identity: 'todayTodo',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOTODO_DEL"
                        })
                    }
                },
                {
                    id: "", i18nText: "上传附件", auth: "",
                    onclick: function () {
                        var rowData = getDG('todayTodo').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        common_upload_({
                            identity: 'todayTodo',
                            param: {
                                cat: 'PMMCHOTODO',
                                sourceId: rowData.PKID2,
                                successCallBack: function () {
                                    reload_('todayTodo');
                                },
                                failCallBack: ""
                            }
                        });
                    }
                },
                {
                    id: "m-biaoji", i18nText: "标记重点项目",
                    onclick: function () {
                        var rowData = $("#todayTodo").datagrid('getSelected');
                        common_delete_({
                            identity: 'todayTodo',
                            cfmI18next: "确认标记吗？",
                            param: {data: {ifImp : '1',pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOTODO_IMP"
                        })
                    }
                },
                {
                    id: "m-cancel", i18nText: "取消重点项目标记",
                    onclick: function () {
                        var rowData = $("#todayTodo").datagrid('getSelected');
                        common_delete_({
                            identity: 'todayTodo',
                            cfmI18next: "确认取消标记吗？",
                            param: {data: {ifImp : '0',pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOTODO_IMP"
                        })
                    }
                },
            ],
            onLoadSuccess: function (data) {
                $("#todayTodoDiv").prev().children(":first").html("今日待办<font color='red'>(" + data.total + ")</font>");
                if (byWho != "SUPPORT") {
                    $('#todayTodo').datagrid('hideColumn', 'MAJOR');
                    $('#todayTodo').datagrid('hideColumn', 'DEFECT_NO');
                    $('#todayTodo').datagrid('hideColumn', 'TO_NO');
                }
                InitSuspend('a.attach', {
                    'onmouseover': function (thiz, event, callback) {
                        var index = $(thiz).attr("rowindex");
                        var row = $("#todayTodo").datagrid('getRows')[index];
                        InitFuncCodeRequest_({
                            data: {
                                SOURCE_ID: row.PKID2,
                                CATEGORY: "PMMCHOTODO",
                                FunctionCode: 'ATTACHMENT_RSPL_GET'
                            },
                            successCallBack: function (jdata) {
                                if (jdata.code == 200) {

                                }
                                var html = "";
                                for (var i = 0; i < jdata.data.length; i++) {
                                    html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a><span onclick="deleteFile(\'' + jdata.data[i].PKID + '\');reload_(\'todayTodo\');return false;" class="icon-cross"></span></li>';
                                }
                                callback(html);
                            }
                        });
                    }
                }, 'attach');
                $("#todayTodo").datagrid('doCellTip', {'max-width': '400px', 'delay': 500});
            },
        });
    }
    function InitDataGridTodo() {
        $("#todo").MyDataGrid({
            identity: 'todo',
            queryParams: {refPkid: hoPkid, type: byWho},
            columns: {
                param: {FunctionCode: 'PM_MC_HOTODO_LIST'},
                alter: {
                    UPLOAD: {
                        formatter: function (value, row, index) {
                            if (row.UPLOAD) {
                                return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach1">' +
                                    '<img src="/img/edit2.png" border="0" style="width:15px;height:15px;"/></a>'
                            }
                        }
                    },
                    BEGIN_DATE: {
                        type: 'date'
                    },
                    TYPE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['seat'][value];
                        }
                    },
                    MAJOR: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['major'][value];
                        }
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },
                    LSRZ: {
                        formatter: function (value, row, index) {
                            return "<a class='ridoBtn' style='width: 100px'  onclick=\"history('" + row.PKID2 + "','" + row.DES + "');\">history<a/>";
                        }
                    },

                }
            },
            rowStyler: function (index, row) {
                var deadLine = row.BEGIN_DATE;
                if (deadLine && deadLine != null && deadLine != '') {
                    var days = diffDays(deadLine);
                    if (days <= 3) {
                        return 'background-color:#FF0000;';//红色
                    }
                }
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || row.STATUS != "OPEN") {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                    items['上传附件'].enable = false;
                }
                if (row.PKID != row.PKID2 || row.STATUS != "OPEN") {
                    items['删除'].enable = false;
                }
                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        var rowData = $("#todo").datagrid('getSelected');
                        var ifLast;
                        if (rowData.PKID == rowData.PKID2) {
                            ifLast = "N";
                        } else {
                            ifLast = "Y";
                        }
                        common_add_edit_({
                            identity: 'todo', isEdit: 1, width: 650, height: 400,
                            param: {hoPkid: hoPkid, byWho: byWho, ifLast: ifLast},
                            url: "/views/pm/mc/handover/mcc_ho_edit_todo.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#todo").datagrid('getSelected');
                        common_delete_({
                            identity: 'todo',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOTODO_DEL"
                        })
                    }
                },
                {
                    id: "", i18nText: "上传附件", auth: "",
                    onclick: function () {
                        var rowData = getDG('todo').datagrid('getSelected');
                        if (!rowData.PKID) {
                            MsgAlert({content: "请选择数据！", type: 'error'});
                            return;
                        }
                        common_upload_({
                            identity: 'todo',
                            param: {
                                cat: 'PMMCHOTODO',
                                sourceId: rowData.PKID2,
                                successCallBack: function () {
                                    reload_('todo');
                                },
                                failCallBack: ""
                            }
                        });
                    }
                },
            ],
            onLoadSuccess: function (data) {
                $("#todoDiv").prev().children(":first").html("待激活<font color='red'>(" + data.total + ")</font>");
                if (byWho != "SUPPORT") {
                    $('#todo').datagrid('hideColumn', 'MAJOR');
                    $('#todo').datagrid('hideColumn', 'DEFECT_NO');
                    $('#todo').datagrid('hideColumn', 'TO_NO');
                }
                InitSuspend('a.attach1', {
                    'onmouseover': function (thiz, event, callback) {
                        var index = $(thiz).attr("rowindex");
                        var row = $("#todo").datagrid('getRows')[index];
                        InitFuncCodeRequest_({
                            data: {
                                SOURCE_ID: row.PKID2,
                                CATEGORY: "PMMCHOTODO",
                                FunctionCode: 'ATTACHMENT_RSPL_GET'
                            },
                            successCallBack: function (jdata) {
                                if (jdata.code == 200) {

                                }
                                var html = "";
                                for (var i = 0; i < jdata.data.length; i++) {
                                    html += '<li><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a><span onclick="deleteFile(\'' + jdata.data[i].PKID + '\');reload_(\'todo\');return false;" class="icon-cross"></span></li>';
                                }
                                callback(html);
                            }
                        });
                    }
                }, 'attach1');
                $("#todo").datagrid('doCellTip', {'max-width': '400px', 'delay': 500});
            },
        });
    }
    function InitDataGridBig() {
        $("#big").MyDataGrid({
            identity: 'big',
            queryParams: {},
            columns: {
                param: {FunctionCode: 'PM_MC_HOBIG_LIST'},
                alter: {
                    BEGIN_DATE: {
                        type: 'date'
                    },
                    END_DATE: {
                        type: 'date'
                    },
                    STATUS: {
                        formatter: function (value, row, inde) {
                            return PAGE_DATA['bigStatus'][value];
                        }
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },
                    IF_IMP: {
                        formatter: function (value, row, index) {
                            if (value == '0') {
                                return "否";
                            } else if(value == '1'){
                                return "是";
                            }
                        }
                    },

                }
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || byWho != 'CONTROL') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                if(viewFlag == "view(N)" || viewFlag == "view(Y)" || row.STATUS == 1){
                    items['标记重点项目'].enable = false;
                    items['取消重点项目标记'].enable = false;
                }
                if(row.IF_IMP == 1){
                    items['标记重点项目'].enable = false;
                }else if(row.IF_IMP == 0){
                    items['取消重点项目标记'].enable = false;
                }
                if (row.REF_PKID != hoPkid) {
                    items['删除'].enable = false;
                }
                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'big', isEdit: 1, width: 650, height: 450,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_big.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#big").datagrid('getSelected');
                        common_delete_({
                            identity: 'big',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOBIG_DEL"
                        })
                    }
                },
                {
                    id: "m-biaoji", i18nText: "标记重点项目",
                    onclick: function () {
                        var rowData = $("#big").datagrid('getSelected');
                        common_delete_({
                            identity: 'big',
                            cfmI18next: "确认标记吗？",
                            param: {data: {ifImp : '1',pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOBIG_IMP"
                        })
                    }
                },
                {
                    id: "m-cancel", i18nText: "取消重点项目标记",
                    onclick: function () {
                        var rowData = $("#big").datagrid('getSelected');
                        common_delete_({
                            identity: 'big',
                            cfmI18next: "确认取消标记吗？",
                            param: {data: {ifImp : '0',pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOBIG_IMP"
                        })
                    }
                },
            ],
            onLoadSuccess: function (data) {
                $("#bigDiv").prev().children(":first").html("大项工作<font color='red'>(" + data.total + ")</font>");
            },
        });
    }
    function searchBigData() {
        var queryParams = $('#fbig').serializeObject();
        //机号多选
        var acno = $("#bigAcno").combobox('getText');
        queryParams.acno = acno;
        $('#big').datagrid('load', queryParams);
    }
    function InitDataGridTool() {
        $("#tool").MyDataGrid({
            identity: 'tool',
            queryParams: {},
            columns: {
                param: {FunctionCode: 'PM_MC_HOTOOL_LIST'},
                alter: {
                    DELIVERY_DATE: {
                        type: 'date'
                    },
                    RETURN_DATE: {
                        type: 'date'
                    },
                    TYPE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['toolType'][value];
                        }
                    },
                    TOOL_STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['toolStatus'][value];
                        }
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },

                }
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || byWho != 'CONTROL') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                }
                if (row.REF_PKID != hoPkid) {
                    items['删除'].enable = false;
                }
                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'tool', isEdit: 1, width: 650, height: 400,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_tool.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#tool").datagrid('getSelected');
                        common_delete_({
                            identity: 'tool',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOTOOL_DEL"
                        })
                    }
                }
            ],
            onLoadSuccess: function (data) {
                $("#toolDiv").prev().children(":first").html("外单位工具/设备借还<font color='red'>(" + data.total + ")</font>");
            },
        });
    }
    function InitDataGridLimit() {
        $("#limit").MyDataGrid({
            identity: 'limit',
            queryParams: {},
            columns: {
                param: {FunctionCode: 'PM_MC_HOLIMIT_LIST'},
                alter: {
                    BEGIN_DATE: {
                        type: 'date'
                    },
                    END_DATE: {
                        type: 'date'
                    },
                    PKID2: {
                        formatter: function (value, row, index) {
                            if (row.PKID == row.PKID2) {
                                return "否";
                            } else {
                                return "是";
                            }

                        }
                    },
                    STATUS: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['limitStatus'][value];
                        }
                    },

                }
            },
            validAuth: function (row, items) {
                if (viewFlag == "view(N)" || viewFlag == "view(Y)" || byWho != 'CONTROL') {
                    items['编辑'].enable = false;
                    items['删除'].enable = false;
                    items['关闭'].enable = false;
                }
                if (row.REF_PKID != hoPkid) {
                    items['删除'].enable = false;
                }
                return items;
            },
            contextMenus: [
                {
                    id: "m-edit", i18nText: "编辑",
                    onclick: function () {
                        common_add_edit_({
                            identity: 'limit', isEdit: 1, width: 650, height: 400,
                            param: {hoPkid: hoPkid, byWho: byWho},
                            url: "/views/pm/mc/handover/mcc_ho_edit_limit.shtml"
                        })
                    }
                },
                {
                    id: "m-delete", i18nText: "删除",
                    onclick: function () {
                        var rowData = $("#limit").datagrid('getSelected');
                        common_delete_({
                            identity: 'limit',
                            cfmI18next: "确认删除吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOLIMIT_DEL"
                        })
                    }
                },
                {
                    id: "m-close", i18nText: "关闭",
                    onclick: function () {
                        var rowData = $("#limit").datagrid('getSelected');
                        common_delete_({
                            identity: 'limit',
                            cfmI18next: "确认关闭吗",
                            param: {data: {pkid: rowData.PKID}},
                            FunctionCode: "PM_MC_HOLIMIT_CLOSE"
                        })
                    }
                }
            ],
            onLoadSuccess: function (data) {
                $("#limitDiv").prev().children(":first").html("运行限制<font color='red'>(" + data.total + ")</font>");
            },
        });
    }

    function InitDataGridCheckList() {
        var type = "LXJCD_" + byWho + "_" + banci;
        $("#checkList").MyDataGrid({
            identity: 'checkList',
            queryParams: {refPkid: hoPkid, type: type},
            columns: {
                param: {FunctionCode: 'PM_MC_HONOTICE_LIST'},
                alter: {
                    IF_CLOSE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['YORN'][value];
                        }
                    },
                    TYPE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['noticeType'][value];
                        }
                    }
                }
            },
            onLoadSuccess: function (data) {
                $("#checkListDiv").prev().children(":first").html("例行工作检查单<font color='red'>(" + data.total + ")</font>");
            },
        });
    }
    function InitDataGridNotice() {
        var type = "NOTICE_" + byWho;
        $("#notice").MyDataGrid({
            identity: 'notice',
            queryParams: {refPkid: hoPkid, type: type},
            columns: {
                param: {FunctionCode: 'PM_MC_HONOTICE_LIST'},
                alter: {
                    IF_CLOSE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['YORN'][value];
                        }
                    },
                    TYPE: {
                        formatter: function (value, row, index) {
                            return PAGE_DATA['noticeType'][value];
                        }
                    }
                }
            },
            onLoadSuccess: function (data) {
                $("#noticeDiv").prev().children(":first").html("通知<font color='red'>(" + data.total + ")</font>");
            },
        });
    }
    //交班
    function mccHo() {
        if (banci == "BB") {
            if (diffDays(hoDate) > 0) {
                MsgAlert({content: '未到交班时间', type: 'error'});
                return;
            }
            if (diffDays(hoDate) == 0 && new Date().getHours() < 18) {
                MsgAlert({content: '未到交班时间,当天白班须在18点之后进行交班', type: 'error'});
                return;
            }
            if (diffDays(hoDate) < 0) {
                MsgAlert({content: '已过交班时间，请联系管理员处理', type: 'error'});
                return;
            }
        } else {
            if (diffDays(hoDate) > -1) {
                MsgAlert({content: '未到交班时间', type: 'error'});
                return;
            }
            if (diffDays(hoDate) == -1 && new Date().getHours() < 7) {
                MsgAlert({content: '未到交班时间,夜班须在7点之后进行交班', type: 'error'});
                return;
            }
            if (diffDays(hoDate) < -1) {
                MsgAlert({content: '已过交班时间，请联系管理员处理', type: 'error'});
                return;
            }
        }
        if (confirm("确认交班吗？")) {
            InitFuncCodeRequest_({
                data: {hoPkid: hoPkid, byWho: byWho, banci: banci, FunctionCode: 'PM_MC_MCC_HO'},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        param.OWindow.reload_();
                        CloseWindowIframe();
                        param.OWindow.MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                    } else {
                        MsgAlert({content: jdata.msgData ? jdata.msgData[0] : jdata.msg, type: 'error'});
                    }
                }
            })
        }
    }
    /** 刷新列表数据 */
    function reload_() {
        $("#dg").datagrid("reload");
    }
    function add(a) {
        if (a == 'big') {
            common_add_edit_({
                identity: identity, isEdit: 0, width: 650, height: 450,
                param: {hoPkid: hoPkid, byWho: byWho, isAdd: 1},
                url: "/views/pm/mc/handover/mcc_ho_edit_" + a + ".shtml"
            });
        }
        if (a == 'aog') {
            common_add_edit_({
                identity: identity, isEdit: 0, width: 1000, height: 600,
                param: {hoPkid: hoPkid, byWho: byWho, isAdd: 1},
                url: "/views/pm/mc/handover/mcc_ho_edit_" + a + ".shtml"
            });
        } else {
            common_add_edit_({
                identity: identity, isEdit: 0, width: 650, height: 400,
                param: {hoPkid: hoPkid, byWho: byWho, isAdd: 1},
                url: "/views/pm/mc/handover/mcc_ho_edit_" + a + ".shtml"
            });
        }
    }

    //批量操作
    function batch(dg, status) {
        var rows = $('#' + dg).datagrid('getChecked');
        if (rows.length == 0) {
            MsgAlert({content: $.i18n.t('请至少选择一行数据'), type: 'error'});
            return;
        }
        var pkids = "";
        var error = "";
        //判断是否都是OPEN状态
        for (var i = 0; i < rows.length; i++) {
            pkids += rows[i].PKID + ",";
            if ("todayTodo" == dg || "todo" == dg) {
                var itemStatus = rows[i].STATUS;
                if (itemStatus != 'OPEN') {
                    error = "只有OPEN状态可以进行" + status + "操作";
                }
            }
            if ("checkList" == dg || "notice" == dg) {
                var itemStatus = rows[i].IF_CLOSE;
                if (itemStatus != 'N') {
                    error = "只有未完成状态可以进行" + status + "操作";
                }
            }
        }
        if (error != "") {
            MsgAlert({content: error, type: 'error'});
            return;
        }
        var func = "";
        if ("todayTodo" == dg || "todo" == dg) {
            func = "PM_MC_HOTODO_BATCH";
        }
        if ("checkList" == dg || "notice" == dg) {
            func = "PM_MC_HONOTICE_BATCH";
        }
        InitFuncCodeRequest_({
            data: {pkids: pkids, status: status, FunctionCode: func},
            successCallBack: function (jdata) {
                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                    reload_(dg);
                    MsgAlert({content: $.i18n.t('msg_tip:TIP.COMMON.OPT_SUCCESS')});
                }
            }
        })
    }
    //字符串转日期
    function stringToDate(str) {
        str = str.substr(0, 10);
        var arr = str.split('-');
        var date = new Date(arr[0], arr[1] - 1, arr[2]);
        return date;
    }
    //计算当前日期和今天差的天数
    function diffDays(deadLine) {
        var evaDate = stringToDate(deadLine);
        var nowDate = new Date();
        var year = nowDate.getFullYear();
        var month = nowDate.getMonth();
        var day = nowDate.getDate();
        var now = new Date(year, month, day);
        var time_diff = evaDate.getTime() - now.getTime();
        var days = Math.floor(time_diff / (24 * 3600 * 1000));
        return days;
    }

    //待办任务Defect详情页面
    function showDefectDetail(id, no) {
        ShowWindowIframe({
            width: "1000",
            height: "700",
            title: '详情',
            param: {defectId: id, defectNo: no},
            url: "/views/defect/defectDetails.shtml"
        });
    }
    //待办任务TO详情页面
    function showToDetail(toId, type) {
        var url_ = "";
        if (type == '1') {
            url_ = "/views/mccdoc/view/view_fault_isolate_to.shtml";
        } else if (type == '2') {
            url_ = "/views/mccdoc/view/view_general_survey_to.shtml";
        } else if (type == '3') {
            url_ = "/views/mccdoc/view/view_other_to.shtml";
        } else if (type == '4') {
            url_ = "/views/mccdoc/view/view_other_to.shtml";
        }
        ShowWindowIframe({
            width: "1050",
            height: "650",
            title: '详情',
            param: {id: toId, toType: type, pageType: 'view'},
            url: url_,
        });
    }
    //历史日志history
    function history(pkid2, des) {
        common_add_edit_({
            identity: identity, isEdit: 0, width: 650, height: 400,
            param: {pkid2: pkid2, des: des},
            url: "/views/pm/mc/handover/mcc_ho_todo_history.shtml"
        });
    }
    //刷新
    function reload_(dg) {
        $("#" + dg).datagrid("reload");
    }
    //关闭
    function closeAdd() {
        $.messager.confirm('', '是否关闭', function (r) {
            if (r) {
                CloseWindowIframe();
                param.OWindow.reload_();
                $("#mform").form('clear');
            }
        });
    }
</script>
</body>
</html>