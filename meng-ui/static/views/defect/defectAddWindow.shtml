<!--
  ~ Copyright 2019 SF Airlines Co., Ltd. All rights reserved.
  ~ 本文件仅限于顺丰航空有限公司内部传阅，禁止外泄以及用于其他的商业目的。
  -->
<!--新建故障-->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>

<head id="i18n_" module="">
	<!--#include virtual="/views/items/resource_.shtml"-->
	<!--#include virtual="/views/defect/defect_js.shtml"-->
	<title></title>
	<style type="text/css">
		.table-cell {
			text-align: center;
			padding: 0;
			margin: 0;
		}
		.cell-normal {
			height: 40px;
		}
		.cell-low {
			height: 20px;
		}
		.require-sign {
			color: red;
		}
		.foot-btns{
			float: right;
			margin: 10px 20px 0 0;
		}
		.structure{
			display: none;
		}
	</style>
</head>
<body>
<table class="table table-bordered table-info">
	<tr>
		<div style="display: none" id="model"></div>
		<th class="table-cell cell-normal required" style="width: 22%"><span>Flight NO.</span></th>
		<th class="table-cell cell-normal required" style="width: 34%"><span>A/C</span></th>
		<th class="table-cell cell-normal required" style="width: 22%"><span>Station</span></th>
		<th class="table-cell cell-normal required" style="width: 22%"><span>DateTime</span></th>
	</tr>
	<tr>
		<td class="table-cell cell-normal"><input class="easyui-textbox" id="chooseFlight"></td>
		<td class="table-cell cell-normal"><input class="easyui-textbox"  id="ac" disabled="true" /></td>
		<td class="table-cell cell-normal"><input class="easyui-textbox"  id="station" disabled="true"/></td>
		<td class="table-cell cell-normal"><input id="chooseDate" type="text"/></td>
	</tr>
	<tr>
		<th class="table-cell cell-normal required"><span>ATA</span></th>
		<td class="table-cell cell-normal"><input class="easyui-textbox" id="ata" ></td>
	<th class="table-cell cell-normal"><span>DM</span></th><!--	<span id="dm_requierd" class="require-sign">*</span>-->
		<td class="table-cell cell-normal">
			<form style="color: black"  id="dm">
				<input type="radio" name="dm" id="dmYes" value="y">是
				<input type="radio" name="dm" id="dmNo" style="margin-left: 15px" value="n">否
			</form>
		</td>
	</tr>
<!--	<tr>-->
<!--		<th class="table-cell cell-normal required"><span>ZONE</span></th>-->
<!--		<td class="table-cell cell-normal"><input class="easyui-textbox" id="zone"></td>-->
<!--		<th class="table-cell cell-normal"></th>-->
<!--		<td class="table-cell cell-normal"></td>-->
<!--	</tr>-->
</table>
<table class="table table-bordered table-info" style="height: 320px">
	<tr>
		<th class="table-cell" rowspan="2" style="width: 6%"><span>FAULT REPORT</span></th>
		<th class="table-cell required"><span>Chinese</span></th>
		<td class="table-cell"><textarea id="chinese" maxlength="1000" style="height: 100%;width: 100%;resize: none;"></textarea></td>
	</tr>
	<tr>
		<th class="table-cell required"><span>English</span></th>
		<td class="table-cell"><textarea id="english" maxlength="1000" style="height: 100%;width: 100%;resize: none;"></textarea></td>
	</tr>
</table>
<table class="table table-bordered table-info" style="height: 70px">
	<tr>
		<th class="table-cell" rowspan="2" style="width: 15%"><span>Reported By</span></th>
		<td class="table-cell" rowspan="2" style="width: 13%">
			<form style="color: black" id="reportedBy">
				<input type="radio" name="reportedBy" id="reportedByPILOT" value="PILOT">PILOT<br/>
				<input type="radio" name="reportedBy" id="reportedByGND" style="margin-top: 5px" checked="checked" value="GND">GND&nbsp&nbsp
			</form>
		</td>
		<th class="table-cell" style="width: 20%"><span>Affected Engine</span></th>
		<th class="table-cell" style="width: 32%"><span>S/N</span></th>
		<th class="table-cell required" style="width: 20%"><span>Finder Sign.</span></th>
	</tr>
	<tr>
		<td class="table-cell"><input id="affectedEngine" name="affectedEngine" /></td>
		<td class="table-cell"><input class="easyui-textbox" id="sn" style="width: 80%"></td>
		<td class="table-cell"><input class="easyui-textbox" id="finderSign"></td>
	</tr>
</table>

<table class="table table-bordered table-info">
	<tr>
		<th class="table-cell cell-normal required" style="width: 15%;"><span>结构类</span></th>
		<td class="table-cell cell-normal" style="position: relative">
			<div class="zhezhao" style="display: none;position: absolute;width: 100%;height: 100%;left: 0;top: 0;"></div>
			<label><input id="structureY" name="structure" type="radio" value="y">YES</label>
			<label><input id="structureN" name="structure" style="margin-top: 5px" type="radio" value="n">NO</label>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal"><span>ZONE</span></th>
		<td class="table-cell cell-normal">
			<input class="easyui-textbox" id="zone" style="width:180px">
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal required">外观是否可见</th>
		<td class="table-cell cell-normal">
			<label><input id="canseeY" name="appearanceCansee" type="radio" value="y">可见</label>
			<label><input id="canseeN" name="appearanceCansee" style="margin-top: 5px" type="radio" value="n">不可见</label>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal required">检查方法</th>
		<td class="table-cell cell-normal">
			<input class="easyui-combobox" id="checkWayO"  style="width:180px"/>
			<span id="checkNdt" style="display: none">
				<input class="easyui-combobox" id="checkWayS"  style="width:180px"/>
			</span>
			<span id="checkOth" style="display: none">
				<input class="easyui-textbox" id="checkOthers"  style="width:180px"/>
			</span>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal required">工作指令号</th>
		<td class="table-cell cell-normal">
			<input class="easyui-combobox" data-options="required:true"  id="workNum"
				   style="width:180px"/>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal">维护级别</th>
		<td class="table-cell cell-normal">
			<input class="easyui-textbox"  id="fixLevel" readonly="true"
				   style="width:180px;border: none;"/>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal">相关工卡</th>
		<td class="table-cell cell-normal">
			<input class="easyui-combobox" data-options=""  id="cardRelate"
				   style="width:180px"/>
		</td>
	</tr>
	<tr class="structure">
		<th class="table-cell cell-normal required">缺陷类型</th>
		<td class="table-cell cell-normal" style="padding: 10px" id="defectTypes">
		</td>
	</tr>
</table>
<table class="table table-bordered table-info" id="attachmentTable" style="height: 70px">
	<tr>
		<th class="table-cell" style="width: 20%"><span>Attachment</span></th>
	</tr>
	<tr>
		<td class="table-cell" id="attachmentTips" style="width: 20%"><span>请先保存后再选择附件</span></td>
	</tr>
</table>
<div id="attachmengtList"></div>
<!-- <table class="table table-bordered table-info" style="height: 70px">
    <tr>
        <th class="table-cell" style="width: 22%; background-color: #fff">File Type</th>
        <th class="table-cell" style="width: 60%; background-color: #fff">File Path</th>
        <th class="table-cell" style="width: 18%; background-color: #fff">Operate Add</th>
    </tr>
    <tr>
        <td class="table-cell"><input id="fileType"/></td>
        <td class="table-cell">
            <input class="textbox easyui-validatebox" type="file" id="fileToUpload" size="300" name="file" />
        </td>
        <td class="table-cell">
            <div id="mytest"></div>
        </td>
    </tr>
</table> -->
<div class="foot-btns">
	<a id="upload_button" class="searchBtn" type="button" onclick="open_upload()" data-options="iconCls:'icon-clear'" style="margin-right: 10px;">
		<span data-i18n="common:COMMON_OPERATION.UPLOAD"></span>
	</a>
	<a class="searchBtn" type="button" onclick="save(operation)" data-options="iconCls:'icon-clear'" style="margin-right: 10px;">
		<span data-i18n="common:COMMON_OPERATION.SAVE"></span>
	</a>
	<a class="ridoBtn" type="button" onclick="close_window()" data-options="iconCls:'icon-clear'">
		<span data-i18n="common:COMMON_OPERATION.CANCEL"></span>
	</a>
</div>
</body>
<script type="text/javascript" src="/js/datagrid_utils.js"></script>
<script type="text/javascript">
	const params = getParentParam_();
	var alertParam = params.alertParam;
	console.info(params,'params')
	const operation = params.operation;
	const ininData = params.rowData;
	const userInfo = getLoginInfo();
	const plateau_flight = {"B-2840": 1, "B-2845": 1, "B-2839": 1};
	var ataList=new Array();
	const B747_engine_option = [{
		value: "1",
		text: "ENG1",
		id: "ENG1"
	}, {
		value: "2",
		text: "ENG2",
		id: "ENG2"
	}, {
		value: "4",
		text: "ENG3",
		id: "ENG3"
	}, {
		value: "5",
		text: "ENG4",
		id: "ENG4"
	}, {
		value: "3",
		text: "APU",
		id: "APU"
	}];

	const engine_option = [{
        value: "",
        text: "　",
        id: "ENG0"
    }, {
        value: "1",
        text: "ENG1",
        id: "ENG1"
    }, {
		value: "2",
		text: "ENG2",
		id: "ENG2"
	}, {
		value: "3",
		text: "APU",
		id: "APU"
	},
		// {
		// 	value: "",
		// 	text: "无",
		// 	id: "none"
		// }
	];
	// const checkWayO_option = [{
	// 	value: "1",
	// 	text: "一般目视"
	// }, {
	// 	value: "2",
	// 	text: "详细目视"
	// }, {
	// 	value: "3",
	// 	text: "NDT"
	// }, {
	// 	value: "4",
	// 	text: "其它"
	// },{
	// 	value: "5",
	// 	text: "敲击检查"
	// }
	// ];


	const file_type = [{
		value: "file",
		text: "file",
		id: "file"
	}];

	var global_data = {
		acId: "",

		filghtId: "",

		reviewType: "",
	};

	var alertEng = {
		"1":"1",
		"2":"2",
		"3":"4",
		"4":"5",
		"APU":"3"
	}


	function Other_matters(id) {
		if (id === 1) {
			if ($("#other").is(":checked")) {
				$('#attentionDesc').removeAttr("disabled");
			} else {
				$("#attentionDesc").attr("disabled", "disabled");
			}
		} else {
			if ($("#others").is(":checked")) {
				$('#hoReasonOther').removeAttr("disabled");
			} else {
				$("#hoReasonOther").attr("disabled", "disabled");
			}
		}

	}
	// $('#checkWayO').combobox({
	//
	// });
	function checkAtaValid() {
		var selectValue =$("#ata").textbox('getValue');
		var validAta = false;
		var index =ataList.indexOf(selectValue);
		if(ataList.indexOf(selectValue)!=-1)
		{
			validAta = true;
		}
		if (!validAta){
			$("#ata").textbox("clear");
		}
	}
	//底部上传按钮打开上传页面
	function open_upload(){
		var title_ = $.i18n.t('common:COMMON_OPERATION.UPLOAD');
		let param = {
			cat: "defect",//文件夹
			sourceId: params.rowData.id,//
			successCellBack: "",
			fialCellBack: ""
		};
		ShowWindowIframe({
			width: "1000",
			height: "700",
			title: title_,
			param: param,
			url: "/views/data_manager/dm/upload/attachment_add.shtml"
		});
	}

	function reload_(){
		$("#attachmengtList").empty();
		InitDataGrid(params.rowData.id, "defect")
	}

	function InitDataGrid(pkid, category) {
		InitFuncCodeRequest_({
			data: {
				SOURCE_ID: pkid,
				CATEGORY: category,
				FunctionCode: 'ATTACHMENT_RSPL_GET'
			},
			successCallBack: function (jdata) {
				//为0时提示没有上传附件，无法查看
				// if (jdata.data.length==0){
				//     MsgAlert({content: "请先上传附件", type: 'error'});
				//     return;
				// }
				for (var i = 0; i < jdata.data.length; i++) {
					var trHTML = '<tr align="left"><td class="td5" align="left" style="text-align:left;"><a target="_blank" onclick="downFile(' + jdata.data[i].PKID + ',' + jdata.data[i].PKID + ')">' + jdata.data[i].ORG_NAME + '</a></td><td class="td5" align="left" style="text-align:left;"><input class="btn btn-primary" type="button"  value="删除" style="width: 50px;margin:5px;" onclick="deleteFile(' + jdata.data[i].PKID + ');return false;"/></td></tr>';
					$("#attachmengtList").append(trHTML);//在table最后面添加一行
					// downFile(jdata.data[i].PKID,jdata.data[i].PKID);
				}
			}
		});
	}

	//底部保存按钮点击事件
	function save(option){
		// 规定控件id只能为station
		// let param = getParentParam_()
		// param.OWindow.$("#chooseFlight").textbox("setValue", "O123456");
		// // $('#stationQueryWindow').window('close'); //关闭弹窗
		// window.close();
		// return
		let post_data = get_post_data();
		if (!check_required(post_data)){
			return
		};
		ajaxLoading();
		let url = "";
		if(option == "add"){
			url = "/api/v1/defect/defect_base_info/add";
			if(params.hasOwnProperty('ac_data')){
				post_data.acId=params.ac_data.acId;
				post_data.acReg=params.ac_data.acReg;
				post_data.flightId=params.ac_data.flightId;
				post_data.flightNo=params.ac_data.flightNo;
				post_data.preFlightId=params.ac_data.preFlightId;
				post_data.preFlightNo=params.ac_data.preFlightNo;
				post_data.jobDate=params.ac_data.jobDate;
				post_data.minorModel=params.ac_data.minorModel;
				post_data.model = params.ac_data.model;
				post_data.station=params.ac_data.station;
				post_data.jobId=params.ac_data.jobId;
			}
			post_data.engPerAlertId = params.engPerAlertId || "";

		}else if(option == "edit"){
			url = "/api/v1/defect/defect_base_info/update";
			post_data.id = params.rowData.id;
		}
		// let final_data = params.rowData;
		// for(key in post_data){
		//     final_data[key] = post_data[key]
		// }
		axios.post(url, post_data).then(response=>{
			ajaxLoadEnd();
			if(response.data.msg.indexOf("ERROR") != -1){
				throw new Error(response.data.msgData[0])
			}else if(response.data.msg.indexOf("SUCCESS") != -1){
				alert("保存成功");
				if(post_data.engPerAlertId){
					params.OWindow.setDefectNo(response.data.data.defectNo);
				}else{
					params.OWindow.$("#common_list_grid").jqGrid().trigger("reloadGrid");
				}
				close_window()
			}
		}).catch(err=>{
			ajaxLoadEnd();
			alert("保存失败: " + err)
		})
	}

	//底部关闭按钮点击事件
	function close_window(){
		window.opener=null;
		window.open('','_self');
		window.close();
	}

	//收集将要提交的数据
	function get_post_data(){
        let flight_no = "", date_time = new Date(), dm = "", reported_by = "";
        let affected_engine = "", file_type = "", file_path = "", sn = "", finder_sign = "";
        let structure = "", zone = "", defect = "", checkMethod = "", checkMode = "", wo = "", maintenanceLevel = "",
            cardNumber = "";
        let defectType = "", checkModeOther = "";
		flight_no = $("#chooseFlight").val();
        date_time = $("#chooseDate").datetimebox('getValue');

		dm = $("input[name='dm']:checked").val();
		reported_by = $("input[name='reportedBy']:checked").val();

		zone = $("#zone").textbox("getValue");
		defect = $("input[name='appearanceCansee']:checked").val();
		structure=$("input[name='structure']:checked").val();
		checkMethod =$("#checkWayO").combobox("getValue");
		checkMode=$("#checkWayS").combobox("getValue");
        checkModeOther = $("#checkOthers").textbox("getValue");
		wo=$("#workNum").combobox("getValue");
		maintenanceLevel= $("#fixLevel").textbox('getValue');
		cardNumber=$("#cardRelate").combobox("getValue");

        var obj = document.getElementsByName("defectType");
        var check_val = [];
        for(var k in obj){
            if(obj[k].checked)
             check_val.push(obj[k].value);
        }

		defectType= check_val.join(',');

		affected_engine = $("#affectedEngine").combobox("getValue");
		// file_type = $("#fileType").combobox("getValue");
		// file_path = $.trim($('#fileToUpload').val());
		sn = $("#sn").textbox("getValue");
		finder_sign = $("#finderSign").textbox("getValue").match(/\((.+?)\)/)[1];

        //故障与损伤共用字段:机型、飞机号、章节号、发现日期、维修站点、中文描述、英文描述(后端处理）
        let minorModel = global_data.minorModel;
        let ac = $("#ac").textbox("getValue");
        let ata = $("#ata").textbox('getValue');
        let dataFound = new Date(date_time);
        let station = $("#station").textbox("getValue");
        let chinese = $("#chinese").val();
        let english = $("#english").val();

		let drBaseSubmitAsmsDTO = {
            //不处理：接近方式/处置说明/缺陷原因/位置与尺寸信息
            //后台处理：关联编号/用户工号/用户姓名

            zone:zone,//区域
            maintenanceLevel: maintenanceLevel,//维护级别
            wo: wo,//工作指令号
            cardNumber: cardNumber,//相关工卡
            checkMethod: checkMethod,//检查方法
            checkModeOther: checkModeOther,//检查方法其他
            checkMode: checkMode,//NDT类别
            defect: defect,//外观是否可见
            operator: 'SFN',//运营人(默认为SFN）
			defectType:defectType,
            equipment: 3,//录入设备，1：ASMSpc端，2:ASMS移动端，3：故障pc端，4：故障移动端(默认为3）
            defectTypeOther:$('#hoReasonOther').val()
		};
		let post_data = {
			acId: global_data.acId,
			acReg: ac,
			model: global_data.model,
            minorModel: minorModel,
			station: station,
			flightId: global_data.flightId,
			flightNo: global_data.flightNo||$('#chooseFlight').val(),
			jobId: global_data.jobId,
			jobDate: global_data.flightDate,
            dateFound: dataFound,
			ata: ata,
			dm: dm,
			faultReportChn: chinese,
			faultReportEng: english,
			defectOrigin: reported_by,
			engineType: affected_engine,
			// fileType: file_type,
			// filePath: file_path,
			reviewType: global_data.reviewType,
			engineSn: sn,
			// zone_no: zone,
			// zone_id: global_data.zone_id,
			technicianFoundNo: finder_sign,
			preFlightId: global_data.preFlightId,
			preFlightNo: global_data.preFlightNo,
			isStructureDamage: structure,
			drBaseSubmitAsmsDTO:drBaseSubmitAsmsDTO
		};
		return post_data
	}

	/* 选择飞机之后的回调函数, data为被选中的数据 */
	function choose_flight(data){
		if(!!plateau_flight[data.AC]){
			$("#dm_requierd").show()
		}else{
			$("#dm_requierd").hide()
		}
		$("#model").html(data.MODEL||"");
		$("#station").textbox("setValue", data.STATION);
		$("#ac").textbox("setValue", data.AC);
		$("#chooseFlight").textbox("setValue", data.PRE_FLIGHT_NO || data.FLIGHT_NO);
		global_data.acId = data.ACID;
		global_data.acReg = data.AC;
		global_data.model = data.MODEL;
		global_data.minorModel = data.MINOR_MODEL;
		global_data.reviewType = data.CHECK_TYPE;
		global_data.jobId = data.CURRENT_TASK_ID;
		global_data.flightId = data.FLIGHT_ID;
		global_data.flightNo = data.FLIGHT_NO;
		global_data.flightDate = data.FLIGHT_DATE;
		global_data.preFlightId = data.PRE_FLIGHT_ID;
		global_data.preFlightNo = data.PRE_FLIGHT_NO;
		let date = formatterDate(new Date());
		$("#chooseDate").datetimebox("setValue", date);
		$("#ata").textbox("clear");
		$("#sn").textbox("clear");
		if(data.MODEL == "B747"){
			$("#affectedEngine").combobox("clear");
			$("#affectedEngine").combobox({
				data: B747_engine_option
			})
		}
		if(global_data.reviewType && (global_data.reviewType == 'Po/F'||global_data.reviewType == 'O/G')){
			global_data.preFlightId = data.FLIGHT_ID;
			global_data.preFlightNo = data.FLIGHT_NO;
		}
		// init_zone(data.MODEL);
		// ata_data();
        ataSelectInit("hideTips");
		queryWoNo();
		$("#affectedEngine").combobox("clear");
		if(alertParam){
			$("#sn").textbox("setValue", alertParam.esn);
			$("#affectedEngine").combobox("setValue", alertEng[alertParam.pos]);
		}
	}

	//检查必填
	function check_required(data){
		console.info(data)
		try{
			if(!!plateau_flight[data.acReg] && !data.dm){
				throw {selector: "#ac", text: "高原航班dm必须填写"}
			}
			if(!data.acReg){
				throw {selector: "#ac", text: "A/C必须填写"}
			}
			if(!data.station){
				throw {selector: "#station", text: "station必须填写"}
			}
			if(!data.flightNo){
				throw {selector: "#chooseFlight", text: "flight No.必须填写"}
			}
			let date_time = $("#chooseDate").datetimebox('getValue');
			if(!date_time){
				throw {selector: "#chooseDate", text: "Date Time必须填写"}
			}
			if(!data.ata){
				throw {selector: "#ata", text: "ATA必须填写"}
			} else {
				let pattern = /^\d{4}$/;
				if (!pattern.test(data.ata)) {
					throw {selector: "#ata", text: "ATA必须是4位数字"}
				}
			}
			// if(!data.zone_no){
			// 	throw {selector: "#zone", text: "ZONE必须填写"}
			// }
			if(!data.faultReportChn){
				throw {selector: "#chinese", text: "中文故障报告必须填写"}
			}
			if(!data.faultReportEng){
				throw {selector: "#english", text: "英文故障报告必须填写"}
			}
			if(/[^a-zA-Z0-9`+-~!@#$%^&*()_,./?;:'"\\|\s\n\r\t]/g.test(data.faultReportEng)){
				throw {selector: "#english", text: "英文故障报告内容必须是英文数字或英文标点符号"}
			}
			if(!data.technicianFoundNo){
				throw {selector: "#finderSign", text: "finderSign必须填写"}
			}
			if(!data.isStructureDamage){
				throw {selector: "#structureY", text: "结构类必须填写"}
			};
			if(data.isStructureDamage == 'y'){
				if(!data.drBaseSubmitAsmsDTO.defect){
					throw {selector: "#canseeY", text: "外观是否可见必须填写"}
				};
				if(!data.drBaseSubmitAsmsDTO.checkMethod){
					throw {selector: "#checkWayO", text: "检查方法必须填写"}
				};
				if(!data.drBaseSubmitAsmsDTO.wo){
					throw {selector: "#workNum", text: "工作指令号必须填写"}
				};
				if(!data.drBaseSubmitAsmsDTO.defectType){
					throw {selector: "", text: "缺陷类型必须填写"}
				};

			};

		}
		catch(err){
			if(err.selector){
				$(err.selector).focus();
			}
			MsgAlert({type: "error", content: err.text});
			return false
		}
		return true
	}

	//如果是编辑模式，初始化数据
	function init_data(data, model){
		console.log(data);
		global_data.acId = data.acId;
		// global_data.zone_id = data.zone_id;
		global_data.jobId = data.jobId;
		global_data.model = data.model;
		global_data.minorModel = data.minorModel;
		global_data.reviewType = data.reviewType;
        global_data.flightId = data.flightId;
        global_data.flightNo = data.flightNo;
        global_data.preFlightId=data.preFlightId,
        global_data.preFlightNo=data.preFlightNo,
		$("#chooseFlight").textbox("setValue", data.flightNo);
		let date = formatterDate(new Date(data.dateFound));
		$("#ata").textbox('setValue', data.ata);
		checkDm(data.ata);
		if(data.dm == "y"){
			$("#dmYes").attr("checked", "checked");
		}else if(data.dm == "n"){
			$("#dmNo").attr("checked", "checked");
		}
		$("#reportedBy" + data.defectOrigin).attr("checked", "checked");
		$("input[name='reportedBy']:checked").val();
		$("#chinese").val(data.faultReportChn);
		$("#english").val(data.faultReportEng);
		$("#affectedEngine").combobox("setValue", data.engineType);
		// $("#fileType").combobox("getValue");
		// $('#fileToUpload').val();
		$("#sn").textbox("setValue", data.engineSn);
		$("#ac").textbox("setValue", data.acReg);
		$("#station").textbox("setValue", data.station);
		// zone = $("#zone").textbox("getValue")
		$("#finderSign").textbox("setValue", data.technicianFoundNo);
        // init_zone(model, data.zone_no)
		// $("#zone").combobox("setValue", data.zone_no);
		var str = $("input[name='structure']");
		str.each(function(i) {

			if(data.isStructureDamage == 'y'){
				$("input[name='structure']").eq(0).attr('checked','checked')
				$('.structure').css({display:'table-row'})
			}else{
				$("input[name='structure']").eq(1).attr('checked','checked')
				$('.structure').css({display:'none'})

			}

		});
        if(data.drBaseSubmitAsmsDTO){
            global_data.drBaseSubmitAsmsDTO = true;
            init_damage_data(data);
        };
		$("#chooseDate").datetimebox({ disabled: true });
		$("#chooseDate").datetimebox('setValue', date);


	}

    //回显损伤信息
    function init_damage_data(data) {
        //损伤报告与故障共享字段不用处理:小机型、飞机号、章节号、发现日期、维修站点、中文描述、英文描述
        //不处理：运营人、录入设备
        if(operation == 'edit'){
            $("input[name='structure']").attr('disabled',true);
            $("input[name='appearanceCansee']").attr('disabled',true);
            //区域
            $("#zone").textbox("setValue", data.drBaseSubmitAsmsDTO.zone);
            $("#zone").textbox('textbox').attr('readonly',true);
            //维护级别
            $("#fixLevel").textbox("setValue", data.drBaseSubmitAsmsDTO.maintenanceLevel);
            $("#fixLevel").textbox('textbox').attr('readonly',true);

            //工作指令号
            $("#workNum").combobox("setValue", data.drBaseSubmitAsmsDTO.wo);
            $("#workNum").combobox('readonly',true);

            //相关工卡
            $("#cardRelate").combobox("setValue", data.drBaseSubmitAsmsDTO.cardNumber);
            $("#cardRelate").combobox('readonly',true);

            //检查方法
            $("#checkWayO").combobox("setValue", data.drBaseSubmitAsmsDTO.checkMethod);
            $("#checkWayO").combobox('readonly',true);

            //检查方法其他
            $("#checkOthers").textbox("setValue", data.drBaseSubmitAsmsDTO.checkModeOther);
            //NDT类别
            $("#checkWayS").combobox("setValue", data.drBaseSubmitAsmsDTO.checkMode);
            $("#checkWayS").combobox('readonly',true);

            //外观是否可见
            if(data.drBaseSubmitAsmsDTO.defect == 'y')
            {
                $("input[name='appearanceCansee']").eq(0).attr('checked','checked')
            }
            if(data.drBaseSubmitAsmsDTO.defect == 'n'){
                $("input[name='appearanceCansee']").eq(1).attr('checked','checked')

            }
            // $("input[name='appearanceCansee']:checked").val(data.drBaseSubmitAsmsDTO.defect);

            var typeArr = data.drBaseSubmitAsmsDTO.defectType.split(',')
            for(var i in typeArr){
                if(typeArr[i] == 12){
                    $('#hoReasonOther').val(data.drBaseSubmitAsmsDTO.defectTypeOther)
                }
                var obj = document.getElementsByName("defectType");
                for(var k in obj){
                    obj[k].disabled = true;
                    if(obj[k].value == typeArr[i]){
                        obj[k].checked = true
                    }
                }
            }

        }

    }

	//编辑时获取基本信息
	function get_base_info(){
		let url = "/api/v1/defect/defect_base_info/viewById";
		let form = new FormData();
		let defectId = params.rowData.id;
		form.append('id', defectId);
		let opt = {};
		opt.headers = {
			'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
		};
		axios.post(url, form, opt).then(response=>{
			if(response.data.msg.indexOf("SUCCESS") != -1){
				// console.log("data");
				// console.log(response.data.data.defectBaseInfo);
				response.data.data.btnFlag.toNrcFlag && $('.zhezhao').css('display','block')  //转nrc故障 结构类不能编辑
				global_data.flightDate = response.data.data.workOrder.jobDate;
				init_data(response.data.data.defectBaseInfo, response.data.data.mpAcType)
			}else if(response.data.msg.indexOf("ERROR") != -1){
            if (response.data.msgData && response.data.msgData[0]) {
                throw new Error(response.data.msgData[0]);
            } else if (response.data.data) {
                throw new Error(response.data.data);
            } else {
                throw new Error("查询数据失败");
            }
			}
		}).catch(err=>{
			MsgAlert({type: "error", content: err.message})
		})
	}

	// function init_zone(model, value) {
	// 	axios.get("/api/v1/eo_zone/list/?model=" + model).then(response => {
	// 		$("#zone").combobox({
	// 			data: response.data.data.eoZoneList,
	// 			panelHeight: '150px',
	// 			valueField: 'zone',
	// 			textField: 'zone',
	// 			onSelect: item=>{
	// 				global_data.zone_id = item.id;
	// 				global_data.zone_flag = 1;
	// 			},
	// 			onChange: item=>{
	// 				global_data.zone_flag = 0;
	// 			}
	// 		});
	// 		$("#zone").next("span").children("input:first").blur(function(){
	// 			if(!global_data.zone_flag){
	// 				$("#zone").combobox("clear")
	// 			}
	// 		});
	// 		if(value){
	// 			$("#zone").combobox("setValue", value)
	// 		}
	// 	})
	// }

	/** 添加必填标志 **/
	function add_require(){
		$(".required").append("<span style='color: red'>*</span>")
	}

	// function ata_data() {
	// 	let ac = $("#ac").textbox("getValue");
	// 	let atadata = [];
	// 	$("#ata").combobox({
	// 		valueField: 'id',
	// 		textField: 'id',
	// 		url: "/api/v1/ata/selectATA?model=" + ac,
	// 		// param: {FunctionCode: 'FLB_AC_LIST'},
	// 		prompt: '请先选择',
	// 		// pagination:false,
	// 		loadFilter: function (data) {
	// 			if (data.data) {
	// 				ataList = data.data;
	// 				for (let i in data.data) {
	// 					atadata.push({
	// 						id: data.data[i]
	// 					})
	// 				}
	// 				return atadata;
	// 			} else {
	// 				return data;
	// 			}
	// 		},
	// 		onSelect: function (val) {
	// 			console.log(val);
	// 			checkDm(val)
	//
	// 		}
	// 	});
	// }

	//*************
	/**
	 * 功能，搜索ATA，model必输，
	 * 获取ATA  $("#ata").textbox('getValue');
	 * 设置ATA  $("#ata").textbox('setValue', data.ata);
	 * html <input class="easyui-textbox" id="ata" >
	 * 直接引入该文件，执行函数 ataSelectInit()
	 * 参数：modelTips 是可以配置的提示语
	 *
	 * */

//ATA数据查询
	var ataData=[] ;
	function ataDataSearch(){
		//这里必须使用两种取值方式，getValue取值是选择组件里包含的真实值，getText是组件里的显示的值
		//正常输入两个值相等，当使用上下键选择的时候就会出现不同的结果
		var model = $("#model").html() || "";
		var ata = $("#ata").textbox("getValue");
		var ataText = $('#ata').combobox('getText');
		//只针对nrc编辑的时候，判断是否发动机类型,是就加上发动机参数，不是就直接传空值
		var engine = "";
		var ac = "";
		if ($("#faji").is(":checked")) {
			engine = $("#ac_type_input").textbox("getValue");
			ac =  $("#ac").html() || "";
		}else if ($("#feiji").is(":checked")){
			model = $("#ac_type_input").textbox("getValue").slice(0, 4)|| "";
		};
		//根据按上下键选择选项的时候，输入框一定超过4个字符的特性，防止在选择的时候进行搜索
		if(ata.length > 1 && ataText.length<5) {
			$.ajax({
				url: "/api/v1/ata/selectBmManualAtaByFleetAndAta?fleet=" + model + "&ata=" + ata + "&engine="+engine,
				dataType: "json",
				contentType: 'application/json;charset=utf-8',
				type: 'POST',
				// data: postData,
				async: true,
				cache: false,
				success: function (obj, textStatus) {
					var getData = obj.data;
					ataData = [];
					for (var i = 0; i < getData.length; i++) {
						var labelValue = {};
						if(!!getData[i].companyCode && getData[i].companyCode == '1'){
							//根据后端返回的标识确定输入章节号+手册名称+发动机型号+标题
							if(!!getData[i].engine){
								labelValue.label = getData[i].chapter + " " + getData[i].manualType + " "+getData[i].engine + " " + getData[i].title;
							}else {
								labelValue.label = getData[i].chapter + " " + getData[i].manualType +  " " + getData[i].title;
							};
						}else {
							labelValue.label = getData[i].chapter + " " + getData[i].title;
						};
						//加上空格号是为了在输入一个正确四位ATA的时候，不要把数组第一个给带进来
						labelValue.value = getData[i].chapter+" ";
						ataData.push(labelValue);
					};
					$('#ata').combobox('loadData', ataData);
				},
				error: function () {
					ajaxLoadEnd();
					$('#saveBtn').text("保存");
				}
			});
		}
	}

	//ATA组件初始化
	function ataSelectInit(modelTips){
		//selectFlage 用来解决当清空后直接按回车键导致重新赋值的问题
		var selectFlage = 0;
		var modelTips = modelTips||"建议先选择‘Flight NO.’";
		$("#ata").combobox({
			editable: true,
			data:ataData,
			panelHeight: 160,
			valueField: 'value',
			textField: 'label',
			width:300,
			hasDownArrow:true,
			multiple:false,
			//在选择的时候做操作
			onSelect: (val) => {
				selectFlage = 1;
				// checkDm(val)
			},
			onLoadSuccess : () => {
			},
			onChange:()=>{
				selectFlage = 0;
				var inputAta = $("#ata").combobox('getText');
				var ac = $("#model").html()||"";
				if(!ac && inputAta.length == 1 && modelTips != "hideTips"){
					MsgAlert({type: "tip", content: modelTips});
				};
				ataDataSearch();
				if(inputAta.length > 3){
					var postAta = inputAta.slice(0, 4);
					checkDm(postAta);
				};
			}
		});
		//eventAta 用来解决使用上下键+回车键选择后，失去焦点时数据被清空需要重新进行赋值的问题
		var eventAta = "";
		$("#ata").next("span").children("input:first").blur(function () {
			//如果使用回车键选中
			setTimeout(function(){
				var ataNow = $("#ata").textbox("getValue")||eventAta;
				if(ataNow.length>3 && !!selectFlage){
					$("#ata").textbox("setValue", ataNow.slice(0,4));
				}else if(ataNow.length<4 || !selectFlage){
					$("#ata").textbox("setValue", "");
				}
			},300);});
		//解决当用户输入一个正确的四位章节号后，点击回车键出现输入框带入描述的问题
		$("#ata").next("span").children("input:first").keydown(function () {
			if(event.keyCode == "13") {
				var ataNow = $("#ata").combobox('getText');
				if(ataNow.length>3){
					$("#ata").textbox("setValue", ataNow.slice(0,4));
					eventAta = ataNow.slice(0,4);
					selectFlage = 1;
				}
			}
		});
        $("#ata").next("span").children("input:first").focus(function () {
			var getAtaData = $("#ata").combobox('getText');
			if(!!getAtaData && getAtaData.length == 4){
				selectFlage = 1;
			};
        });
	}



	//***********



	function checkDm(val) {
		InitGatewayRequest_({
			type: "post",
			async: false,
			data: {
				ata:val,
				applyType:'APL',
				// acReg:$("#ac").textbox("getValue"),
				applyId:global_data.acId,
				// model: global_data.model,
				// minorModel: global_data.minorModel
			},
			path: "/maintenanceProduction/maintainLimit/selectDmLimit",
			successCallBack: function (jdata) {
				if (jdata.success == true) {
					if(jdata.obj.isDm && jdata.obj.isDm == 1){
						$("#dmYes").prop("checked", "checked");
						$("input[name='dm']").attr('disabled',true);

					}else{
						$("input[name='dm']").attr('disabled',false);

					}
				} else {
					MsgAlert({content: jdata.errorMessage, type: 'error'});
				}
			}
		});
	}

	//checkWayS_data

	function queryDictionariesFromAsms(id,url) {
		let atadata = [];
			$(id).combobox({
				valueField: 'id',
				textField: 'id',
				url: url,
				prompt: '请先选择',
				loadFilter: function (data) {
					if (data.data) {
						ataList = data.data.result;
						for (let i in ataList) {
							atadata.push({
								id: ataList[i].name
							})
						}
						return atadata;
					} else {
						return data;
					}
				},
				onSelect: function (val) {
				}
			});

	}
	function queryDictionariesFromAsms(id, keypath) {
		axios.get("/rs/damage/drBase/queryDictionariesFromAsms?keyPath=" + keypath).then(response => {
			$(id).combobox({
				data: response.data.data.result,
				panelHeight: '150px',
				valueField: 'value',
				textField: 'name',
				onSelect: item => {
					// global_data.zone_id = item.id;
					// global_data.zone_flag = 1;
				},
				onChange: function (n, o) {
				    if(id == '#checkWayO'){
                        if (n == '4') {
                            $('#checkOth').css({'display': 'inline'});
                        }else{
                            $('#checkOth').css({'display': 'none'});
                            $("#checkOthers").textbox("setValue", "");
                        }
                        if (n == '3') {
                            $('#checkNdt').css({'display': 'inline'});
                        }else{
                            $('#checkNdt').css({'display': 'none'});
                            $("#checkWayS").combobox("setValue", "");
                        }
                    }

				},
				onLoadSuccess: function () { //加载完成后,设置选中第一项
					if(id == '#checkWayO'){
                        var data = $(this).combobox("getData");
                        if (data && data.length > 0) {
                            $(this).combobox("setValue", data[0].value);
                        }
					}


				}
			});
			// $("#zone").next("span").children("input:first").blur(function () {
			// 	if (!global_data.zone_flag) {
			// 		$("#zone").combobox("clear")
			// 	}
			// });
		})
	}
	//查询工作指令号
	function queryWoNo() {
        let postData = {
            ac: $("#ac").textbox("getValue"),
            drDate: new Date($("#chooseDate").datetimebox('getValue'))
        };


        if(operation == 'edit' && global_data.drBaseSubmitAsmsDTO){

        }else{
            var obj = {};
            console.log(global_data.reviewType,'global_data.reviewType');
            if(global_data.reviewType == 'O/G' ){
                console.info(global_data.reviewType);
                obj = {
                    woNo:'OG Flight',
                    type:'O/G'
                }
            }
            if(global_data.reviewType == 'T/R' ){
                console.info(global_data.reviewType);
                obj = {
                    woNo:'Tr Flight',
                    type:'T/R'
                }
            }
            if(global_data.reviewType == 'Pr/F' ){
                console.info(global_data.reviewType);
                obj = {
                    woNo:'Pre Flight',
                    type:'Pr/F'

                }
            }
            if(global_data.reviewType == 'Po/F' ){
                console.info(global_data.reviewType);
                obj = {
                    woNo:'Post Flight',
                    type:'Po/F'

                }
            }
			if(global_data.reviewType == 'TBFTR' ){
				console.info(global_data.reviewType);
				obj = {
					woNo:'Tr Flight',
					type:'TBFTR'

				}
			}
            axios.post("/rs/asms/toolInfo/queryWoNoByAcAndDateForTd", postData).then(response => {
                $("#workNum").combobox('setValue','')
                response.data.data.result.unshift(obj);
                console.log(response.data.data.result);
                // let ac = $("#ac").textbox("getValue");
                // axios.get("/rs/asms/toolInfo/queryWoNo?ac=" + ac+"&woNo=").then(response => {
				var typeObj = {
					'O/G':1,
					'T/R':1,
					'Pr/F':1,
					'Po/F':1,
				}
                $("#workNum").combobox({
                    data: response.data.data.result,
                    panelHeight: '150px',
                    valueField: 'woNo',
                    textField: 'woNo',
                    onSelect: item => {
                        //选中后自动带出维护级别
                        $("#fixLevel").textbox("setValue",item.type);
                        if(typeObj[item.type]){
							queryDefaultCard();
						}else{
							queryCard(item.woNo,"");

						}
                    },
                    onChange: item => {
                    },
                    onLoadSuccess: function () { //加载完成后,设置选中第一项

                        var data = $(this).combobox("getData");
                        if (data && data.length > 0) {
                            $(this).combobox("setValue", data[0].woNo);
                            $("#fixLevel").textbox("setValue",data[0].type);
                            queryDefaultCard();
                        }

                    }
                });
            })
        }

	}
	//查询相关工卡
	function queryDefaultCard() {
		axios.get("/api/v1/station_task/list_routine_task_by_parent_id?parentId=" + global_data.jobId).then(response => {
		    console.log( response.data,' response.data')
			$("#cardRelate").combobox({
				data: response.data.data,
				panelHeight: '150px',
				valueField: 'cardNumber',
				textField: 'cardNumber',
				onSelect: item => {

				},
				onChange: item => {
				}
			});
		})
	}
	function queryCard(woNo,cardNo) {
		axios.get("/rs/asms/toolInfo/queryCard?woNo=" + woNo+"&cardNo="+cardNo).then(response => {
			$("#cardRelate").combobox({
				data: response.data.data.result,
				panelHeight: '150px',
				valueField: 'cardNo',
				textField: 'cardNo',
				onSelect: item => {

				},
				onChange: item => {
				}
			});
		})
	}
	//查询缺陷类型
	function queryDefectTypes() {
		axios.get("/rs/damage/drBase/queryDefectTypes").then(response => {
			//response.data.data.result
			let dataList = response.data.data.result;
			if(dataList){
				let html;
				for (let i in dataList) {
					html=`<input name="defectType" onclick="chooseType('${dataList[i].name}',this)" class="input_checkbox" id="fs${dataList[i].value}"  type="checkbox" value=${dataList[i].value}><label>${dataList[i].name}</label>`;
					$("#defectTypes").append($(html));
				}
				html+=`<div class="input_div" style="margin: 10px 0"><input class="beiliao" disabled="true"  id="hoReasonOther" style="width: 85%;"type="text"></div>`;
				$("#defectTypes").append($(html));
			}
		})
	}
	function chooseType(name,that) {
        if('其他' == name.trim() && that.checked){
            $('#hoReasonOther').attr('disabled',false);
        }
        if('其他' == name.trim() && !(that.checked)){
            $('#hoReasonOther').val('');
            $('#hoReasonOther').attr('disabled',true);
        }
    }

    function initDefectInfo(){
		if(!alertParam){
			return;
		}

		$("#ac").textbox("setValue", alertParam.acno);
		$("#sn").textbox("setValue", alertParam.esn);
		$("#chinese").val(alertParam.alertDesc);
		$("#english").val(alertParam.faultReforence);
		$("#affectedEngine").combobox("setValue", alertEng[alertParam.pos]);
		$("#chooseDate").datetimebox("setValue", alertParam.alertDate);
	}

	function init_page(){

		$('#chooseFlight').textbox({
			editable: false,
			icons: [{
				iconCls:'icon-search',
				handler: function(e){
					let ac = $("#ac").textbox("getValue");
					if(ac){
						$.chooseFlight({
							success: choose_flight,
							filter:{
								ac:ac
							}
						})
					}else{
						$.chooseFlight({
							success: choose_flight
						})
					}
				}
			}]
		});
		$("#chooseDate").datetimebox({
			showSeconds: true,
			editable: false
		});
		$("#chooseDate").datetimebox().datetimebox('calendar').calendar({
			validator: function(date){
				var now = new Date();
				var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate());
				var d2 = new Date(now.getFullYear(), now.getMonth(), now.getDate()+10);
				return date<=now;
			}
		});
		// ata_data();
        ataSelectInit("hideTips");
		//检查方法数据
		queryDictionariesFromAsms("#checkWayO","DamageSetting_CheckMethod");
		queryDictionariesFromAsms("#checkWayS","DamageSetting_CheckMode");

		//工作指令号
		//method = "/rs/asms/toolInfo/queryWoNo?";
	//	queryDictionariesFromAsms("#workNum",method+"ac="+"B-2829"+"&woNo="+"1");
	// 	queryWoNo("B-2829","");

		//查询缺陷类型数据
		queryDefectTypes();
        $("#chooseDate").datetimebox({
            onChange: function () {
                queryWoNo()
            }
        });
		$("#affectedEngine").combobox({

			onChange: function () {
				var eng = $("#affectedEngine").combobox('getValue');
				var engType;
				var engPosition;

				if (eng == 1) {
					engPosition = "1";
				} else if (eng == 2) {
					engPosition = "2";
				} else if (eng == 4) {
					engPosition = "3";
				} else if (eng == 5) {
					engPosition = "4";
				} else {
					engPosition = "";
				}
				if (eng == 1 || eng == 2 || eng == 4 || eng == 5) {
					engType = "1";
				} else if (eng == 3) {
					engType = "2";
				}

                if (!engType) {
                    $("#sn").textbox("setValue", "");
                    return;
                }

				var parameter =
						{
							"acReg": global_data.acId,
							"engPosition": engPosition,
							"engType": engType
						};

				//异步请求
				$.ajax({
					url: '/api/v1/defect/defect_base_info/getEngSN',
					type: "POST",
					data: parameter,
					success: function (obj) {
						if (obj.data.ajaxResult.indexOf("success") != -1) {
							if(obj.data.SN) $("#sn").textbox("setValue", obj.data.SN);
						} else {
							// $("#sn").textbox("setValue", "");
						}
					}
				});
			},
			data: engine_option,
			panelHeight:'auto',
			valueField: 'value',
			textField: 'text',
			editable: false
		});
		// $("#checkWayO").combobox({
		// 	data: checkWayO_option,
		// 	panelHeight:'auto',
		// 	valueField: 'value',
		// 	textField: 'text',
		// 	editable: false
		// });
		// init_zone();


		$("#fileType").combobox({
			data: file_type,
			panelHeight:'auto',
			valueField: 'value',
			textField: 'text',
		});
		var aa="";
		if(params.hasOwnProperty('ac_data')){
			aa=params.ac_data.userName+"("+params.ac_data.accountNumber+")";
		}else if(params.hasOwnProperty('alertParam')){
            aa=params.alertParam.userName+"("+params.alertParam.accountNumber+")";
		}else {
			aa=userInfo.userName+"("+userInfo.accountNumber+")";
		}
		$("#finderSign").textbox({
			value: aa,
			editable: false,
			icons: [{
				iconCls:'icon-search',
				handler: function(e){
					$.dialog.setting.extendDrag = true;
					UserUtils.showDialog({
						callback:function(data){
							let user_info = data[0];
							$("#finderSign").textbox("setValue", user_info.userName + "(" + user_info.sn + ")")
						}
					});
				}
			}, {
				iconCls:'icon-cross',
				handler: function(e){
					$("#finderSign").textbox("setValue", "")
				}
			}]
		});
		if(operation === "edit") {
			get_base_info()
		}
		if(params.operation === "edit"){
			InitDataGrid(params.rowData.id, "defect");
			$("#attachmentTips").hide()
		}else{
			$("#upload_button").hide()
		}


		initDefectInfo();
		// console.log("222222222222222")
		// console.log($("#zone").next("span").children("input:first"))
		// $("#zone").next("span").children("input:first").blur(function(){
		//     alert(12);
		// });

		// $("#zone").textbox("textbox").blur(function(){
		//     alert(11);
		// });
	}

	$(function(){

		add_require();
		init_page();
		if(params.hasOwnProperty('ac_data')){
			 $('#chooseFlight').textbox("setValue",params.ac_data.flightNo);
			$('#ac').textbox("setValue",params.ac_data.acReg);
			$('#station').textbox("setValue",params.ac_data.station);
			$('#chooseDate').datetimebox("setValue",params.ac_data.jobDate);
			$("#chooseFlight").next().find(".textbox-addon").hide();
			global_data.model = params.ac_data.model;
            // init_zone(params.ac_data.model);
		}
		var s = $("input[name='structure']");
		s.each(function(i) {
			$(this).click(function(){
				if(this.value == 'y'){
					$('.structure').css({display:'table-row'})
				}else{
					$('.structure').css({display:'none'})

				}
			});
		});
	})
</script>
</html>