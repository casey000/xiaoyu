<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head id="i18n_" module="">
    <meta http-equiv="X-UA-Compatible" content="IE=8;IE=9;IE=10;IE=11;IE=EDGE"/>
    <!--#include virtual="/views/items/resource_.shtml"-->
    <script src="/js/workflow/activiti_workflow.js" type="text/javascript"></script>
    <script src="/js/jquery.media.js" type="text/javascript"></script>
    <style type="text/css">
        ._historyDg th {
            color: #333;
            font-size: 14px;
            font-family: '\5FAE\8F6F\96C5\9ED1', Tahoma, Arial, Helvetica, sans-serif, "open sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            border: 1px solid #E6E6E6;
            cellspacing: 0;
            cellpadding: 0;
            border-collapse: collapse;
            border-spacing: 0px;
        }

        ._historyDg {
            color: #333;
            font-size: 14px;
            font-family: '\5FAE\8F6F\96C5\9ED1', Tahoma, Arial, Helvetica, sans-serif, "open sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
            border: 1px solid #E6E6E6;
            cellspacing: 0;
            cellpadding: 0;
            border-collapse: collapse;
            border-spacing: 0px;
        }

        ._historyDg td {
            width: 150px;
            padding: 0 4px;
            border-left: 1px solid #E6E6E6;
            border-top: 1px solid #E6E6E6;
        }

        ._historyDg tr {
            height: 25px;
        }
    </style>
    <title></title>
    <script type="text/javascript">
        var url;
        var key;
        var param = {};
        var TASK_STATE_MAP = {
            "N": "未执行", "F": "已完成", "T": "已终止",
            "R": "已退回", "J": "已跳转", "H": "已转办"
        };

        function i18nCallBack() {
            key = GetUrlPars(window.location).BUSINESS_KEY_; //oa推送过来
            if (!key) {
                param = getParentParam_();
                key = param.BUSINESS_KEY
            }
            InitFuncCodeRequest_({
                data: {key: key, FunctionCode: "Y_WORKFLOW_GET_HISTORY"},
                successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        param = jdata.data;
                        if (!jdata.data) {
                            return;
                        }
                        $("#workflow").DiagramWorkFlow({
                            imageUrl: "/api/activiti/diagram/flowimage?procInstId=" + param.PROC_INST_ID_,   //流程图url
                            traceUrl: '',
                            isRevert: true,//是否还原展示流程图，{还原Activiti裁剪后的流程图，即将偏移量x=x+minX,y=y+minY}
                            offsetX: 0,  //偏移量X
                            offsetY: 0   //偏移量Y
                        });
                        InitFuncCodeRequest_({
                            data: {procInstId: param.PROC_INST_ID_, FunctionCode: "WS_FLOW_HIS_TASK_LIST"},
                            successCallBack: function (jdata) {
                                if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                    var _data = jdata.data;
                                    var _htmls_0 = "<table><tr><th>审批角色</th><th>办理人员</th><th>审批意见</th><th>任务状态</th><th>开始时间</th><th>完成时间</th><th>耗时</th></tr>";
                                    if (_data) {
                                        for (var i = 0; i < _data.length; i++) {
                                            _htmls_0 += "<tr><td>" + undefinedToString(_data[i].TASK_NAME) + "</td><td>" + undefinedToString(_data[i].OPERATOR_UNAME) + "</td><td>" +
                                                undefinedToString(_data[i].TASK_NOTES) + "</td><td>" + undefinedToString(taskStatus(_data[i].ACT_STATE, _data[i].RECORD_STATE)) +
                                                "</td><td>" + undefinedToString(_data[i].START_TIME) + "</td><td>" + undefinedToString(_data[i].END_TIME) +
                                                "</td><td>" + undefinedToString(toMsTimeString(_data[i].DURATION || _data[i].DURATION_0)) + "</td></tr>";
                                        }
                                    }
                                    _htmls_0 += "</table>";
                                    $("#historyDg").append(_htmls_0);
                                }
                            }
                        });
                    } else {
                        MsgAlert({content: jdata.msg, type: 'error'});
                    }
                }
            });
            InitFuncCodeRequest_({
                data: {key: key, FunctionCode: "Y_WORKFLOW_GET_PDF_DATA"}, successCallBack: function (jdata) {
                    if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                        var datas = jdata.data;
                        if (datas.DOC_URL && datas.DOC_NAME)
                            url = datas.DOC_URL + datas.DOC_NAME;
                        $('#iframe0').attr('src', '/views/YWorkFlow/YWorkFlowPdf.shtml');
                        if (!datas.DOC_NAME) {
                            MsgAlert({content: '业务信息PDF文件名为空', type: 'error'});
                        }
                        if (!datas.DOC_URL) {
                            MsgAlert({content: '业务信息PDF文件请求路径为空', type: 'error'});
                        }
                        initDataGrid(datas.ENTITY_NUM, datas.ENTITY_TYPE)
                    } else {
                        MsgAlert({content: jdata.msg ? jdata.msg : jdata.data, type: 'error'});
                    }
                }
            });
        }

        // 将undefined转换成''
        function undefinedToString(_value) {
            if (!_value || typeof(_value) == 'undefined') {
                return "";
            } else {
                return _value;
            }
        }

        // 获取任务状态
        function taskStatus(actState, recordState) {
            var v = [TASK_STATE_MAP[actState]];
            if (recordState && recordState != 'N' && recordState != 'F') {
                v.push(TASK_STATE_MAP[recordState])
            }
            return v.join(",")
        }

        function initDataGrid(num, type) {
            $("#r_dg").MyDataGrid({
                identity: "r_dg",
                sortable: true,
                pagination: false,
                singleSelect: true,
                queryParams: {OBJNR: num, ENTITY_TYPE: type},
                pageSize: 4, pageList: [4],
                columns: {
                    param: {FunctionCode: 'SAP_ZFTP_GET'},
                    alter: {
                        FILENAME: {
                            formatter: function (value, row, index) {
                                return '<a href="javascript:void(0);" rowindex="' + index + '" class="attach">' + value + '</a>'
                            }
                        }
                    }
                },
                onClickRow: function (rowIndex, rowData, value) {
                    if (!rowData) {
                        return;
                    }
                    InitFuncCodeRequest_({
                        data: {
                            pkid: '',
                            myurl: rowData.DRE_URL,
                            filename: rowData.FILENAME,
                            FunctionCode: 'SYS_HTTP_FTP_DOWN'
                        },
                        successCallBack: function (jdata) {
                            if (jdata.code == RESULT_CODE.SUCCESS_CODE) {
                                doPost(Constant.API_URL + "SYS_HTTP_FTP_DOWN", {
                                    pkid: '',
                                    myurl: rowData.DRE_URL,
                                    filename: rowData.FILENAME,
                                    down: 'Y'
                                });
                            } else {
                                MsgAlert({content: jdata.msg, type: 'error'});
                            }
                        }
                    });
                }
            })

        }

        function GetUrlPars() {
            var url = location.search;
            var theRequest = {};
            if (url.indexOf("?") != -1) {
                var str = url.substr(1);
                strs = str.split("&");
                for (var i = 0; i < strs.length; i++) {
                    var sTemp = strs[i].split("=");
                    theRequest[sTemp[0]] = (sTemp[1]);
                }
            }
            return theRequest;
        }
    </script>
</head>
<body class="ibody">
<form class="form-horizontal m-t" id="mform" style="margin-top: 0px;">
    <div id="tabs" class="easyui-tabs">
        <div id="tab01" title="正文信息">
            <table class="table table-bordered table-info">
                <tbody id="custom_options"></tbody>
            </table>
            <iframe class="J_iframe" id="iframe0" name="iframe0" width="100%" height="500px"
                    src="/views/YWorkFlow/YWorkFlowPdf.shtml" frameborder="0" data-id="index_v1.html" seamless></iframe>
            <div id="mlayout" class="easyui-layout" style="height: 25%;">
                <div id="lay_right" data-options="">
                    <td>
                        <table id="r_dg"></table>
                    </td>
                </div>
            </div>
        </div>
        <div id="tab02" title="流程节点" style="">
            <div id="workflow" style="overflow-x: scroll;"></div>
        </div>
        <div id="tab03" title="批办过程" style="">
            <div id="historyDg" class="_historyDg" style=""></div>
        </div>
    </div>
</form>
<script type="text/javascript" src="/js/datagrid_utils.js">
</script>
</body>
</html>